FC_DEBUG=4
Add Rule(kind:0, name: /etc/fonts/fonts.conf) [test]
	pattern any family Equal "mono"
[edit]
	Edit family Assign "monospace";

Add Rule(kind:0, name: /etc/fonts/fonts.conf) [test]
	pattern any family Equal "sans serif"
[edit]
	Edit family Assign "sans-serif";

Add Rule(kind:0, name: /etc/fonts/fonts.conf) [test]
	pattern any family Equal "sans"
[edit]
	Edit family Assign "sans-serif";

Add Rule(kind:0, name: /etc/fonts/fonts.conf) [test]
	pattern any family Equal "system ui"
[edit]
	Edit family Assign "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/10-hinting-slight.conf) [edit]
	Edit hintstyle Append hintslight;

Add Rule(kind:1, name: /etc/fonts/conf.d/10-scale-bitmap-fonts.conf) [test]
	font any outline Equal false
[edit]
	Edit pixelsizefixupfactor Assign pixelsize (pattern)  Divide pixelsize (font) ;

Add Rule(kind:1, name: /etc/fonts/conf.d/10-scale-bitmap-fonts.conf) [test]
	font any outline Equal false
	font any scalable Equal false
	font any hinting Equal true
[edit]
	Edit scalingnotneeded Assign pixelsizefixupfactor  Less 1.2 And pixelsizefixupfactor  More 0.8;

Add Rule(kind:1, name: /etc/fonts/conf.d/10-scale-bitmap-fonts.conf) [test]
	font any scalingnotneeded Equal true
[edit]
	Edit pixelsizefixupfactor Assign 1;

Add Rule(kind:1, name: /etc/fonts/conf.d/10-scale-bitmap-fonts.conf) [test]
	font any outline Equal false
	font any pixelsizefixupfactor NotEqual 1
[edit]
	Edit matrix Assign matrix  Times [pixelsizefixupfactor  0; 0 pixelsizefixupfactor ];
	Edit size Assign size  Divide pixelsizefixupfactor ;

Add Rule(kind:0, name: /etc/fonts/conf.d/10-sub-pixel-rgb.conf) [edit]
	Edit rgba Append rgb;

Add Rule(kind:0, name: /etc/fonts/conf.d/10-yes-antialias.conf) [edit]
	Edit antialias Append true;

Add Rule(kind:0, name: /etc/fonts/conf.d/11-lcdfilter-default.conf) [edit]
	Edit lcdfilter Append lcddefault;

Add Rule(kind:1, name: /etc/fonts/conf.d/20-unhint-small-vera.conf) [test]
	font any family Equal(ignore blanks) "Bitstream Vera Sans"
	font any pixelsize Less 7.5
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /etc/fonts/conf.d/20-unhint-small-vera.conf) [test]
	font any family Equal(ignore blanks) "Bitstream Vera Serif"
	font any pixelsize Less 7.5
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /etc/fonts/conf.d/20-unhint-small-vera.conf) [test]
	font any family Equal(ignore blanks) "Bitstream Vera Sans Mono"
	font any pixelsize Less 7.5
[edit]
	Edit hinting Assign false;

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica LT Std"
[edit]
	Edit family AppendLast "Helvetica";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Sans L"
[edit]
	Edit family AppendLast "Helvetica";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Sans"
[edit]
	Edit family AppendLast "Helvetica";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Heros"
[edit]
	Edit family AppendLast "Helvetica";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Sans Narrow"
[edit]
	Edit family AppendLast "Helvetica Narrow";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Heros Cn"
[edit]
	Edit family AppendLast "Helvetica Narrow";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Roman No9 L"
[edit]
	Edit family AppendLast "Times";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Roman"
[edit]
	Edit family AppendLast "Times";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Termes"
[edit]
	Edit family AppendLast "Times";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Courier Std"
[edit]
	Edit family Append "Courier";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Mono L"
[edit]
	Edit family AppendLast "Courier";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Mono"
[edit]
	Edit family AppendLast "Courier";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Mono PS"
[edit]
	Edit family AppendLast "Courier";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Cursor"
[edit]
	Edit family AppendLast "Courier";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Avant Garde"
[edit]
	Edit family AppendLast "ITC Avant Garde Gothic";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "URW Gothic L"
[edit]
	Edit family AppendLast "ITC Avant Garde Gothic";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "URW Gothic"
[edit]
	Edit family AppendLast "ITC Avant Garde Gothic";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Adventor"
[edit]
	Edit family AppendLast "ITC Avant Garde Gothic";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Bookman"
[edit]
	Edit family AppendLast "ITC Bookman";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "URW Bookman L"
[edit]
	Edit family AppendLast "ITC Bookman";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Bookman URW"
[edit]
	Edit family AppendLast "ITC Bookman";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "URW Bookman"
[edit]
	Edit family AppendLast "ITC Bookman";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Bonum"
[edit]
	Edit family AppendLast "ITC Bookman";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Bookman Old Style"
[edit]
	Edit family AppendLast "ITC Bookman";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Zapf Chancery"
[edit]
	Edit family AppendLast "ITC Zapf Chancery";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "URW Chancery L"
[edit]
	Edit family AppendLast "ITC Zapf Chancery";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Chancery URW"
[edit]
	Edit family AppendLast "ITC Zapf Chancery";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Z003"
[edit]
	Edit family AppendLast "ITC Zapf Chancery";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Chorus"
[edit]
	Edit family AppendLast "ITC Zapf Chancery";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "URW Palladio L"
[edit]
	Edit family AppendLast "Palatino";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Palladio URW"
[edit]
	Edit family AppendLast "Palatino";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "P052"
[edit]
	Edit family AppendLast "Palatino";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Pagella"
[edit]
	Edit family AppendLast "Palatino";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Palatino Linotype"
[edit]
	Edit family AppendLast "Palatino";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Century Schoolbook L"
[edit]
	Edit family AppendLast "New Century Schoolbook";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Century SchoolBook URW"
[edit]
	Edit family AppendLast "New Century Schoolbook";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "C059"
[edit]
	Edit family AppendLast "New Century Schoolbook";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Schola"
[edit]
	Edit family AppendLast "New Century Schoolbook";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Century Schoolbook"
[edit]
	Edit family AppendLast "New Century Schoolbook";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Arimo"
[edit]
	Edit family AppendLast "Arial";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Sans"
[edit]
	Edit family AppendLast "Arial";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Sans Narrow"
[edit]
	Edit family AppendLast "Arial Narrow";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Albany"
[edit]
	Edit family AppendLast "Arial";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Albany AMT"
[edit]
	Edit family AppendLast "Arial";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Tinos"
[edit]
	Edit family AppendLast "Times New Roman";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Serif"
[edit]
	Edit family AppendLast "Times New Roman";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Thorndale"
[edit]
	Edit family AppendLast "Times New Roman";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Thorndale AMT"
[edit]
	Edit family AppendLast "Times New Roman";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Cousine"
[edit]
	Edit family AppendLast "Courier New";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Mono"
[edit]
	Edit family AppendLast "Courier New";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Cumberland"
[edit]
	Edit family AppendLast "Courier New";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Cumberland AMT"
[edit]
	Edit family AppendLast "Courier New";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Gelasio"
[edit]
	Edit family AppendLast "Georgia";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Caladea"
[edit]
	Edit family AppendLast "Cambria";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Carlito"
[edit]
	Edit family AppendLast "Calibri";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "SymbolNeu"
[edit]
	Edit family AppendLast "Symbol";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica"
[edit]
	Edit family AppendLast "Arial";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica Narrow"
[edit]
	Edit family AppendLast "Arial Narrow";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Times"
[edit]
	Edit family AppendLast "Times New Roman";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Courier"
[edit]
	Edit family AppendLast "Courier New";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Arial"
[edit]
	Edit family AppendLast "Helvetica";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Arial Narrow"
[edit]
	Edit family AppendLast "Helvetica Narrow";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Times New Roman"
[edit]
	Edit family AppendLast "Times";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Courier New"
[edit]
	Edit family AppendLast "Courier";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica"
[edit]
	Edit family Append "Helvetica LT Std";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica"
[edit]
	Edit family Append "TeX Gyre Heros";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica Narrow"
[edit]
	Edit family Append "TeX Gyre Heros Cn";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Times"
[edit]
	Edit family Append "TeX Gyre Termes";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Courier"
[edit]
	Edit family Append "TeX Gyre Cursor";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Courier"
[edit]
	Edit family Append "Courier Std";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "ITC Avant Garde Gothic"
[edit]
	Edit family Append "TeX Gyre Adventor";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "ITC Bookman"
[edit]
	Edit family Append "Bookman Old Style" Comma "TeX Gyre Bonum";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "ITC Zapf Chancery"
[edit]
	Edit family Append "TeX Gyre Chorus";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Palatino"
[edit]
	Edit family Append "Palatino Linotype" Comma "TeX Gyre Pagella";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "New Century Schoolbook"
[edit]
	Edit family Append "Century Schoolbook" Comma "TeX Gyre Schola";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Arial"
[edit]
	Edit family Append "Arimo" Comma "Liberation Sans" Comma "Albany" Comma "Albany AMT";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Arial Narrow"
[edit]
	Edit family Append "Liberation Sans Narrow";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Times New Roman"
[edit]
	Edit family Append "Tinos" Comma "Liberation Serif" Comma "Thorndale" Comma "Thorndale AMT";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Courier New"
[edit]
	Edit family Append "Cousine" Comma "Liberation Mono" Comma "Cumberland" Comma "Cumberland AMT";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Georgia"
[edit]
	Edit family Append "Gelasio";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Cambria"
[edit]
	Edit family Append "Caladea";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Calibri"
[edit]
	Edit family Append "Carlito";

Add Rule(kind:0, name: /etc/fonts/conf.d/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Symbol"
[edit]
	Edit family Append "SymbolNeu";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Nazli"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Lotoos"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Mitra"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Ferdosi"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Badr"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Zar"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Titr"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Jadid"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Kochi Mincho"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "AR PL SungtiL GB"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "AR PL Mingti2L Big5"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "ＭＳ 明朝"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "NanumMyeongjo"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "UnBatang"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Baekmuk Batang"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "MgOpen Canonica"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Sazanami Mincho"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "AR PL ZenKai Uni"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "ZYSong18030"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "FreeSerif"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "SimSun"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Arshia"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Elham"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Farnaz"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Nasim"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Sina"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Roya"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Koodak"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Terafik"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Kochi Gothic"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "AR PL KaitiM GB"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "AR PL KaitiM Big5"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "ＭＳ ゴシック"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "NanumGothic"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "UnDotum"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Baekmuk Dotum"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "MgOpen Modata"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Sazanami Gothic"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "AR PL ShanHeiSun Uni"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "ZYSong18030"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "FreeSans"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "NSimSun"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "ZYSong18030"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "NanumGothicCoding"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "FreeMono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Homa"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Kamran"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Fantezi"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Tabassom"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "IranNastaliq"
[edit]
	Edit family AppendLast "cursive";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Nafees Nastaleeq"
[edit]
	Edit family AppendLast "cursive";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Arabic UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Bengali UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Devanagari UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Gujarati UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Gurmukhi UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Kannada UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Khmer UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Lao UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Malayalam UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Myanmar UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Oriya UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Sinhala UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Tamil UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Telugu UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Thai UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Leelawadee UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Nirmala UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Yu Gothic UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Meiryo UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "MS UI Gothic"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Khmer UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Lao UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Microsoft JhengHei UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Microsoft YaHei UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-wps-office.conf) [test]
	pattern any prgname Equal "wps"
	pattern any family Equal "SimSun"
[edit]
	Edit family Append "FZSongS-Extended" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Micro Hei" Comma "Noto Sans S Chinese" Comma "Noto Sans T Chinese" Comma "Source Han Sans CN" Comma "Source Han Sans SC" Comma "Source Han Sans TC" Comma "Source Han Sans TWHK" Comma "Source Han Sans J" Comma "Source Han Sans JP" Comma "Source Han Sans K" Comma "Source Han Sans KR";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-wps-office.conf) [test]
	pattern any prgname Equal "wps"
	pattern any family Equal "宋体"
[edit]
	Edit family Append "FZSongS-Extended" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Micro Hei" Comma "Noto Sans S Chinese" Comma "Noto Sans T Chinese" Comma "Source Han Sans CN" Comma "Source Han Sans SC" Comma "Source Han Sans TC" Comma "Source Han Sans TWHK" Comma "Source Han Sans J" Comma "Source Han Sans JP" Comma "Source Han Sans K" Comma "Source Han Sans KR";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-wps-office.conf) [test]
	pattern any prgname Equal "wps"
	pattern any family Equal "Microsoft YaHei"
[edit]
	Edit family Append "FZHei-B01" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Micro Hei" Comma "Noto Sans S Chinese" Comma "Noto Sans T Chinese" Comma "Source Han Sans CN" Comma "Source Han Sans SC" Comma "Source Han Sans TC" Comma "Source Han Sans TWHK" Comma "Source Han Sans J" Comma "Source Han Sans JP" Comma "Source Han Sans K" Comma "Source Han Sans KR";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-wps-office.conf) [test]
	pattern any prgname Equal "wps"
	pattern any family Equal "微软雅黑"
[edit]
	Edit family Append "FZHei-B01" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Micro Hei" Comma "Noto Sans S Chinese" Comma "Noto Sans T Chinese" Comma "Source Han Sans CN" Comma "Source Han Sans SC" Comma "Source Han Sans TC" Comma "Source Han Sans TWHK" Comma "Source Han Sans J" Comma "Source Han Sans JP" Comma "Source Han Sans K" Comma "Source Han Sans KR";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-wps-office.conf) [test]
	pattern any prgname Equal "wpp"
	pattern any family Equal "SimSun"
[edit]
	Edit family Append "FZSongS-Extended" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Micro Hei" Comma "Noto Sans S Chinese" Comma "Noto Sans T Chinese" Comma "Source Han Sans CN" Comma "Source Han Sans SC" Comma "Source Han Sans TC" Comma "Source Han Sans TWHK" Comma "Source Han Sans J" Comma "Source Han Sans JP" Comma "Source Han Sans K" Comma "Source Han Sans KR";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-wps-office.conf) [test]
	pattern any prgname Equal "wpp"
	pattern any family Equal "宋体"
[edit]
	Edit family Append "FZSongS-Extended" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Micro Hei" Comma "Noto Sans S Chinese" Comma "Noto Sans T Chinese" Comma "Source Han Sans CN" Comma "Source Han Sans SC" Comma "Source Han Sans TC" Comma "Source Han Sans TWHK" Comma "Source Han Sans J" Comma "Source Han Sans JP" Comma "Source Han Sans K" Comma "Source Han Sans KR";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-wps-office.conf) [test]
	pattern any prgname Equal "wpp"
	pattern any family Equal "Microsoft YaHei"
[edit]
	Edit family Append "FZHei-B01" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Micro Hei" Comma "Noto Sans S Chinese" Comma "Noto Sans T Chinese" Comma "Source Han Sans CN" Comma "Source Han Sans SC" Comma "Source Han Sans TC" Comma "Source Han Sans TWHK" Comma "Source Han Sans J" Comma "Source Han Sans JP" Comma "Source Han Sans K" Comma "Source Han Sans KR";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-wps-office.conf) [test]
	pattern any prgname Equal "wpp"
	pattern any family Equal "微软雅黑"
[edit]
	Edit family Append "FZHei-B01" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Micro Hei" Comma "Noto Sans S Chinese" Comma "Noto Sans T Chinese" Comma "Source Han Sans CN" Comma "Source Han Sans SC" Comma "Source Han Sans TC" Comma "Source Han Sans TWHK" Comma "Source Han Sans J" Comma "Source Han Sans JP" Comma "Source Han Sans K" Comma "Source Han Sans KR";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-wps-office.conf) [test]
	pattern any prgname Equal "et"
	pattern any family Equal "SimSun"
[edit]
	Edit family Append "FZSongS-Extended" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Micro Hei" Comma "Noto Sans S Chinese" Comma "Noto Sans T Chinese" Comma "Source Han Sans CN" Comma "Source Han Sans SC" Comma "Source Han Sans TC" Comma "Source Han Sans TWHK" Comma "Source Han Sans J" Comma "Source Han Sans JP" Comma "Source Han Sans K" Comma "Source Han Sans KR";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-wps-office.conf) [test]
	pattern any prgname Equal "et"
	pattern any family Equal "宋体"
[edit]
	Edit family Append "FZSongS-Extended" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Micro Hei" Comma "Noto Sans S Chinese" Comma "Noto Sans T Chinese" Comma "Source Han Sans CN" Comma "Source Han Sans SC" Comma "Source Han Sans TC" Comma "Source Han Sans TWHK" Comma "Source Han Sans J" Comma "Source Han Sans JP" Comma "Source Han Sans K" Comma "Source Han Sans KR";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-wps-office.conf) [test]
	pattern any prgname Equal "et"
	pattern any family Equal "Microsoft YaHei"
[edit]
	Edit family Append "FZHei-B01" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Micro Hei" Comma "Noto Sans S Chinese" Comma "Noto Sans T Chinese" Comma "Source Han Sans CN" Comma "Source Han Sans SC" Comma "Source Han Sans TC" Comma "Source Han Sans TWHK" Comma "Source Han Sans J" Comma "Source Han Sans JP" Comma "Source Han Sans K" Comma "Source Han Sans KR";

Add Rule(kind:0, name: /etc/fonts/conf.d/40-wps-office.conf) [test]
	pattern any prgname Equal "et"
	pattern any family Equal "微软雅黑"
[edit]
	Edit family Append "FZHei-B01" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Micro Hei" Comma "Noto Sans S Chinese" Comma "Noto Sans T Chinese" Comma "Source Han Sans CN" Comma "Source Han Sans SC" Comma "Source Han Sans TC" Comma "Source Han Sans TWHK" Comma "Source Han Sans J" Comma "Source Han Sans JP" Comma "Source Han Sans K" Comma "Source Han Sans KR";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Color Emoji"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Apple Color Emoji"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Segoe UI Emoji"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Twitter Color Emoji"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "EmojiOne Mozilla"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Emoji Two"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "JoyPixels"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Emoji One"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Emoji"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Android Emoji"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal "emoji"
[edit]
	Edit lang Prepend "und-zsye";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any lang Equal "und-zsye"
	pattern all family NotEqual "emoji"
[edit]
	Edit family Append "emoji";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "XITS Math"
[edit]
	Edit family AppendLast "math";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "STIX Two Math"
[edit]
	Edit family AppendLast "math";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Cambria Math"
[edit]
	Edit family AppendLast "math";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Latin Modern Math"
[edit]
	Edit family AppendLast "math";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Minion Math"
[edit]
	Edit family AppendLast "math";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Lucida Math"
[edit]
	Edit family AppendLast "math";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Asana Math"
[edit]
	Edit family AppendLast "math";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any family Equal "math"
[edit]
	Edit lang Prepend "und-zmth";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-generic.conf) [test]
	pattern any lang Equal "und-zmth"
	pattern all family NotEqual "math"
[edit]
	Edit family Append "math";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Bitstream Vera Serif"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Cambria"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Constantia"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "DejaVu Serif"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Elephant"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Garamond"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Georgia"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Serif"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Luxi Serif"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "MS Serif"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Roman No9 L"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Roman"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Palatino Linotype"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Thorndale AMT"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Thorndale"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Times New Roman"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Times"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Albany AMT"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Albany"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Arial Unicode MS"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Arial"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Bitstream Vera Sans"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Britannic"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Calibri"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Candara"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Century Gothic"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Corbel"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "DejaVu Sans"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica LT Std"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Haettenschweiler"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Sans"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "MS Sans Serif"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Sans L"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Sans"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Luxi Sans"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Tahoma"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Trebuchet MS"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Twentieth Century"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Verdana"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Andale Mono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Bitstream Vera Sans Mono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Consolas"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Courier New"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Courier Std"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Courier"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Cumberland AMT"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Cumberland"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "DejaVu Sans Mono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Fixedsys"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Inconsolata"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Mono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Luxi Mono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Mono L"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Mono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Mono PS"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Terminal"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Bauhaus Std"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Cooper Std"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Copperplate Gothic Std"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Impact"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Comic Sans MS"
[edit]
	Edit family AppendLast "cursive";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "ITC Zapf Chancery Std"
[edit]
	Edit family AppendLast "cursive";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Zapfino"
[edit]
	Edit family AppendLast "cursive";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Cantarell"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Segoe UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Segoe UI Historic"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Segoe UI Symbol"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /etc/fonts/conf.d/46-noto-mono.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/46-noto-sans.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/46-noto-serif.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/48-spacing.conf) [test]
	pattern any spacing Equal 100
[edit]
	Edit family Prepend "monospace";

Add Rule(kind:0, name: /etc/fonts/conf.d/49-sansserif.conf) [test]
	pattern all family NotEqual "sans-serif"
	pattern all family NotEqual "serif"
	pattern all family NotEqual "monospace"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:1, name: /home/tosakrin/.config/fontconfig/conf.d/01-Render.conf) [edit]
	Edit autohint Assign false;
	Edit hinting Assign true;
	Edit hintstyle Assign hintslight;
	Edit antialias Assign true;
	Edit lcdfilter Assign lcddefault;
	Edit rgba Assign rgb;

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/02-System-extend.conf) [test]
	pattern any family Equal "system-ui"
[edit]
	Edit family Prepend "sans-serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/02-System-extend.conf) [test]
	pattern any family Equal "ui-monospace"
[edit]
	Edit family Assign "monospace";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/02-System-extend.conf) [test]
	pattern any family Equal "ui-sans-serif"
[edit]
	Edit family Assign "sans-serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/02-System-extend.conf) [test]
	pattern any family Equal "ui-serif"
[edit]
	Edit family Assign "serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/02-System-extend.conf) [test]
	pattern any family Equal "-apple-system"
[edit]
	Edit family Assign "sans-serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/03-ENCN.conf) [test]
	pattern any lang Contains "en"
	pattern any family Contains "Noto Sans CJK"
[edit]
	Edit family Prepend "Noto Sans";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/03-ENCN.conf) [test]
	pattern any lang Contains "en"
	pattern any family Contains "Noto Serif CJK"
[edit]
	Edit family Prepend "Noto Serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/03-ENCN.conf) [test]
	pattern any lang Contains "cn"
	pattern any family Contains "Noto Sans"
[edit]
	Edit family Prepend "Noto Sans CJK SC";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/03-ENCN.conf) [test]
	pattern any lang Contains "cn"
	pattern any family Contains "Noto Serif"
[edit]
	Edit family Prepend "Noto Serif CJK SC";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/04-CJK.conf) [test]
	pattern any lang Equal "zh-HK"
	pattern any family Equal "Noto Sans CJK SC"
[edit]
	Edit family Assign "Noto Sans CJK HK";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/04-CJK.conf) [test]
	pattern any lang Equal "zh-HK"
	pattern any family Equal "Noto Serif CJK SC"
[edit]
	Edit family Assign "Noto Serif CJK TC";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/04-CJK.conf) [test]
	pattern any lang Equal "zh-HK"
	pattern any family Equal "Noto Sans Mono CJK SC"
[edit]
	Edit family Assign "Noto Sans Mono CJK HK";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/04-CJK.conf) [test]
	pattern any lang Equal "zh-TW"
	pattern any family Equal "Noto Sans CJK SC"
[edit]
	Edit family Assign "Noto Sans CJK TC";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/04-CJK.conf) [test]
	pattern any lang Equal "zh-TW"
	pattern any family Equal "Noto Serif CJK SC"
[edit]
	Edit family Assign "Noto Serif CJK TC";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/04-CJK.conf) [test]
	pattern any lang Equal "zh-TW"
	pattern any family Equal "Noto Sans Mono CJK SC"
[edit]
	Edit family Assign "Noto Sans Mono CJK TC";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/04-CJK.conf) [test]
	pattern any lang Equal "ja"
	pattern any family Equal "Noto Sans CJK SC"
[edit]
	Edit family Assign "Noto Sans CJK JP";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/04-CJK.conf) [test]
	pattern any lang Equal "ja"
	pattern any family Equal "Noto Serif CJK SC"
[edit]
	Edit family Assign "Noto Serif CJK JP";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/04-CJK.conf) [test]
	pattern any lang Equal "ja"
	pattern any family Equal "Noto Sans Mono CJK SC"
[edit]
	Edit family Assign "Noto Sans Mono CJK JP";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/04-CJK.conf) [test]
	pattern any lang Equal "ko"
	pattern any family Equal "Noto Sans CJK SC"
[edit]
	Edit family Assign "Noto Sans CJK KR";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/04-CJK.conf) [test]
	pattern any lang Equal "ko"
	pattern any family Equal "Noto Serif CJK SC"
[edit]
	Edit family Assign "Noto Serif CJK KR";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/04-CJK.conf) [test]
	pattern any lang Equal "ko"
	pattern any family Equal "Noto Sans Mono CJK SC"
[edit]
	Edit family Assign "Noto Sans Mono CJK KR";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/05-QT.conf) [test]
	pattern any family Equal(ignore blanks) "sans-serif"
[edit]
	Edit family Prepend "Noto Sans Glagolitic" Comma "Noto Sans Javanese" Comma "Noto Serif Tangut" Comma "Noto Sans Egyptian Hieroglyphs" Comma "Noto Sans Cuneiform" Comma "HanaMinB" Comma "Noto Sans Rejang" Comma "Noto Sans Tai Viet" Comma "Noto Sans Cherokee" Comma "Noto Sans Tai Tham" Comma "Noto Sans Anatolian Hieroglyphs" Comma "Noto Sans Bamum" Comma "Symbols Nerd Font" Comma "Noto Sans Batak" Comma "Noto Sans Runic";

Add Rule(kind:2, name: /home/tosakrin/.config/fontconfig/conf.d/06-EmbeddedBitmap.conf) [test]
	scan any family Equal "Twemoji"
[edit]
	Edit embeddedbitmap Assign true;

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Equal "Cantarell"
[edit]
	Edit family Assign "Noto Sans";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Equal "Arial"
[edit]
	Edit family Assign "Noto Sans";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Equal "Tahoma"
[edit]
	Edit family Assign "Noto Sans";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Equal "Calibri"
[edit]
	Edit family Assign "Noto Sans";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Equal "Helvetica"
[edit]
	Edit family Assign "Noto Sans";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Equal "Liberation Sans"
[edit]
	Edit family Assign "Noto Sans";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "Microsoft YaHei"
[edit]
	Edit family Assign "Noto Sans CJK SC";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Equal "微软雅黑"
[edit]
	Edit family Assign "Noto Sans CJK SC";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Equal "SimHei"
[edit]
	Edit family Assign "Noto Sans CJK SC";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Equal "黑体"
[edit]
	Edit family Assign "Noto Sans CJK SC";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Equal "Times New Roman"
[edit]
	Edit family Assign "Noto Serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Equal "Liberation Serif"
[edit]
	Edit family Assign "Noto Serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "SimSun"
[edit]
	Edit family Assign "LXGW WenKai";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Equal "宋体"
[edit]
	Edit family Assign "LXGW WenKai";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Equal "FangSong"
[edit]
	Edit family Assign "LXGW WenKai";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Equal "仿宋"
[edit]
	Edit family Assign "LXGW WenKai";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "Source Code"
[edit]
	Edit family Assign "Maple Mono";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Equal "Liberation Mono"
[edit]
	Edit family Assign "Maple Mono";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "宋体"
[edit]
	Edit family Assign "serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "SimSun"
[edit]
	Edit family Assign "serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "Microsoft YaHei"
[edit]
	Edit family Assign "sans-serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "微软雅黑"
[edit]
	Edit family Assign "sans-serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "Verdana"
[edit]
	Edit family Assign "sans-serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "Arial"
[edit]
	Edit family Assign "sans-serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "Helvetica"
[edit]
	Edit family Assign "sans-serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "Tahoma"
[edit]
	Edit family Assign "sans-serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "Menlo"
[edit]
	Edit family Assign "monospace";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "Source Code Pro"
[edit]
	Edit family Assign "monospace";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "PingFang"
[edit]
	Edit family Assign "sans-serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "Liberation Mono"
[edit]
	Edit family Assign "monospace";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "Liberation Sans"
[edit]
	Edit family Assign "sans-serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf) [test]
	pattern any family Contains "Liberation Serif"
[edit]
	Edit family Assign "serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/51-General.conf) [test]
	pattern any family Equal "system-ui"
[edit]
	Edit family Prepend "sans-serif";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/51-General.conf) [test]
	pattern any family Equal "sans-serif"
[edit]
	Edit family Prepend "Noto Sans" Comma "Noto Sans CJK SC" Comma "Noto Color Emoji" Comma "Symbols Nerd Font" Comma "Twemoji" Comma "Font Awesome 6 Free";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/51-General.conf) [test]
	pattern any family Equal "serif"
[edit]
	Edit family Prepend "Noto Serif" Comma "Noto Serif CJK SC" Comma "Noto Color Emoji" Comma "Symbols Nerd Font" Comma "Twemoji" Comma "Font Awesome 6 Free";

Add Rule(kind:0, name: /home/tosakrin/.config/fontconfig/conf.d/51-General.conf) [test]
	pattern any family Equal "monospace"
[edit]
	Edit family Prepend "Maple Mono" Comma "Symbols Nerd Font Mono" Comma "Twemoji" Comma "Maple Mono NF" Comma "Maple Mono NF CN" Comma "JetBrains Mono" Comma "JetBrainsMono NF" Comma "Noto Sans Mono" Comma "Noto Sans Mono CJK SC" Comma "Noto Color Emoji" Comma "Font Awesome 6 Free";

Add Rule(kind:0, name: /etc/fonts/conf.d/60-generic.conf) [test]
	pattern any lang Equal "und-zsye"
	pattern all color NotEqual true
	pattern all color NotEqual false
[edit]
	Edit color Append true;

Add Rule(kind:0, name: /etc/fonts/conf.d/60-generic.conf) [test]
	pattern any family Equal(ignore blanks) "emoji"
[edit]
	Edit family Prepend "Noto Color Emoji" Comma "Apple Color Emoji" Comma "Segoe UI Emoji" Comma "Twitter Color Emoji" Comma "EmojiOne Mozilla" Comma "Emoji Two" Comma "JoyPixels" Comma "Emoji One" Comma "Noto Emoji" Comma "Android Emoji";

Add Rule(kind:0, name: /etc/fonts/conf.d/60-generic.conf) [test]
	pattern any family Equal(ignore blanks) "math"
[edit]
	Edit family Prepend "XITS Math" Comma "STIX Two Math" Comma "Cambria Math" Comma "Latin Modern Math" Comma "Minion Math" Comma "Lucida Math" Comma "Asana Math";

Add Rule(kind:0, name: /etc/fonts/conf.d/60-latin.conf) [test]
	pattern any family Equal(ignore blanks) "serif"
[edit]
	Edit family Prepend "Noto Serif" Comma "DejaVu Serif" Comma "Times New Roman" Comma "Thorndale AMT" Comma "Luxi Serif" Comma "Nimbus Roman No9 L" Comma "Nimbus Roman" Comma "Times";

Add Rule(kind:0, name: /etc/fonts/conf.d/60-latin.conf) [test]
	pattern any family Equal(ignore blanks) "sans-serif"
[edit]
	Edit family Prepend "Noto Sans" Comma "DejaVu Sans" Comma "Verdana" Comma "Arial" Comma "Albany AMT" Comma "Luxi Sans" Comma "Nimbus Sans L" Comma "Nimbus Sans" Comma "Helvetica" Comma "Lucida Sans Unicode" Comma "BPG Glaho International" Comma "Tahoma";

Add Rule(kind:0, name: /etc/fonts/conf.d/60-latin.conf) [test]
	pattern any family Equal(ignore blanks) "monospace"
[edit]
	Edit family Prepend "Noto Sans Mono" Comma "DejaVu Sans Mono" Comma "Inconsolata" Comma "Andale Mono" Comma "Courier New" Comma "Cumberland AMT" Comma "Luxi Mono" Comma "Nimbus Mono L" Comma "Nimbus Mono" Comma "Nimbus Mono PS" Comma "Courier";

Add Rule(kind:0, name: /etc/fonts/conf.d/60-latin.conf) [test]
	pattern any family Equal(ignore blanks) "fantasy"
[edit]
	Edit family Prepend "Impact" Comma "Copperplate Gothic Std" Comma "Cooper Std" Comma "Bauhaus Std";

Add Rule(kind:0, name: /etc/fonts/conf.d/60-latin.conf) [test]
	pattern any family Equal(ignore blanks) "cursive"
[edit]
	Edit family Prepend "ITC Zapf Chancery Std" Comma "Zapfino" Comma "Comic Sans MS";

Add Rule(kind:0, name: /etc/fonts/conf.d/60-latin.conf) [test]
	pattern any family Equal(ignore blanks) "system-ui"
[edit]
	Edit family Prepend "Cantarell" Comma "Noto Sans UI" Comma "Segoe UI" Comma "Segoe UI Historic" Comma "Segoe UI Symbol";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Nesf"
[edit]
	Edit family Append "Nesf2";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Nesf2"
[edit]
	Edit family Append "Persian_sansserif_default";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Nazanin"
[edit]
	Edit family Append "Nazli";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Lotus"
[edit]
	Edit family Append "Lotoos";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Yaqut"
[edit]
	Edit family Append "Yaghoot";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Yaghut"
[edit]
	Edit family Append "Yaghoot";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Traffic"
[edit]
	Edit family Append "Terafik";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Ferdowsi"
[edit]
	Edit family Append "Ferdosi";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Fantezy"
[edit]
	Edit family Append "Fantezi";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Jadid"
[edit]
	Edit family Append "Persian_title";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Titr"
[edit]
	Edit family Append "Persian_title";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Kamran"
[edit]
	Edit family Append "Persian_fantasy" Comma "Homa";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Homa"
[edit]
	Edit family Append "Persian_fantasy" Comma "Kamran";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Fantezi"
[edit]
	Edit family Append "Persian_fantasy";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Tabassom"
[edit]
	Edit family Append "Persian_fantasy";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Arshia"
[edit]
	Edit family Append "Persian_square";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Nasim"
[edit]
	Edit family Append "Persian_square";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Elham"
[edit]
	Edit family Append "Persian_square" Comma "Farnaz";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Farnaz"
[edit]
	Edit family Append "Persian_square" Comma "Elham";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Sina"
[edit]
	Edit family Append "Persian_square";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Persian_title"
[edit]
	Edit family Append "Titr" Comma "Jadid" Comma "Persian_serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Persian_fantasy"
[edit]
	Edit family Append "Homa" Comma "Kamran" Comma "Fantezi" Comma "Tabassom" Comma "Persian_square";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Persian_square"
[edit]
	Edit family Append "Arshia" Comma "Elham" Comma "Farnaz" Comma "Nasim" Comma "Sina" Comma "Persian_serif";

Add Rule(kind:2, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	scan any family Equal(ignore blanks) "Elham"
[edit]
	Edit foundry Assign "farsiweb";

Add Rule(kind:2, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	scan any family Equal(ignore blanks) "Homa"
[edit]
	Edit foundry Assign "farsiweb";

Add Rule(kind:2, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	scan any family Equal(ignore blanks) "Koodak"
[edit]
	Edit foundry Assign "farsiweb";

Add Rule(kind:2, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	scan any family Equal(ignore blanks) "Nazli"
[edit]
	Edit foundry Assign "farsiweb";

Add Rule(kind:2, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	scan any family Equal(ignore blanks) "Roya"
[edit]
	Edit foundry Assign "farsiweb";

Add Rule(kind:2, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	scan any family Equal(ignore blanks) "Terafik"
[edit]
	Edit foundry Assign "farsiweb";

Add Rule(kind:2, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	scan any family Equal(ignore blanks) "Titr"
[edit]
	Edit foundry Assign "farsiweb";

Add Rule(kind:1, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	font any foundry Equal "TURNED-OFF"
	font any foundry Equal "farsiweb"
	font any slant Equal roman
	pattern any slant NotEqual roman
[edit]
	Edit matrix Assign matrix  Times [1 -0.2; 0 1];
	Edit slant Assign oblique;

Add Rule(kind:1, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	font any foundry Equal "farsiweb"
[edit]
	Edit autohint Assign false;
	Edit hinting Assign false;
	Edit embeddedbitmap Assign false;

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "serif"
[edit]
	Edit family Append "Nazli" Comma "Lotoos" Comma "Mitra" Comma "Ferdosi" Comma "Badr" Comma "Zar";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "sans-serif"
[edit]
	Edit family Append "Roya" Comma "Koodak" Comma "Terafik";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "monospace"
[edit]
	Edit family Append "Terafik";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "fantasy"
[edit]
	Edit family Append "Homa" Comma "Kamran" Comma "Fantezi" Comma "Tabassom";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "cursive"
[edit]
	Edit family Append "IranNastaliq" Comma "Nafees Nastaleeq";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal "serif"
	pattern any weight MoreEqual 200
	pattern any size MoreEqual 24
[edit]
	Edit family Prepend "Titr";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal "sans-serif"
	pattern any weight MoreEqual 200
	pattern any size MoreEqual 24
[edit]
	Edit family Prepend "Titr";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal "Persian_sansserif_default"
	pattern any weight MoreEqual 200
	pattern any size MoreEqual 24
[edit]
	Edit family Prepend "Titr";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-fonts-persian.conf) [test]
	pattern any family Equal "Persian_sansserif_default"
[edit]
	Edit family Assign "Roya";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "serif"
[edit]
	Edit family Prepend "Artsounk" Comma "BPG UTF8 M" Comma "Kinnari" Comma "Norasi" Comma "Frank Ruehl" Comma "Dror" Comma "JG LaoTimes" Comma "Saysettha Unicode" Comma "Pigiarniq" Comma "B Davat" Comma "B Compset" Comma "Kacst-Qr" Comma "Urdu Nastaliq Unicode" Comma "Raghindi" Comma "Mukti Narrow" Comma "malayalam" Comma "Sampige" Comma "padmaa" Comma "Hapax Berbère" Comma "MS Mincho" Comma "SimSun" Comma "PMingLiu" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Bitmap Song" Comma "AR PL ShanHeiSun Uni" Comma "AR PL New Sung" Comma "ZYSong18030" Comma "HanyiSong" Comma "Hiragino Mincho ProN" Comma "Songti SC" Comma "Songti TC" Comma "SimSong" Comma "MgOpen Canonica" Comma "Sazanami Mincho" Comma "IPAMonaMincho" Comma "IPAMincho" Comma "Kochi Mincho" Comma "AR PL SungtiL GB" Comma "AR PL Mingti2L Big5" Comma "AR PL Zenkai Uni" Comma "ＭＳ 明朝" Comma "ZYSong18030" Comma "NanumMyeongjo" Comma "UnBatang" Comma "Baekmuk Batang" Comma "AppleMyungjo" Comma "KacstQura" Comma "Frank Ruehl CLM" Comma "Lohit Bengali" Comma "Lohit Gujarati" Comma "Lohit Hindi" Comma "Lohit Marathi" Comma "Lohit Maithili" Comma "Lohit Kashmiri" Comma "Lohit Konkani" Comma "Lohit Nepali" Comma "Lohit Sindhi" Comma "Lohit Punjabi" Comma "Lohit Tamil" Comma "Rachana" Comma "Lohit Malayalam" Comma "Lohit Kannada" Comma "Lohit Telugu" Comma "Lohit Oriya" Comma "LKLUG";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "sans-serif"
[edit]
	Edit family Prepend "Nachlieli" Comma "Lucida Sans Unicode" Comma "Yudit Unicode" Comma "Kerkis" Comma "ArmNet Helvetica" Comma "Artsounk" Comma "BPG UTF8 M" Comma "Waree" Comma "Loma" Comma "Garuda" Comma "Umpush" Comma "Saysettha Unicode" Comma "JG Lao Old Arial" Comma "GF Zemen Unicode" Comma "Pigiarniq" Comma "B Davat" Comma "B Compset" Comma "Kacst-Qr" Comma "Urdu Nastaliq Unicode" Comma "Raghindi" Comma "Mukti Narrow" Comma "malayalam" Comma "Sampige" Comma "padmaa" Comma "Hapax Berbère" Comma "MS Gothic" Comma "UmePlus P Gothic" Comma "Microsoft YaHei" Comma "Microsoft JhengHei" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Bitmap Song" Comma "AR PL ShanHeiSun Uni" Comma "AR PL New Sung" Comma "Hiragino Sans" Comma "PingFang SC" Comma "PingFang TC" Comma "PingFang HK" Comma "Hiragino Sans CNS" Comma "Hiragino Sans GB" Comma "MgOpen Modata" Comma "VL Gothic" Comma "IPAMonaGothic" Comma "IPAGothic" Comma "Sazanami Gothic" Comma "Kochi Gothic" Comma "AR PL KaitiM GB" Comma "AR PL KaitiM Big5" Comma "AR PL ShanHeiSun Uni" Comma "AR PL SungtiL GB" Comma "AR PL Mingti2L Big5" Comma "ＭＳ ゴシック" Comma "ZYSong18030" Comma "TSCu_Paranar" Comma "NanumGothic" Comma "UnDotum" Comma "Baekmuk Dotum" Comma "Baekmuk Gulim" Comma "Apple SD Gothic Neo" Comma "KacstQura" Comma "Lohit Bengali" Comma "Lohit Gujarati" Comma "Lohit Hindi" Comma "Lohit Marathi" Comma "Lohit Maithili" Comma "Lohit Kashmiri" Comma "Lohit Konkani" Comma "Lohit Nepali" Comma "Lohit Sindhi" Comma "Lohit Punjabi" Comma "Lohit Tamil" Comma "Meera" Comma "Lohit Malayalam" Comma "Lohit Kannada" Comma "Lohit Telugu" Comma "Lohit Oriya" Comma "LKLUG";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "monospace"
[edit]
	Edit family Prepend "Miriam Mono" Comma "VL Gothic" Comma "IPAMonaGothic" Comma "IPAGothic" Comma "Sazanami Gothic" Comma "Kochi Gothic" Comma "AR PL KaitiM GB" Comma "MS Gothic" Comma "UmePlus Gothic" Comma "NSimSun" Comma "MingLiu" Comma "AR PL ShanHeiSun Uni" Comma "AR PL New Sung Mono" Comma "HanyiSong" Comma "AR PL SungtiL GB" Comma "AR PL Mingti2L Big5" Comma "ZYSong18030" Comma "NanumGothicCoding" Comma "NanumGothic" Comma "UnDotum" Comma "Baekmuk Dotum" Comma "Baekmuk Gulim" Comma "TlwgTypo" Comma "TlwgTypist" Comma "TlwgTypewriter" Comma "TlwgMono" Comma "Hasida" Comma "GF Zemen Unicode" Comma "Hapax Berbère" Comma "Lohit Bengali" Comma "Lohit Gujarati" Comma "Lohit Hindi" Comma "Lohit Marathi" Comma "Lohit Maithili" Comma "Lohit Kashmiri" Comma "Lohit Konkani" Comma "Lohit Nepali" Comma "Lohit Sindhi" Comma "Lohit Punjabi" Comma "Lohit Tamil" Comma "Meera" Comma "Lohit Malayalam" Comma "Lohit Kannada" Comma "Lohit Telugu" Comma "Lohit Oriya" Comma "LKLUG";

Add Rule(kind:0, name: /etc/fonts/conf.d/65-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "system-ui"
[edit]
	Edit family Prepend "Noto Sans Arabic UI" Comma "Noto Sans Bengali UI" Comma "Noto Sans Devanagari UI" Comma "Noto Sans Gujarati UI" Comma "Noto Sans Gurmukhi UI" Comma "Noto Sans Kannada UI" Comma "Noto Sans Khmer UI" Comma "Noto Sans Lao UI" Comma "Noto Sans Malayalam UI" Comma "Noto Sans Myanmar UI" Comma "Noto Sans Oriya UI" Comma "Noto Sans Sinhala UI" Comma "Noto Sans Tamil UI" Comma "Noto Sans Telugu UI" Comma "Noto Sans Thai UI" Comma "Leelawadee UI" Comma "Nirmala UI" Comma "Yu Gothic UI" Comma "Meiryo UI" Comma "MS UI Gothic" Comma "Khmer UI" Comma "Lao UI" Comma "Microsoft YaHei UI" Comma "Microsoft JhengHei UI";

Add Rule(kind:0, name: /etc/fonts/conf.d/66-noto-mono.conf) [test]
	pattern any family Equal(ignore blanks) "monospace"
[edit]
	Edit family Prepend "Noto Sans Mono";

Add Rule(kind:0, name: /etc/fonts/conf.d/66-noto-sans.conf) [test]
	pattern any family Equal(ignore blanks) "sans-serif"
[edit]
	Edit family Prepend "Noto Sans";

Add Rule(kind:0, name: /etc/fonts/conf.d/66-noto-serif.conf) [test]
	pattern any family Equal(ignore blanks) "serif"
[edit]
	Edit family Prepend "Noto Serif";

Add Rule(kind:0, name: /etc/fonts/conf.d/69-unifont.conf) [test]
	pattern any family Equal(ignore blanks) "serif"
[edit]
	Edit family Prepend "FreeSerif" Comma "Code2000" Comma "Code2001";

Add Rule(kind:0, name: /etc/fonts/conf.d/69-unifont.conf) [test]
	pattern any family Equal(ignore blanks) "sans-serif"
[edit]
	Edit family Prepend "FreeSans" Comma "Arial Unicode MS" Comma "Arial Unicode" Comma "Code2000" Comma "Code2001";

Add Rule(kind:0, name: /etc/fonts/conf.d/69-unifont.conf) [test]
	pattern any family Equal(ignore blanks) "monospace"
[edit]
	Edit family Prepend "FreeMono";

Add Rule(kind:2, name: /etc/fonts/conf.d/80-delicious.conf) [test]
	scan any family Equal(ignore blanks) "Delicious"
	scan any style Equal "Heavy"
[edit]
	Edit weight Assign heavy;

Add Rule(kind:1, name: /etc/fonts/conf.d/90-synthetic.conf) [test]
	font any slant Equal roman
	pattern any slant NotEqual roman
[edit]
	Edit matrix Assign matrix  Times [1 0.2; 0 1];
	Edit slant Assign oblique;
	Edit embeddedbitmap Assign false;

Add Rule(kind:1, name: /etc/fonts/conf.d/90-synthetic.conf) [test]
	font any weight LessEqual medium
	pattern any weight MoreEqual bold
[edit]
	Edit embolden Assign true;
	Edit weight Assign bold;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/09-autohint-if-no-hinting.conf) [test]
	font any fonthashint Equal false
[edit]
	Edit autohint Append true;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-autohint.conf) [edit]
	Edit autohint Append true;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-hinting-full.conf) [edit]
	Edit hintstyle Append hintfull;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-hinting-medium.conf) [edit]
	Edit hintstyle Append hintmedium;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-hinting-none.conf) [edit]
	Edit hintstyle Append hintnone;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-hinting-slight.conf) [edit]
	Edit hintstyle Append hintslight;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "monospace"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "0xProto"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "IBM 3270 Condensed"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "IBM 3270"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "IBM 3270 Semi-Condensed"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Agave"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Anonymous Pro"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Arimo"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Aurulent Sans Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "BigBlue TerminalPlus"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "BigBlue Terminal 437TT"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Bitstream Vera Sans Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Cascadia Code"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Cascadia Code,Cascadia Code ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Cascadia Code,Cascadia Code Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Cascadia Code,Cascadia Code SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Cascadia Code,Cascadia Code SemiLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Cascadia Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Cascadia Mono,Cascadia Mono ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Cascadia Mono,Cascadia Mono Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Cascadia Mono,Cascadia Mono SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Cascadia Mono,Cascadia Mono SemiLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Code New Roman"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Comic Shanns Mono,Comic Shanns Mono-Regular"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "CommitMonoV143,CommitMono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "CommitMono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Cousine"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "D2Coding ligature"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "DaddyTimeMono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "DejaVu Sans Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Droid Sans Mono for Powerline"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Envy Code R"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Fantasque Sans Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Fira Code"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Fira Code,Fira Code Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Fira Code,Fira Code Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Fira Code,Fira Code Retina"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Fira Code,Fira Code SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Fira Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Fira Mono,Fira Mono Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Geist Mono,Geist Mono Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Geist Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Geist Mono,Geist Mono Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Geist Mono,Geist Mono Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Geist Mono,Geist Mono SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Geist Mono,Geist Mono Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Geist Mono,Geist Mono UltraBlack"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Geist Mono,Geist Mono UltraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Go Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "GohuFont"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Hack"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Hasklig,Hasklig Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Hasklig"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Hasklig,Hasklig ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Hasklig,Hasklig Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Hasklig,Hasklig Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Hasklig,Hasklig Semibold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Heavy Data"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Hermit"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Hermit,Hermit LightItalic"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Hermit,Hermit Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "IBM Plex Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "IBM Plex Mono,IBM Plex Mono ExtLt"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "IBM Plex Mono,IBM Plex Mono Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "IBM Plex Mono,IBM Plex Mono Medm"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "IBM Plex Mono,IBM Plex Mono SmBld"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "IBM Plex Mono,IBM Plex Mono Text"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "IBM Plex Mono,IBM Plex Mono Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Inconsolata"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "InconsolataGo"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Inconsolata LGC"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Intel One Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Intel One Mono,Intel One Mono Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Intel One Mono,Intel One Mono Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka,Iosevka Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka,Iosevka Extrabold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka,Iosevka Extrabold Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka,Iosevka Extralight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka,Iosevka Extralight Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka,Iosevka Heavy"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka,Iosevka Heavy Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka,Iosevka Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka,Iosevka Light Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka,Iosevka Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka,Iosevka Medium Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka,Iosevka Semibold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka,Iosevka Semibold Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka,Iosevka Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka,Iosevka Thin Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term,Iosevka Term Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term,Iosevka Term Extrabold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term,Iosevka Term Extrabold Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term,Iosevka Term Extralight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term,Iosevka Term XLt Obl"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term,Iosevka Term Heavy"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term,Iosevka Term Heavy Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term,Iosevka Term Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term,Iosevka Term Light Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term,Iosevka Term Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term,Iosevka Term Medium Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term,Iosevka Term Semibold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term,Iosevka Term Semibold Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term,Iosevka Term Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term,Iosevka Term Thin Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term Slab"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term Slab,Iosevka Term Slab Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term Slab,Iosevka Term Slab Extrabold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term Slab,Iosevka Term Slab XBd Obl"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term Slab,Iosevka Term Slab Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term Slab,Iosevka Term Slab Lt Obl"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term Slab,Iosevka Term Slab Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Iosevka Term Slab,Iosevka Term Slab Md Obl"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "JetBrains Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "JetBrains Mono,JetBrains Mono ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "JetBrains Mono,JetBrains Mono ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "JetBrains Mono,JetBrains Mono Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "JetBrains Mono,JetBrains Mono Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "JetBrains Mono,JetBrains Mono SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "JetBrains Mono,JetBrains Mono Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "JetBrains Mono NL"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "JetBrains Mono NL,JetBrains Mono NL ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "JetBrains Mono NL,JetBrains Mono NL ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "JetBrains Mono NL,JetBrains Mono NL Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "JetBrains Mono NL,JetBrains Mono NL Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "JetBrains Mono NL,JetBrains Mono NL SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "JetBrains Mono NL,JetBrains Mono NL Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Lekton"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Sans"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Serif"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Lilex"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Lilex,Lilex ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Lilex,Lilex ExtraThick"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Lilex,Lilex Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Lilex,Lilex Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 1,M PLUS 1 Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 1"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 1,M PLUS 1 ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 1,M PLUS 1 ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 1,M PLUS 1 Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 1,M PLUS 1 Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 1,M PLUS 1 SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 1,M PLUS 1 Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 1 Code"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 1 Code,M PLUS 1 Code ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 1 Code,M PLUS 1 Code Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 1 Code,M PLUS 1 Code Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 1 Code,M PLUS 1 Code SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 1 Code,M PLUS 1 Code Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 2,M PLUS 2 Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 2"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 2,M PLUS 2 ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 2,M PLUS 2 ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 2,M PLUS 2 Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 2,M PLUS 2 Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 2,M PLUS 2 SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS 2,M PLUS 2 Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS Code Latin 50"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS Code Latin 50,M PLUS Code Latin 50 ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS Code Latin 50,M PLUS Code Latin 50 Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS Code Latin 50,M PLUS Code Latin 50 Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS Code Latin 50,M PLUS Code Latin 50 SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS Code Latin 50,M PLUS Code Latin 50 Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS Code Latin 60"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS Code Latin 60,M PLUS Code Latin 60 ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS Code Latin 60,M PLUS Code Latin 60 Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS Code Latin 60,M PLUS Code Latin 60 Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS Code Latin 60,M PLUS Code Latin 60 SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "M PLUS Code Latin 60,M PLUS Code Latin 60 Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Martian Mono,Martian Mono Cn Rg"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Martian Mono,Martian Mono Cn Md"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Martian Mono,Martian Mono Std Rg"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Martian Mono,Martian Mono Std Md"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Meslo LG L DZ for Powerline"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Meslo LG L for Powerline"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Meslo LG M DZ for Powerline"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Meslo LG M for Powerline"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Meslo LG S DZ for Powerline"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Meslo LG S for Powerline"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monaspace Argon"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monaspace Argon,Monaspace Argon Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monaspace Argon,Monaspace Argon Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monaspace Krypton"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monaspace Krypton,Monaspace Krypton Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monaspace Krypton,Monaspace Krypton Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monaspace Neon"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monaspace Neon,Monaspace Neon Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monaspace Neon,Monaspace Neon Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monaspace Radon"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monaspace Radon,Monaspace Radon Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monaspace Radon,Monaspace Radon Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monaspace Xenon"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monaspace Xenon,Monaspace Xenon Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monaspace Xenon,Monaspace Xenon Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "monofur for Powerline"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Monoid"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "mononoki"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono,Noto Sans Mono Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono,Noto Sans Mono ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono,Noto Sans Mono ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono,Noto Sans Mono Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono,Noto Sans Mono Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono,Noto Sans Mono SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono,Noto Sans Mono Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono Condensed,Noto Sans Mono Condensed Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono Condensed"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono Condensed,Noto Sans Mono Condensed ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono Condensed,Noto Sans Mono Condensed ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono Condensed,Noto Sans Mono Condensed Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono Condensed,Noto Sans Mono Condensed Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono Condensed,Noto Sans Mono Condensed SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono Condensed,Noto Sans Mono Condensed Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono ExtraCondensed,Noto Sans Mono ExtraCondensed Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono ExtraCondensed"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono ExtraCondensed,Noto Sans Mono ExtraCondensed ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono ExtraCondensed,Noto Sans Mono ExtraCondensed ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono ExtraCondensed,Noto Sans Mono ExtraCondensed Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono ExtraCondensed,Noto Sans Mono ExtraCondensed Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono ExtraCondensed,Noto Sans Mono ExtraCondensed SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono ExtraCondensed,Noto Sans Mono ExtraCondensed Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono SemiCondensed,Noto Sans Mono SemiCondensed Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono SemiCondensed"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono SemiCondensed,Noto Sans Mono SemiCondensed ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono SemiCondensed,Noto Sans Mono SemiCondensed ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono SemiCondensed,Noto Sans Mono SemiCondensed Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono SemiCondensed,Noto Sans Mono SemiCondensed Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono SemiCondensed,Noto Sans Mono SemiCondensed SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono SemiCondensed,Noto Sans Mono SemiCondensed Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans,Noto Sans Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans,Noto Sans ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans,Noto Sans ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans,Noto Sans Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans,Noto Sans Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans,Noto Sans SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans,Noto Sans Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Condensed,Noto Sans Condensed Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Condensed"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Condensed,Noto Sans Condensed ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Condensed,Noto Sans Condensed ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Condensed,Noto Sans Condensed Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Condensed,Noto Sans Condensed Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Condensed,Noto Sans Condensed SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Condensed,Noto Sans Condensed Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans ExtraCondensed,Noto Sans ExtraCondensed Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans ExtraCondensed"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans ExtraCondensed,Noto Sans ExtraCondensed ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans ExtraCondensed,Noto Sans ExtraCondensed ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans ExtraCondensed,Noto Sans ExtraCondensed Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans ExtraCondensed,Noto Sans ExtraCondensed Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans ExtraCondensed,Noto Sans ExtraCondensed SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans ExtraCondensed,Noto Sans ExtraCondensed Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans SemiCondensed,Noto Sans SemiCondensed Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans SemiCondensed"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans SemiCondensed,Noto Sans SemiCondensed ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans SemiCondensed,Noto Sans SemiCondensed ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans SemiCondensed,Noto Sans SemiCondensed Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans SemiCondensed,Noto Sans SemiCondensed Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans SemiCondensed,Noto Sans SemiCondensed SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans SemiCondensed,Noto Sans SemiCondensed Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif,Noto Serif Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif,Noto Serif ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif,Noto Serif ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif,Noto Serif Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif,Noto Serif Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif,Noto Serif SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif,Noto Serif Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif Condensed,Noto Serif Condensed Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif Condensed"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif Condensed,Noto Serif Condensed ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif Condensed,Noto Serif Condensed ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif Condensed,Noto Serif Condensed Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif Condensed,Noto Serif Condensed Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif Condensed,Noto Serif Condensed SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif Condensed,Noto Serif Condensed Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif ExtraCondensed,Noto Serif ExtraCondensed Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif ExtraCondensed"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif ExtraCondensed,Noto Serif ExtraCondensed ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif ExtraCondensed,Noto Serif ExtraCondensed ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif ExtraCondensed,Noto Serif ExtraCondensed Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif ExtraCondensed,Noto Serif ExtraCondensed Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif ExtraCondensed,Noto Serif ExtraCondensed SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif ExtraCondensed,Noto Serif ExtraCondensed Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif SemiCondensed,Noto Serif SemiCondensed Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif SemiCondensed"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif SemiCondensed,Noto Serif SemiCondensed ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif SemiCondensed,Noto Serif SemiCondensed ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif SemiCondensed,Noto Serif SemiCondensed Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif SemiCondensed,Noto Serif SemiCondensed Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif SemiCondensed,Noto Serif SemiCondensed SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif SemiCondensed,Noto Serif SemiCondensed Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "OpenDyslexicAlta"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "OpenDyslexic"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "OpenDyslexicMono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Overpass Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Overpass Mono,Overpass Mono Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Overpass"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Overpass,Overpass ExtraBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Overpass,Overpass ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Overpass,Overpass Heavy"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Overpass,Overpass Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Overpass,Overpass SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Overpass,Overpass Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "ProFontWindows"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "ProFontIIx"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "ProggyCleanTT CE"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "ProggyCleanTT"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "ProggyCleanTTSZ"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Rec Mono Casual"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Rec Mono Duotone"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Rec Mono Linear"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Rec Mono Semicasual"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Roboto Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Roboto Mono,Roboto Mono Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Roboto Mono,Roboto Mono Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Roboto Mono,Roboto Mono SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Roboto Mono,Roboto Mono Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Share Tech Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Source Code Pro,Source Code Pro Black"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Source Code Pro"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Source Code Pro,Source Code Pro ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Source Code Pro,Source Code Pro Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Source Code Pro,Source Code Pro Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Source Code Pro,Source Code Pro Semibold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Space Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Terminus (TTF)"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Tinos"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Ubuntu"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Ubuntu Condensed"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Ubuntu,Ubuntu Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Ubuntu Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Ubuntu Sans Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Ubuntu Sans Mono,Ubuntu Sans Mono Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Ubuntu Sans Mono,Ubuntu Sans Mono SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Ubuntu Sans"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Ubuntu Sans,Ubuntu Sans Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Ubuntu Sans,Ubuntu Sans SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Victor Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Victor Mono,Victor Mono Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Victor Mono,Victor Mono ExtraLight"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Victor Mono,Victor Mono Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Victor Mono,Victor Mono Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Victor Mono,Victor Mono SemiBold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Victor Mono,Victor Mono Thin"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono,Zed Mono Extended"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono,Zed Mono Extended Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono,Zed Mono Extrabold Extended"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono,Zed Mono XBdExObl"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono,Zed Mono Light Extended"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono,Zed Mono LtExObl"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono,Zed Mono Medium Extended"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono,Zed Mono MdExObl"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono,Zed Mono Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono,Zed Mono Extrabold"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono,Zed Mono Extrabold Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono,Zed Mono Light"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono,Zed Mono Light Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono,Zed Mono Medium"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "Zed Mono,Zed Mono Medium Oblique"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "iA Writer Duo S"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "iA Writer Mono S"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-nerd-font-symbols.conf) [test]
	pattern any family Equal(ignore blanks) "iA Writer Quattro S"
[edit]
	Edit family Prepend "Symbols Nerd Font";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-no-antialias.conf) [edit]
	Edit antialias Append false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/10-scale-bitmap-fonts.conf) [test]
	font any outline Equal false
[edit]
	Edit pixelsizefixupfactor Assign pixelsize (pattern)  Divide pixelsize (font) ;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/10-scale-bitmap-fonts.conf) [test]
	font any outline Equal false
	font any scalable Equal false
	font any hinting Equal true
[edit]
	Edit scalingnotneeded Assign pixelsizefixupfactor  Less 1.2 And pixelsizefixupfactor  More 0.8;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/10-scale-bitmap-fonts.conf) [test]
	font any scalingnotneeded Equal true
[edit]
	Edit pixelsizefixupfactor Assign 1;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/10-scale-bitmap-fonts.conf) [test]
	font any outline Equal false
	font any pixelsizefixupfactor NotEqual 1
[edit]
	Edit matrix Assign matrix  Times [pixelsizefixupfactor  0; 0 pixelsizefixupfactor ];
	Edit size Assign size  Divide pixelsizefixupfactor ;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-sub-pixel-bgr.conf) [edit]
	Edit rgba Append bgr;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-sub-pixel-none.conf) [edit]
	Edit rgba Append none;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-sub-pixel-rgb.conf) [edit]
	Edit rgba Append rgb;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-sub-pixel-vbgr.conf) [edit]
	Edit rgba Append vbgr;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-sub-pixel-vrgb.conf) [edit]
	Edit rgba Append vrgb;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-unhinted.conf) [edit]
	Edit hinting Append false;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/10-yes-antialias.conf) [edit]
	Edit antialias Append true;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/11-lcdfilter-default.conf) [edit]
	Edit lcdfilter Append lcddefault;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/11-lcdfilter-legacy.conf) [edit]
	Edit lcdfilter Append lcdlegacy;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/11-lcdfilter-light.conf) [edit]
	Edit lcdfilter Append lcdlight;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/11-lcdfilter-none.conf) [edit]
	Edit lcdfilter Append lcdnone;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/20-unhint-small-vera.conf) [test]
	font any family Equal(ignore blanks) "Bitstream Vera Sans"
	font any pixelsize Less 7.5
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/20-unhint-small-vera.conf) [test]
	font any family Equal(ignore blanks) "Bitstream Vera Serif"
	font any pixelsize Less 7.5
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/20-unhint-small-vera.conf) [test]
	font any family Equal(ignore blanks) "Bitstream Vera Sans Mono"
	font any pixelsize Less 7.5
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/25-unhint-nonlatin.conf) [test]
	font any family Equal(ignore blanks) "Kochi Mincho"
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/25-unhint-nonlatin.conf) [test]
	font any family Equal(ignore blanks) "Kochi Gothic"
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/25-unhint-nonlatin.conf) [test]
	font any family Equal(ignore blanks) "Sazanami Mincho"
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/25-unhint-nonlatin.conf) [test]
	font any family Equal(ignore blanks) "Sazanami Gothic"
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/25-unhint-nonlatin.conf) [test]
	font any family Equal(ignore blanks) "Baekmuk Batang"
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/25-unhint-nonlatin.conf) [test]
	font any family Equal(ignore blanks) "Baekmuk Dotum"
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/25-unhint-nonlatin.conf) [test]
	font any family Equal(ignore blanks) "Baekmuk Gulim"
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/25-unhint-nonlatin.conf) [test]
	font any family Equal(ignore blanks) "Baekmuk Headline"
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/25-unhint-nonlatin.conf) [test]
	font any family Equal(ignore blanks) "AR PL Mingti2L Big5"
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/25-unhint-nonlatin.conf) [test]
	font any family Equal(ignore blanks) "AR PL ShanHeiSun Uni"
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/25-unhint-nonlatin.conf) [test]
	font any family Equal(ignore blanks) "AR PL KaitiM Big5"
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/25-unhint-nonlatin.conf) [test]
	font any family Equal(ignore blanks) "AR PL ZenKai Uni"
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/25-unhint-nonlatin.conf) [test]
	font any family Equal(ignore blanks) "AR PL SungtiL GB"
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/25-unhint-nonlatin.conf) [test]
	font any family Equal(ignore blanks) "AR PL KaitiM GB"
[edit]
	Edit hinting Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/25-unhint-nonlatin.conf) [test]
	font any family Equal(ignore blanks) "ZYSong18030"
[edit]
	Edit hinting Assign false;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica LT Std"
[edit]
	Edit family AppendLast "Helvetica";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Sans L"
[edit]
	Edit family AppendLast "Helvetica";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Sans"
[edit]
	Edit family AppendLast "Helvetica";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Heros"
[edit]
	Edit family AppendLast "Helvetica";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Sans Narrow"
[edit]
	Edit family AppendLast "Helvetica Narrow";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Heros Cn"
[edit]
	Edit family AppendLast "Helvetica Narrow";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Roman No9 L"
[edit]
	Edit family AppendLast "Times";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Roman"
[edit]
	Edit family AppendLast "Times";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Termes"
[edit]
	Edit family AppendLast "Times";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Courier Std"
[edit]
	Edit family Append "Courier";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Mono L"
[edit]
	Edit family AppendLast "Courier";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Mono"
[edit]
	Edit family AppendLast "Courier";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Mono PS"
[edit]
	Edit family AppendLast "Courier";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Cursor"
[edit]
	Edit family AppendLast "Courier";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Avant Garde"
[edit]
	Edit family AppendLast "ITC Avant Garde Gothic";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "URW Gothic L"
[edit]
	Edit family AppendLast "ITC Avant Garde Gothic";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "URW Gothic"
[edit]
	Edit family AppendLast "ITC Avant Garde Gothic";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Adventor"
[edit]
	Edit family AppendLast "ITC Avant Garde Gothic";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Bookman"
[edit]
	Edit family AppendLast "ITC Bookman";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "URW Bookman L"
[edit]
	Edit family AppendLast "ITC Bookman";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Bookman URW"
[edit]
	Edit family AppendLast "ITC Bookman";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "URW Bookman"
[edit]
	Edit family AppendLast "ITC Bookman";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Bonum"
[edit]
	Edit family AppendLast "ITC Bookman";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Bookman Old Style"
[edit]
	Edit family AppendLast "ITC Bookman";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Zapf Chancery"
[edit]
	Edit family AppendLast "ITC Zapf Chancery";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "URW Chancery L"
[edit]
	Edit family AppendLast "ITC Zapf Chancery";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Chancery URW"
[edit]
	Edit family AppendLast "ITC Zapf Chancery";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Z003"
[edit]
	Edit family AppendLast "ITC Zapf Chancery";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Chorus"
[edit]
	Edit family AppendLast "ITC Zapf Chancery";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "URW Palladio L"
[edit]
	Edit family AppendLast "Palatino";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Palladio URW"
[edit]
	Edit family AppendLast "Palatino";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "P052"
[edit]
	Edit family AppendLast "Palatino";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Pagella"
[edit]
	Edit family AppendLast "Palatino";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Palatino Linotype"
[edit]
	Edit family AppendLast "Palatino";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Century Schoolbook L"
[edit]
	Edit family AppendLast "New Century Schoolbook";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Century SchoolBook URW"
[edit]
	Edit family AppendLast "New Century Schoolbook";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "C059"
[edit]
	Edit family AppendLast "New Century Schoolbook";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "TeX Gyre Schola"
[edit]
	Edit family AppendLast "New Century Schoolbook";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Century Schoolbook"
[edit]
	Edit family AppendLast "New Century Schoolbook";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Arimo"
[edit]
	Edit family AppendLast "Arial";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Sans"
[edit]
	Edit family AppendLast "Arial";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Sans Narrow"
[edit]
	Edit family AppendLast "Arial Narrow";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Albany"
[edit]
	Edit family AppendLast "Arial";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Albany AMT"
[edit]
	Edit family AppendLast "Arial";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Tinos"
[edit]
	Edit family AppendLast "Times New Roman";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Serif"
[edit]
	Edit family AppendLast "Times New Roman";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Thorndale"
[edit]
	Edit family AppendLast "Times New Roman";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Thorndale AMT"
[edit]
	Edit family AppendLast "Times New Roman";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Cousine"
[edit]
	Edit family AppendLast "Courier New";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Mono"
[edit]
	Edit family AppendLast "Courier New";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Cumberland"
[edit]
	Edit family AppendLast "Courier New";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Cumberland AMT"
[edit]
	Edit family AppendLast "Courier New";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Gelasio"
[edit]
	Edit family AppendLast "Georgia";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Caladea"
[edit]
	Edit family AppendLast "Cambria";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Carlito"
[edit]
	Edit family AppendLast "Calibri";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "SymbolNeu"
[edit]
	Edit family AppendLast "Symbol";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica"
[edit]
	Edit family AppendLast "Arial";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica Narrow"
[edit]
	Edit family AppendLast "Arial Narrow";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Times"
[edit]
	Edit family AppendLast "Times New Roman";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Courier"
[edit]
	Edit family AppendLast "Courier New";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Arial"
[edit]
	Edit family AppendLast "Helvetica";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Arial Narrow"
[edit]
	Edit family AppendLast "Helvetica Narrow";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Times New Roman"
[edit]
	Edit family AppendLast "Times";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Courier New"
[edit]
	Edit family AppendLast "Courier";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica"
[edit]
	Edit family Append "Helvetica LT Std";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica"
[edit]
	Edit family Append "TeX Gyre Heros";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica Narrow"
[edit]
	Edit family Append "TeX Gyre Heros Cn";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Times"
[edit]
	Edit family Append "TeX Gyre Termes";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Courier"
[edit]
	Edit family Append "TeX Gyre Cursor";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Courier"
[edit]
	Edit family Append "Courier Std";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "ITC Avant Garde Gothic"
[edit]
	Edit family Append "TeX Gyre Adventor";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "ITC Bookman"
[edit]
	Edit family Append "Bookman Old Style" Comma "TeX Gyre Bonum";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "ITC Zapf Chancery"
[edit]
	Edit family Append "TeX Gyre Chorus";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Palatino"
[edit]
	Edit family Append "Palatino Linotype" Comma "TeX Gyre Pagella";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "New Century Schoolbook"
[edit]
	Edit family Append "Century Schoolbook" Comma "TeX Gyre Schola";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Arial"
[edit]
	Edit family Append "Arimo" Comma "Liberation Sans" Comma "Albany" Comma "Albany AMT";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Arial Narrow"
[edit]
	Edit family Append "Liberation Sans Narrow";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Times New Roman"
[edit]
	Edit family Append "Tinos" Comma "Liberation Serif" Comma "Thorndale" Comma "Thorndale AMT";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Courier New"
[edit]
	Edit family Append "Cousine" Comma "Liberation Mono" Comma "Cumberland" Comma "Cumberland AMT";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Georgia"
[edit]
	Edit family Append "Gelasio";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Cambria"
[edit]
	Edit family Append "Caladea";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Calibri"
[edit]
	Edit family Append "Carlito";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/30-metric-aliases.conf) [test]
	pattern any family Equal(ignore blanks) "Symbol"
[edit]
	Edit family Append "SymbolNeu";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "aa"
[edit]
	Edit lang Assign "aa";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ab"
[edit]
	Edit lang Assign "ab";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "af"
[edit]
	Edit lang Assign "af";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "agr"
[edit]
	Edit lang Assign "agr";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ak"
[edit]
	Edit lang Assign "ak";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "am"
[edit]
	Edit lang Assign "am";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "an"
[edit]
	Edit lang Assign "an";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "anp"
[edit]
	Edit lang Assign "anp";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ar"
[edit]
	Edit lang Assign "ar";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "as"
[edit]
	Edit lang Assign "as";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ast"
[edit]
	Edit lang Assign "ast";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "av"
[edit]
	Edit lang Assign "av";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ay"
[edit]
	Edit lang Assign "ay";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ayc"
[edit]
	Edit lang Assign "ayc";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ba"
[edit]
	Edit lang Assign "ba";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "be"
[edit]
	Edit lang Assign "be";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "bem"
[edit]
	Edit lang Assign "bem";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "bg"
[edit]
	Edit lang Assign "bg";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "bh"
[edit]
	Edit lang Assign "bh";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "bhb"
[edit]
	Edit lang Assign "bhb";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "bho"
[edit]
	Edit lang Assign "bho";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "bi"
[edit]
	Edit lang Assign "bi";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "bin"
[edit]
	Edit lang Assign "bin";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "bm"
[edit]
	Edit lang Assign "bm";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "bn"
[edit]
	Edit lang Assign "bn";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "bo"
[edit]
	Edit lang Assign "bo";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "br"
[edit]
	Edit lang Assign "br";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "brx"
[edit]
	Edit lang Assign "brx";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "bs"
[edit]
	Edit lang Assign "bs";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "bua"
[edit]
	Edit lang Assign "bua";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "byn"
[edit]
	Edit lang Assign "byn";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ca"
[edit]
	Edit lang Assign "ca";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ce"
[edit]
	Edit lang Assign "ce";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ch"
[edit]
	Edit lang Assign "ch";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "chm"
[edit]
	Edit lang Assign "chm";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "chr"
[edit]
	Edit lang Assign "chr";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ckb"
[edit]
	Edit lang Assign "ckb";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "cmn"
[edit]
	Edit lang Assign "cmn";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "co"
[edit]
	Edit lang Assign "co";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "crh"
[edit]
	Edit lang Assign "crh";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "cs"
[edit]
	Edit lang Assign "cs";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "csb"
[edit]
	Edit lang Assign "csb";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "cu"
[edit]
	Edit lang Assign "cu";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "cv"
[edit]
	Edit lang Assign "cv";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "cy"
[edit]
	Edit lang Assign "cy";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "da"
[edit]
	Edit lang Assign "da";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "de"
[edit]
	Edit lang Assign "de";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "doi"
[edit]
	Edit lang Assign "doi";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "dsb"
[edit]
	Edit lang Assign "dsb";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "dv"
[edit]
	Edit lang Assign "dv";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "dz"
[edit]
	Edit lang Assign "dz";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ee"
[edit]
	Edit lang Assign "ee";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "el"
[edit]
	Edit lang Assign "el";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "en"
[edit]
	Edit lang Assign "en";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "eo"
[edit]
	Edit lang Assign "eo";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "es"
[edit]
	Edit lang Assign "es";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "et"
[edit]
	Edit lang Assign "et";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "eu"
[edit]
	Edit lang Assign "eu";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "fa"
[edit]
	Edit lang Assign "fa";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "fat"
[edit]
	Edit lang Assign "fat";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ff"
[edit]
	Edit lang Assign "ff";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "fi"
[edit]
	Edit lang Assign "fi";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "fil"
[edit]
	Edit lang Assign "fil";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "fj"
[edit]
	Edit lang Assign "fj";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "fo"
[edit]
	Edit lang Assign "fo";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "fr"
[edit]
	Edit lang Assign "fr";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "fur"
[edit]
	Edit lang Assign "fur";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "fy"
[edit]
	Edit lang Assign "fy";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ga"
[edit]
	Edit lang Assign "ga";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "gd"
[edit]
	Edit lang Assign "gd";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "gez"
[edit]
	Edit lang Assign "gez";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "gl"
[edit]
	Edit lang Assign "gl";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "gn"
[edit]
	Edit lang Assign "gn";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "gu"
[edit]
	Edit lang Assign "gu";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "gv"
[edit]
	Edit lang Assign "gv";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ha"
[edit]
	Edit lang Assign "ha";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "hak"
[edit]
	Edit lang Assign "hak";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "haw"
[edit]
	Edit lang Assign "haw";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "he"
[edit]
	Edit lang Assign "he";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "hi"
[edit]
	Edit lang Assign "hi";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "hif"
[edit]
	Edit lang Assign "hif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "hne"
[edit]
	Edit lang Assign "hne";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ho"
[edit]
	Edit lang Assign "ho";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "hr"
[edit]
	Edit lang Assign "hr";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "hsb"
[edit]
	Edit lang Assign "hsb";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ht"
[edit]
	Edit lang Assign "ht";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "hu"
[edit]
	Edit lang Assign "hu";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "hy"
[edit]
	Edit lang Assign "hy";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "hz"
[edit]
	Edit lang Assign "hz";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ia"
[edit]
	Edit lang Assign "ia";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "id"
[edit]
	Edit lang Assign "id";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ie"
[edit]
	Edit lang Assign "ie";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ig"
[edit]
	Edit lang Assign "ig";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ii"
[edit]
	Edit lang Assign "ii";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ik"
[edit]
	Edit lang Assign "ik";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "io"
[edit]
	Edit lang Assign "io";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "is"
[edit]
	Edit lang Assign "is";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "it"
[edit]
	Edit lang Assign "it";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "iu"
[edit]
	Edit lang Assign "iu";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ja"
[edit]
	Edit lang Assign "ja";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "jv"
[edit]
	Edit lang Assign "jv";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ka"
[edit]
	Edit lang Assign "ka";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "kaa"
[edit]
	Edit lang Assign "kaa";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "kab"
[edit]
	Edit lang Assign "kab";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ki"
[edit]
	Edit lang Assign "ki";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "kj"
[edit]
	Edit lang Assign "kj";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "kk"
[edit]
	Edit lang Assign "kk";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "kl"
[edit]
	Edit lang Assign "kl";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "km"
[edit]
	Edit lang Assign "km";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "kn"
[edit]
	Edit lang Assign "kn";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ko"
[edit]
	Edit lang Assign "ko";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "kok"
[edit]
	Edit lang Assign "kok";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "kr"
[edit]
	Edit lang Assign "kr";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ks"
[edit]
	Edit lang Assign "ks";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "kum"
[edit]
	Edit lang Assign "kum";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "kv"
[edit]
	Edit lang Assign "kv";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "kw"
[edit]
	Edit lang Assign "kw";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "kwm"
[edit]
	Edit lang Assign "kwm";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ky"
[edit]
	Edit lang Assign "ky";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "la"
[edit]
	Edit lang Assign "la";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "lah"
[edit]
	Edit lang Assign "lah";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "lb"
[edit]
	Edit lang Assign "lb";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "lez"
[edit]
	Edit lang Assign "lez";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "lg"
[edit]
	Edit lang Assign "lg";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "li"
[edit]
	Edit lang Assign "li";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "lij"
[edit]
	Edit lang Assign "lij";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ln"
[edit]
	Edit lang Assign "ln";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "lo"
[edit]
	Edit lang Assign "lo";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "lt"
[edit]
	Edit lang Assign "lt";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "lv"
[edit]
	Edit lang Assign "lv";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "lzh"
[edit]
	Edit lang Assign "lzh";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "mag"
[edit]
	Edit lang Assign "mag";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "mai"
[edit]
	Edit lang Assign "mai";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "mfe"
[edit]
	Edit lang Assign "mfe";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "mg"
[edit]
	Edit lang Assign "mg";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "mh"
[edit]
	Edit lang Assign "mh";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "mhr"
[edit]
	Edit lang Assign "mhr";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "mi"
[edit]
	Edit lang Assign "mi";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "miq"
[edit]
	Edit lang Assign "miq";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "mjw"
[edit]
	Edit lang Assign "mjw";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "mk"
[edit]
	Edit lang Assign "mk";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ml"
[edit]
	Edit lang Assign "ml";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "mni"
[edit]
	Edit lang Assign "mni";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "mnw"
[edit]
	Edit lang Assign "mnw";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "mo"
[edit]
	Edit lang Assign "mo";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "mr"
[edit]
	Edit lang Assign "mr";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ms"
[edit]
	Edit lang Assign "ms";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "mt"
[edit]
	Edit lang Assign "mt";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "my"
[edit]
	Edit lang Assign "my";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "na"
[edit]
	Edit lang Assign "na";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "nan"
[edit]
	Edit lang Assign "nan";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "nb"
[edit]
	Edit lang Assign "nb";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "nds"
[edit]
	Edit lang Assign "nds";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ne"
[edit]
	Edit lang Assign "ne";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ng"
[edit]
	Edit lang Assign "ng";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "nhn"
[edit]
	Edit lang Assign "nhn";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "niu"
[edit]
	Edit lang Assign "niu";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "nl"
[edit]
	Edit lang Assign "nl";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "nn"
[edit]
	Edit lang Assign "nn";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "no"
[edit]
	Edit lang Assign "no";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "nqo"
[edit]
	Edit lang Assign "nqo";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "nr"
[edit]
	Edit lang Assign "nr";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "nso"
[edit]
	Edit lang Assign "nso";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "nv"
[edit]
	Edit lang Assign "nv";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ny"
[edit]
	Edit lang Assign "ny";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "oc"
[edit]
	Edit lang Assign "oc";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "om"
[edit]
	Edit lang Assign "om";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "or"
[edit]
	Edit lang Assign "or";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "os"
[edit]
	Edit lang Assign "os";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ota"
[edit]
	Edit lang Assign "ota";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "pa"
[edit]
	Edit lang Assign "pa";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "pl"
[edit]
	Edit lang Assign "pl";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "pt"
[edit]
	Edit lang Assign "pt";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "qu"
[edit]
	Edit lang Assign "qu";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "quz"
[edit]
	Edit lang Assign "quz";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "raj"
[edit]
	Edit lang Assign "raj";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "rif"
[edit]
	Edit lang Assign "rif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "rm"
[edit]
	Edit lang Assign "rm";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "rn"
[edit]
	Edit lang Assign "rn";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ro"
[edit]
	Edit lang Assign "ro";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ru"
[edit]
	Edit lang Assign "ru";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "rw"
[edit]
	Edit lang Assign "rw";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sa"
[edit]
	Edit lang Assign "sa";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sah"
[edit]
	Edit lang Assign "sah";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sat"
[edit]
	Edit lang Assign "sat";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sc"
[edit]
	Edit lang Assign "sc";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sco"
[edit]
	Edit lang Assign "sco";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sd"
[edit]
	Edit lang Assign "sd";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "se"
[edit]
	Edit lang Assign "se";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sel"
[edit]
	Edit lang Assign "sel";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sg"
[edit]
	Edit lang Assign "sg";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sgs"
[edit]
	Edit lang Assign "sgs";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sh"
[edit]
	Edit lang Assign "sh";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "shn"
[edit]
	Edit lang Assign "shn";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "shs"
[edit]
	Edit lang Assign "shs";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "si"
[edit]
	Edit lang Assign "si";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sid"
[edit]
	Edit lang Assign "sid";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sk"
[edit]
	Edit lang Assign "sk";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sl"
[edit]
	Edit lang Assign "sl";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sm"
[edit]
	Edit lang Assign "sm";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sma"
[edit]
	Edit lang Assign "sma";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "smj"
[edit]
	Edit lang Assign "smj";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "smn"
[edit]
	Edit lang Assign "smn";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sms"
[edit]
	Edit lang Assign "sms";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sn"
[edit]
	Edit lang Assign "sn";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "so"
[edit]
	Edit lang Assign "so";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sq"
[edit]
	Edit lang Assign "sq";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sr"
[edit]
	Edit lang Assign "sr";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ss"
[edit]
	Edit lang Assign "ss";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "st"
[edit]
	Edit lang Assign "st";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "su"
[edit]
	Edit lang Assign "su";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sv"
[edit]
	Edit lang Assign "sv";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "sw"
[edit]
	Edit lang Assign "sw";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "syr"
[edit]
	Edit lang Assign "syr";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "szl"
[edit]
	Edit lang Assign "szl";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ta"
[edit]
	Edit lang Assign "ta";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "tcy"
[edit]
	Edit lang Assign "tcy";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "te"
[edit]
	Edit lang Assign "te";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "tg"
[edit]
	Edit lang Assign "tg";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "th"
[edit]
	Edit lang Assign "th";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "the"
[edit]
	Edit lang Assign "the";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "tig"
[edit]
	Edit lang Assign "tig";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "tk"
[edit]
	Edit lang Assign "tk";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "tl"
[edit]
	Edit lang Assign "tl";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "tn"
[edit]
	Edit lang Assign "tn";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "to"
[edit]
	Edit lang Assign "to";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "tpi"
[edit]
	Edit lang Assign "tpi";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "tr"
[edit]
	Edit lang Assign "tr";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ts"
[edit]
	Edit lang Assign "ts";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "tt"
[edit]
	Edit lang Assign "tt";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "tw"
[edit]
	Edit lang Assign "tw";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ty"
[edit]
	Edit lang Assign "ty";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "tyv"
[edit]
	Edit lang Assign "tyv";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ug"
[edit]
	Edit lang Assign "ug";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "uk"
[edit]
	Edit lang Assign "uk";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "unm"
[edit]
	Edit lang Assign "unm";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ur"
[edit]
	Edit lang Assign "ur";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "uz"
[edit]
	Edit lang Assign "uz";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "ve"
[edit]
	Edit lang Assign "ve";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "vi"
[edit]
	Edit lang Assign "vi";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "vo"
[edit]
	Edit lang Assign "vo";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "vot"
[edit]
	Edit lang Assign "vot";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "wa"
[edit]
	Edit lang Assign "wa";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "wae"
[edit]
	Edit lang Assign "wae";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "wal"
[edit]
	Edit lang Assign "wal";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "wen"
[edit]
	Edit lang Assign "wen";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "wo"
[edit]
	Edit lang Assign "wo";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "xh"
[edit]
	Edit lang Assign "xh";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "yap"
[edit]
	Edit lang Assign "yap";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "yi"
[edit]
	Edit lang Assign "yi";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "yo"
[edit]
	Edit lang Assign "yo";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "yue"
[edit]
	Edit lang Assign "yue";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "yuw"
[edit]
	Edit lang Assign "yuw";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "za"
[edit]
	Edit lang Assign "za";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/35-lang-normalize.conf) [test]
	pattern any lang Contains "zu"
[edit]
	Edit lang Assign "zu";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Nazli"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Lotoos"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Mitra"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Ferdosi"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Badr"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Zar"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Titr"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Jadid"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Kochi Mincho"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "AR PL SungtiL GB"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "AR PL Mingti2L Big5"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "ＭＳ 明朝"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "NanumMyeongjo"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "UnBatang"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Baekmuk Batang"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "MgOpen Canonica"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Sazanami Mincho"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "AR PL ZenKai Uni"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "ZYSong18030"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "FreeSerif"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "SimSun"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Arshia"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Elham"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Farnaz"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Nasim"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Sina"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Roya"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Koodak"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Terafik"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Kochi Gothic"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "AR PL KaitiM GB"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "AR PL KaitiM Big5"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "ＭＳ ゴシック"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "NanumGothic"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "UnDotum"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Baekmuk Dotum"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "MgOpen Modata"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Sazanami Gothic"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "AR PL ShanHeiSun Uni"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "ZYSong18030"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "FreeSans"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "NSimSun"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "ZYSong18030"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "NanumGothicCoding"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "FreeMono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Homa"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Kamran"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Fantezi"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Tabassom"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "IranNastaliq"
[edit]
	Edit family AppendLast "cursive";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Nafees Nastaleeq"
[edit]
	Edit family AppendLast "cursive";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Arabic UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Bengali UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Devanagari UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Gujarati UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Gurmukhi UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Kannada UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Khmer UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Lao UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Malayalam UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Myanmar UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Oriya UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Sinhala UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Tamil UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Telugu UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Thai UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Leelawadee UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Nirmala UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Yu Gothic UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Meiryo UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "MS UI Gothic"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Khmer UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Lao UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Microsoft JhengHei UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/40-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "Microsoft YaHei UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-Hack.conf) [test]
	pattern any family Equal(ignore blanks) "Hack"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-Hack.conf) [test]
	pattern any family Equal "Hack"
	pattern any family Equal "sans-serif"
[edit]
	Edit family Delete none;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Color Emoji"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Apple Color Emoji"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Segoe UI Emoji"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Twitter Color Emoji"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "EmojiOne Mozilla"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Emoji Two"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "JoyPixels"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Emoji One"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Emoji"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Android Emoji"
[edit]
	Edit family AppendLast "emoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal "emoji"
[edit]
	Edit lang Prepend "und-zsye";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any lang Equal "und-zsye"
	pattern all family NotEqual "emoji"
[edit]
	Edit family Append "emoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "XITS Math"
[edit]
	Edit family AppendLast "math";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "STIX Two Math"
[edit]
	Edit family AppendLast "math";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Cambria Math"
[edit]
	Edit family AppendLast "math";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Latin Modern Math"
[edit]
	Edit family AppendLast "math";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Minion Math"
[edit]
	Edit family AppendLast "math";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Lucida Math"
[edit]
	Edit family AppendLast "math";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal(ignore blanks) "Asana Math"
[edit]
	Edit family AppendLast "math";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any family Equal "math"
[edit]
	Edit lang Prepend "und-zmth";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-generic.conf) [test]
	pattern any lang Equal "und-zmth"
	pattern all family NotEqual "math"
[edit]
	Edit family Append "math";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Bitstream Vera Serif"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Cambria"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Constantia"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "DejaVu Serif"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Elephant"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Garamond"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Georgia"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Serif"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Luxi Serif"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "MS Serif"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Roman No9 L"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Roman"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Palatino Linotype"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Thorndale AMT"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Thorndale"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Times New Roman"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Times"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Albany AMT"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Albany"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Arial Unicode MS"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Arial"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Bitstream Vera Sans"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Britannic"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Calibri"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Candara"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Century Gothic"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Corbel"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "DejaVu Sans"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica LT Std"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Helvetica"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Haettenschweiler"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Sans"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "MS Sans Serif"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Sans L"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Sans"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Luxi Sans"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Tahoma"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Trebuchet MS"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Twentieth Century"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Verdana"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Andale Mono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Bitstream Vera Sans Mono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Consolas"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Courier New"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Courier Std"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Courier"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Cumberland AMT"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Cumberland"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "DejaVu Sans Mono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Fixedsys"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Inconsolata"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Liberation Mono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Luxi Mono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Mono L"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Mono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Nimbus Mono PS"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Terminal"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Bauhaus Std"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Cooper Std"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Copperplate Gothic Std"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Impact"
[edit]
	Edit family AppendLast "fantasy";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Comic Sans MS"
[edit]
	Edit family AppendLast "cursive";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "ITC Zapf Chancery Std"
[edit]
	Edit family AppendLast "cursive";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Zapfino"
[edit]
	Edit family AppendLast "cursive";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Cantarell"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Segoe UI"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Segoe UI Historic"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/45-latin.conf) [test]
	pattern any family Equal(ignore blanks) "Segoe UI Symbol"
[edit]
	Edit family AppendLast "system-ui";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/46-noto-mono.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans Mono"
[edit]
	Edit family AppendLast "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/46-noto-sans.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Sans"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/46-noto-serif.conf) [test]
	pattern any family Equal(ignore blanks) "Noto Serif"
[edit]
	Edit family AppendLast "serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/48-spacing.conf) [test]
	pattern any spacing Equal 100
[edit]
	Edit family Prepend "monospace";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/49-sansserif.conf) [test]
	pattern all family NotEqual "sans-serif"
	pattern all family NotEqual "serif"
	pattern all family NotEqual "monospace"
[edit]
	Edit family AppendLast "sans-serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/60-generic.conf) [test]
	pattern any lang Equal "und-zsye"
	pattern all color NotEqual true
	pattern all color NotEqual false
[edit]
	Edit color Append true;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/60-generic.conf) [test]
	pattern any family Equal(ignore blanks) "emoji"
[edit]
	Edit family Prepend "Noto Color Emoji" Comma "Apple Color Emoji" Comma "Segoe UI Emoji" Comma "Twitter Color Emoji" Comma "EmojiOne Mozilla" Comma "Emoji Two" Comma "JoyPixels" Comma "Emoji One" Comma "Noto Emoji" Comma "Android Emoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/60-generic.conf) [test]
	pattern any family Equal(ignore blanks) "math"
[edit]
	Edit family Prepend "XITS Math" Comma "STIX Two Math" Comma "Cambria Math" Comma "Latin Modern Math" Comma "Minion Math" Comma "Lucida Math" Comma "Asana Math";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/60-latin.conf) [test]
	pattern any family Equal(ignore blanks) "serif"
[edit]
	Edit family Prepend "Noto Serif" Comma "DejaVu Serif" Comma "Times New Roman" Comma "Thorndale AMT" Comma "Luxi Serif" Comma "Nimbus Roman No9 L" Comma "Nimbus Roman" Comma "Times";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/60-latin.conf) [test]
	pattern any family Equal(ignore blanks) "sans-serif"
[edit]
	Edit family Prepend "Noto Sans" Comma "DejaVu Sans" Comma "Verdana" Comma "Arial" Comma "Albany AMT" Comma "Luxi Sans" Comma "Nimbus Sans L" Comma "Nimbus Sans" Comma "Helvetica" Comma "Lucida Sans Unicode" Comma "BPG Glaho International" Comma "Tahoma";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/60-latin.conf) [test]
	pattern any family Equal(ignore blanks) "monospace"
[edit]
	Edit family Prepend "Noto Sans Mono" Comma "DejaVu Sans Mono" Comma "Inconsolata" Comma "Andale Mono" Comma "Courier New" Comma "Cumberland AMT" Comma "Luxi Mono" Comma "Nimbus Mono L" Comma "Nimbus Mono" Comma "Nimbus Mono PS" Comma "Courier";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/60-latin.conf) [test]
	pattern any family Equal(ignore blanks) "fantasy"
[edit]
	Edit family Prepend "Impact" Comma "Copperplate Gothic Std" Comma "Cooper Std" Comma "Bauhaus Std";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/60-latin.conf) [test]
	pattern any family Equal(ignore blanks) "cursive"
[edit]
	Edit family Prepend "ITC Zapf Chancery Std" Comma "Zapfino" Comma "Comic Sans MS";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/60-latin.conf) [test]
	pattern any family Equal(ignore blanks) "system-ui"
[edit]
	Edit family Prepend "Cantarell" Comma "Noto Sans UI" Comma "Segoe UI" Comma "Segoe UI Historic" Comma "Segoe UI Symbol";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Nesf"
[edit]
	Edit family Append "Nesf2";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Nesf2"
[edit]
	Edit family Append "Persian_sansserif_default";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Nazanin"
[edit]
	Edit family Append "Nazli";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Lotus"
[edit]
	Edit family Append "Lotoos";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Yaqut"
[edit]
	Edit family Append "Yaghoot";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Yaghut"
[edit]
	Edit family Append "Yaghoot";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Traffic"
[edit]
	Edit family Append "Terafik";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Ferdowsi"
[edit]
	Edit family Append "Ferdosi";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Fantezy"
[edit]
	Edit family Append "Fantezi";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Jadid"
[edit]
	Edit family Append "Persian_title";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Titr"
[edit]
	Edit family Append "Persian_title";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Kamran"
[edit]
	Edit family Append "Persian_fantasy" Comma "Homa";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Homa"
[edit]
	Edit family Append "Persian_fantasy" Comma "Kamran";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Fantezi"
[edit]
	Edit family Append "Persian_fantasy";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Tabassom"
[edit]
	Edit family Append "Persian_fantasy";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Arshia"
[edit]
	Edit family Append "Persian_square";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Nasim"
[edit]
	Edit family Append "Persian_square";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Elham"
[edit]
	Edit family Append "Persian_square" Comma "Farnaz";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Farnaz"
[edit]
	Edit family Append "Persian_square" Comma "Elham";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Sina"
[edit]
	Edit family Append "Persian_square";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Persian_title"
[edit]
	Edit family Append "Titr" Comma "Jadid" Comma "Persian_serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Persian_fantasy"
[edit]
	Edit family Append "Homa" Comma "Kamran" Comma "Fantezi" Comma "Tabassom" Comma "Persian_square";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "Persian_square"
[edit]
	Edit family Append "Arshia" Comma "Elham" Comma "Farnaz" Comma "Nasim" Comma "Sina" Comma "Persian_serif";

Add Rule(kind:2, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	scan any family Equal(ignore blanks) "Elham"
[edit]
	Edit foundry Assign "farsiweb";

Add Rule(kind:2, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	scan any family Equal(ignore blanks) "Homa"
[edit]
	Edit foundry Assign "farsiweb";

Add Rule(kind:2, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	scan any family Equal(ignore blanks) "Koodak"
[edit]
	Edit foundry Assign "farsiweb";

Add Rule(kind:2, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	scan any family Equal(ignore blanks) "Nazli"
[edit]
	Edit foundry Assign "farsiweb";

Add Rule(kind:2, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	scan any family Equal(ignore blanks) "Roya"
[edit]
	Edit foundry Assign "farsiweb";

Add Rule(kind:2, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	scan any family Equal(ignore blanks) "Terafik"
[edit]
	Edit foundry Assign "farsiweb";

Add Rule(kind:2, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	scan any family Equal(ignore blanks) "Titr"
[edit]
	Edit foundry Assign "farsiweb";

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	font any foundry Equal "TURNED-OFF"
	font any foundry Equal "farsiweb"
	font any slant Equal roman
	pattern any slant NotEqual roman
[edit]
	Edit matrix Assign matrix  Times [1 -0.2; 0 1];
	Edit slant Assign oblique;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	font any foundry Equal "farsiweb"
[edit]
	Edit autohint Assign false;
	Edit hinting Assign false;
	Edit embeddedbitmap Assign false;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "serif"
[edit]
	Edit family Append "Nazli" Comma "Lotoos" Comma "Mitra" Comma "Ferdosi" Comma "Badr" Comma "Zar";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "sans-serif"
[edit]
	Edit family Append "Roya" Comma "Koodak" Comma "Terafik";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "monospace"
[edit]
	Edit family Append "Terafik";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "fantasy"
[edit]
	Edit family Append "Homa" Comma "Kamran" Comma "Fantezi" Comma "Tabassom";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal(ignore blanks) "cursive"
[edit]
	Edit family Append "IranNastaliq" Comma "Nafees Nastaleeq";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal "serif"
	pattern any weight MoreEqual 200
	pattern any size MoreEqual 24
[edit]
	Edit family Prepend "Titr";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal "sans-serif"
	pattern any weight MoreEqual 200
	pattern any size MoreEqual 24
[edit]
	Edit family Prepend "Titr";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal "Persian_sansserif_default"
	pattern any weight MoreEqual 200
	pattern any size MoreEqual 24
[edit]
	Edit family Prepend "Titr";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-fonts-persian.conf) [test]
	pattern any family Equal "Persian_sansserif_default"
[edit]
	Edit family Assign "Roya";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-khmer.conf) [test]
	pattern any family Equal(ignore blanks) "serif"
[edit]
	Edit family Prepend "Khmer OS"";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-khmer.conf) [test]
	pattern any family Equal(ignore blanks) "sans-serif"
[edit]
	Edit family Prepend "Khmer OS"";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "serif"
[edit]
	Edit family Prepend "Artsounk" Comma "BPG UTF8 M" Comma "Kinnari" Comma "Norasi" Comma "Frank Ruehl" Comma "Dror" Comma "JG LaoTimes" Comma "Saysettha Unicode" Comma "Pigiarniq" Comma "B Davat" Comma "B Compset" Comma "Kacst-Qr" Comma "Urdu Nastaliq Unicode" Comma "Raghindi" Comma "Mukti Narrow" Comma "malayalam" Comma "Sampige" Comma "padmaa" Comma "Hapax Berbère" Comma "MS Mincho" Comma "SimSun" Comma "PMingLiu" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Bitmap Song" Comma "AR PL ShanHeiSun Uni" Comma "AR PL New Sung" Comma "ZYSong18030" Comma "HanyiSong" Comma "Hiragino Mincho ProN" Comma "Songti SC" Comma "Songti TC" Comma "SimSong" Comma "MgOpen Canonica" Comma "Sazanami Mincho" Comma "IPAMonaMincho" Comma "IPAMincho" Comma "Kochi Mincho" Comma "AR PL SungtiL GB" Comma "AR PL Mingti2L Big5" Comma "AR PL Zenkai Uni" Comma "ＭＳ 明朝" Comma "ZYSong18030" Comma "NanumMyeongjo" Comma "UnBatang" Comma "Baekmuk Batang" Comma "AppleMyungjo" Comma "KacstQura" Comma "Frank Ruehl CLM" Comma "Lohit Bengali" Comma "Lohit Gujarati" Comma "Lohit Hindi" Comma "Lohit Marathi" Comma "Lohit Maithili" Comma "Lohit Kashmiri" Comma "Lohit Konkani" Comma "Lohit Nepali" Comma "Lohit Sindhi" Comma "Lohit Punjabi" Comma "Lohit Tamil" Comma "Rachana" Comma "Lohit Malayalam" Comma "Lohit Kannada" Comma "Lohit Telugu" Comma "Lohit Oriya" Comma "LKLUG";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "sans-serif"
[edit]
	Edit family Prepend "Nachlieli" Comma "Lucida Sans Unicode" Comma "Yudit Unicode" Comma "Kerkis" Comma "ArmNet Helvetica" Comma "Artsounk" Comma "BPG UTF8 M" Comma "Waree" Comma "Loma" Comma "Garuda" Comma "Umpush" Comma "Saysettha Unicode" Comma "JG Lao Old Arial" Comma "GF Zemen Unicode" Comma "Pigiarniq" Comma "B Davat" Comma "B Compset" Comma "Kacst-Qr" Comma "Urdu Nastaliq Unicode" Comma "Raghindi" Comma "Mukti Narrow" Comma "malayalam" Comma "Sampige" Comma "padmaa" Comma "Hapax Berbère" Comma "MS Gothic" Comma "UmePlus P Gothic" Comma "Microsoft YaHei" Comma "Microsoft JhengHei" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Bitmap Song" Comma "AR PL ShanHeiSun Uni" Comma "AR PL New Sung" Comma "Hiragino Sans" Comma "PingFang SC" Comma "PingFang TC" Comma "PingFang HK" Comma "Hiragino Sans CNS" Comma "Hiragino Sans GB" Comma "MgOpen Modata" Comma "VL Gothic" Comma "IPAMonaGothic" Comma "IPAGothic" Comma "Sazanami Gothic" Comma "Kochi Gothic" Comma "AR PL KaitiM GB" Comma "AR PL KaitiM Big5" Comma "AR PL ShanHeiSun Uni" Comma "AR PL SungtiL GB" Comma "AR PL Mingti2L Big5" Comma "ＭＳ ゴシック" Comma "ZYSong18030" Comma "TSCu_Paranar" Comma "NanumGothic" Comma "UnDotum" Comma "Baekmuk Dotum" Comma "Baekmuk Gulim" Comma "Apple SD Gothic Neo" Comma "KacstQura" Comma "Lohit Bengali" Comma "Lohit Gujarati" Comma "Lohit Hindi" Comma "Lohit Marathi" Comma "Lohit Maithili" Comma "Lohit Kashmiri" Comma "Lohit Konkani" Comma "Lohit Nepali" Comma "Lohit Sindhi" Comma "Lohit Punjabi" Comma "Lohit Tamil" Comma "Meera" Comma "Lohit Malayalam" Comma "Lohit Kannada" Comma "Lohit Telugu" Comma "Lohit Oriya" Comma "LKLUG";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "monospace"
[edit]
	Edit family Prepend "Miriam Mono" Comma "VL Gothic" Comma "IPAMonaGothic" Comma "IPAGothic" Comma "Sazanami Gothic" Comma "Kochi Gothic" Comma "AR PL KaitiM GB" Comma "MS Gothic" Comma "UmePlus Gothic" Comma "NSimSun" Comma "MingLiu" Comma "AR PL ShanHeiSun Uni" Comma "AR PL New Sung Mono" Comma "HanyiSong" Comma "AR PL SungtiL GB" Comma "AR PL Mingti2L Big5" Comma "ZYSong18030" Comma "NanumGothicCoding" Comma "NanumGothic" Comma "UnDotum" Comma "Baekmuk Dotum" Comma "Baekmuk Gulim" Comma "TlwgTypo" Comma "TlwgTypist" Comma "TlwgTypewriter" Comma "TlwgMono" Comma "Hasida" Comma "GF Zemen Unicode" Comma "Hapax Berbère" Comma "Lohit Bengali" Comma "Lohit Gujarati" Comma "Lohit Hindi" Comma "Lohit Marathi" Comma "Lohit Maithili" Comma "Lohit Kashmiri" Comma "Lohit Konkani" Comma "Lohit Nepali" Comma "Lohit Sindhi" Comma "Lohit Punjabi" Comma "Lohit Tamil" Comma "Meera" Comma "Lohit Malayalam" Comma "Lohit Kannada" Comma "Lohit Telugu" Comma "Lohit Oriya" Comma "LKLUG";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/65-nonlatin.conf) [test]
	pattern any family Equal(ignore blanks) "system-ui"
[edit]
	Edit family Prepend "Noto Sans Arabic UI" Comma "Noto Sans Bengali UI" Comma "Noto Sans Devanagari UI" Comma "Noto Sans Gujarati UI" Comma "Noto Sans Gurmukhi UI" Comma "Noto Sans Kannada UI" Comma "Noto Sans Khmer UI" Comma "Noto Sans Lao UI" Comma "Noto Sans Malayalam UI" Comma "Noto Sans Myanmar UI" Comma "Noto Sans Oriya UI" Comma "Noto Sans Sinhala UI" Comma "Noto Sans Tamil UI" Comma "Noto Sans Telugu UI" Comma "Noto Sans Thai UI" Comma "Leelawadee UI" Comma "Nirmala UI" Comma "Yu Gothic UI" Comma "Meiryo UI" Comma "MS UI Gothic" Comma "Khmer UI" Comma "Lao UI" Comma "Microsoft YaHei UI" Comma "Microsoft JhengHei UI";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/66-noto-mono.conf) [test]
	pattern any family Equal(ignore blanks) "monospace"
[edit]
	Edit family Prepend "Noto Sans Mono";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/66-noto-sans.conf) [test]
	pattern any family Equal(ignore blanks) "sans-serif"
[edit]
	Edit family Prepend "Noto Sans";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/66-noto-serif.conf) [test]
	pattern any family Equal(ignore blanks) "serif"
[edit]
	Edit family Prepend "Noto Serif";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/69-unifont.conf) [test]
	pattern any family Equal(ignore blanks) "serif"
[edit]
	Edit family Prepend "FreeSerif" Comma "Code2000" Comma "Code2001";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/69-unifont.conf) [test]
	pattern any family Equal(ignore blanks) "sans-serif"
[edit]
	Edit family Prepend "FreeSans" Comma "Arial Unicode MS" Comma "Arial Unicode" Comma "Code2000" Comma "Code2001";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/69-unifont.conf) [test]
	pattern any family Equal(ignore blanks) "monospace"
[edit]
	Edit family Prepend "FreeMono";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "emoji"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "sans"
[edit]
	Edit family Append "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "serif"
[edit]
	Edit family Append "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "sans-serif"
[edit]
	Edit family Append "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "monospace"
[edit]
	Edit family Append "Twemoji";

Add Rule(kind:2, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	scan any family Contains "DejaVu"
[edit]
	Edit charset Assign charset  Minus charset
;

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "EmojiOne"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "Emoji One"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "EmojiOne Color"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "EmojiOne Mozilla"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "Apple Color Emoji"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "Segoe UI Emoji"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "Segoe UI Symbol"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "Noto Color Emoji"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "NotoColorEmoji"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "Android Emoji"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "Noto Emoji"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "Twitter Color Emoji"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "JoyPixels"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "Twemoji Mozilla"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "TwemojiMozilla"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "EmojiTwo"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "Emoji Two"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "EmojiSymbols"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:0, name: /usr/share/fontconfig/conf.avail/75-twemoji.conf) [test]
	pattern any family Equal "Symbola"
[edit]
	Edit family Assign "Twemoji";

Add Rule(kind:2, name: /usr/share/fontconfig/conf.avail/80-delicious.conf) [test]
	scan any family Equal(ignore blanks) "Delicious"
	scan any style Equal "Heavy"
[edit]
	Edit weight Assign heavy;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/90-synthetic.conf) [test]
	font any slant Equal roman
	pattern any slant NotEqual roman
[edit]
	Edit matrix Assign matrix  Times [1 0.2; 0 1];
	Edit slant Assign oblique;
	Edit embeddedbitmap Assign false;

Add Rule(kind:1, name: /usr/share/fontconfig/conf.avail/90-synthetic.conf) [test]
	font any weight LessEqual medium
	pattern any weight MoreEqual bold
[edit]
	Edit embolden Assign true;
	Edit weight Assign bold;

FcConfigSubstitute Pattern has 3 elts (size 16)
	family: "-apple-system"(s)
	lang: "en"(w)
	prgname: "fc-match"(s)


Rule Set: /etc/fonts/fonts.conf
FcConfigSubstitute test pattern any family Equal "mono"
No match
FcConfigSubstitute test pattern any family Equal "sans serif"
No match
FcConfigSubstitute test pattern any family Equal "sans"
No match
FcConfigSubstitute test pattern any family Equal "system ui"
No match

Rule Set: /etc/fonts/conf.d/10-hinting-slight.conf
Substitute Edit hintstyle Append hintslight

Append list before  [marker]
Append list after  1(i)(w)
FcConfigSubstitute editPattern has 4 elts (size 16)
	family: "-apple-system"(s)
	hintstyle: 1(i)(w)
	lang: "en"(w)
	prgname: "fc-match"(s)


Rule Set: /etc/fonts/conf.d/10-sub-pixel-rgb.conf
Substitute Edit rgba Append rgb

Append list before  [marker]
Append list after  1(i)(w)
FcConfigSubstitute editPattern has 5 elts (size 16)
	family: "-apple-system"(s)
	hintstyle: 1(i)(w)
	rgba: 1(i)(w)
	lang: "en"(w)
	prgname: "fc-match"(s)


Rule Set: /etc/fonts/conf.d/10-yes-antialias.conf
Substitute Edit antialias Append true

Append list before  [marker]
Append list after  True(w)
FcConfigSubstitute editPattern has 6 elts (size 16)
	family: "-apple-system"(s)
	antialias: True(w)
	hintstyle: 1(i)(w)
	rgba: 1(i)(w)
	lang: "en"(w)
	prgname: "fc-match"(s)


Rule Set: /etc/fonts/conf.d/11-lcdfilter-default.conf
Substitute Edit lcdfilter Append lcddefault

Append list before  [marker]
Append list after  1(i)(w)
FcConfigSubstitute editPattern has 7 elts (size 16)
	family: "-apple-system"(s)
	antialias: True(w)
	hintstyle: 1(i)(w)
	rgba: 1(i)(w)
	lang: "en"(w)
	lcdfilter: 1(i)(w)
	prgname: "fc-match"(s)


Rule Set: /etc/fonts/conf.d/30-metric-aliases.conf
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Helvetica LT Std"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nimbus Sans L"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nimbus Sans"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "TeX Gyre Heros"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nimbus Sans Narrow"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "TeX Gyre Heros Cn"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nimbus Roman No9 L"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nimbus Roman"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "TeX Gyre Termes"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Courier Std"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nimbus Mono L"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nimbus Mono"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nimbus Mono PS"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "TeX Gyre Cursor"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Avant Garde"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "URW Gothic L"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "URW Gothic"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "TeX Gyre Adventor"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Bookman"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "URW Bookman L"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Bookman URW"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "URW Bookman"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "TeX Gyre Bonum"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Bookman Old Style"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Zapf Chancery"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "URW Chancery L"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Chancery URW"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Z003"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "TeX Gyre Chorus"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "URW Palladio L"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Palladio URW"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "P052"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "TeX Gyre Pagella"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Palatino Linotype"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Century Schoolbook L"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Century SchoolBook URW"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "C059"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "TeX Gyre Schola"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Century Schoolbook"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Arimo"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Liberation Sans"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Liberation Sans Narrow"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Albany"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Albany AMT"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Tinos"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Liberation Serif"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Thorndale"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Thorndale AMT"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Cousine"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Liberation Mono"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Cumberland"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Cumberland AMT"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Gelasio"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Caladea"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Carlito"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "SymbolNeu"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Helvetica"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Helvetica Narrow"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Times"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Courier"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Arial"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Arial Narrow"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Times New Roman"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Courier New"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Helvetica"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Helvetica"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Helvetica Narrow"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Times"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Courier"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Courier"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "ITC Avant Garde Gothic"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "ITC Bookman"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "ITC Zapf Chancery"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Palatino"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "New Century Schoolbook"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Arial"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Arial Narrow"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Times New Roman"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Courier New"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Georgia"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Cambria"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Calibri"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Symbol"
No match

Rule Set: /etc/fonts/conf.d/40-nonlatin.conf
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nazli"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Lotoos"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Mitra"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Ferdosi"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Badr"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Zar"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Titr"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Jadid"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Kochi Mincho"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "AR PL SungtiL GB"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "AR PL Mingti2L Big5"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "ＭＳ 明朝"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "NanumMyeongjo"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "UnBatang"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Baekmuk Batang"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "MgOpen Canonica"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Sazanami Mincho"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "AR PL ZenKai Uni"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "ZYSong18030"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "FreeSerif"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "SimSun"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Arshia"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Elham"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Farnaz"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nasim"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Sina"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Roya"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Koodak"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Terafik"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Kochi Gothic"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "AR PL KaitiM GB"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "AR PL KaitiM Big5"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "ＭＳ ゴシック"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "NanumGothic"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "UnDotum"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Baekmuk Dotum"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "MgOpen Modata"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Sazanami Gothic"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "AR PL ShanHeiSun Uni"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "ZYSong18030"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "FreeSans"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "NSimSun"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "ZYSong18030"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "NanumGothicCoding"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "FreeMono"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Homa"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Kamran"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Fantezi"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Tabassom"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "IranNastaliq"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nafees Nastaleeq"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Arabic UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Bengali UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Devanagari UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Gujarati UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Gurmukhi UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Kannada UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Khmer UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Lao UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Malayalam UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Myanmar UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Oriya UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Sinhala UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Tamil UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Telugu UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Thai UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Leelawadee UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nirmala UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Yu Gothic UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Meiryo UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "MS UI Gothic"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Khmer UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Lao UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Microsoft JhengHei UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Microsoft YaHei UI"
No match

Rule Set: /etc/fonts/conf.d/40-wps-office.conf
FcConfigSubstitute test pattern any prgname Equal "wps"
No match
FcConfigSubstitute test pattern any prgname Equal "wps"
No match
FcConfigSubstitute test pattern any prgname Equal "wps"
No match
FcConfigSubstitute test pattern any prgname Equal "wps"
No match
FcConfigSubstitute test pattern any prgname Equal "wpp"
No match
FcConfigSubstitute test pattern any prgname Equal "wpp"
No match
FcConfigSubstitute test pattern any prgname Equal "wpp"
No match
FcConfigSubstitute test pattern any prgname Equal "wpp"
No match
FcConfigSubstitute test pattern any prgname Equal "et"
No match
FcConfigSubstitute test pattern any prgname Equal "et"
No match
FcConfigSubstitute test pattern any prgname Equal "et"
No match
FcConfigSubstitute test pattern any prgname Equal "et"
No match

Rule Set: /etc/fonts/conf.d/45-generic.conf
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Color Emoji"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Apple Color Emoji"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Segoe UI Emoji"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Twitter Color Emoji"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "EmojiOne Mozilla"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Emoji Two"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "JoyPixels"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Emoji One"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Emoji"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Android Emoji"
No match
FcConfigSubstitute test pattern any family Equal "emoji"
No match
FcConfigSubstitute test pattern any lang Equal "und-zsye"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "XITS Math"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "STIX Two Math"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Cambria Math"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Latin Modern Math"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Minion Math"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Lucida Math"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Asana Math"
No match
FcConfigSubstitute test pattern any family Equal "math"
No match
FcConfigSubstitute test pattern any lang Equal "und-zmth"
No match

Rule Set: /etc/fonts/conf.d/45-latin.conf
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Bitstream Vera Serif"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Cambria"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Constantia"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "DejaVu Serif"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Elephant"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Garamond"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Georgia"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Liberation Serif"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Luxi Serif"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "MS Serif"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nimbus Roman No9 L"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nimbus Roman"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Palatino Linotype"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Thorndale AMT"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Thorndale"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Times New Roman"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Times"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Albany AMT"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Albany"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Arial Unicode MS"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Arial"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Bitstream Vera Sans"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Britannic"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Calibri"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Candara"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Century Gothic"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Corbel"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "DejaVu Sans"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Helvetica LT Std"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Helvetica"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Haettenschweiler"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Liberation Sans"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "MS Sans Serif"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nimbus Sans L"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nimbus Sans"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Luxi Sans"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Tahoma"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Trebuchet MS"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Twentieth Century"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Verdana"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Andale Mono"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Bitstream Vera Sans Mono"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Consolas"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Courier New"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Courier Std"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Courier"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Cumberland AMT"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Cumberland"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "DejaVu Sans Mono"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Fixedsys"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Inconsolata"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Liberation Mono"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Luxi Mono"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nimbus Mono L"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nimbus Mono"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nimbus Mono PS"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Terminal"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Bauhaus Std"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Cooper Std"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Copperplate Gothic Std"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Impact"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Comic Sans MS"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "ITC Zapf Chancery Std"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Zapfino"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Cantarell"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Segoe UI"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Segoe UI Historic"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Segoe UI Symbol"
No match

Rule Set: /etc/fonts/conf.d/46-noto-mono.conf
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans Mono"
No match

Rule Set: /etc/fonts/conf.d/46-noto-sans.conf
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Sans"
No match

Rule Set: /etc/fonts/conf.d/46-noto-serif.conf
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Noto Serif"
No match

Rule Set: /etc/fonts/conf.d/48-spacing.conf
FcConfigSubstitute test pattern any spacing Equal 100
No match

Rule Set: /etc/fonts/conf.d/49-sansserif.conf
FcConfigSubstitute test pattern all family NotEqual "sans-serif"
FcConfigSubstitute test pattern all family NotEqual "serif"
FcConfigSubstitute test pattern all family NotEqual "monospace"
Substitute Edit family AppendLast "sans-serif"

Append list before  "-apple-system"(s) [marker]
Append list after  "-apple-system"(s) "sans-serif"(w)
FcConfigSubstitute editPattern has 7 elts (size 16)
	family: "-apple-system"(s) "sans-serif"(w)
	antialias: True(w)
	hintstyle: 1(i)(w)
	rgba: 1(i)(w)
	lang: "en"(w)
	lcdfilter: 1(i)(w)
	prgname: "fc-match"(s)


Rule Set: /home/tosakrin/.config/fontconfig/conf.d/02-System-extend.conf
FcConfigSubstitute test pattern any family Equal "system-ui"
No match
FcConfigSubstitute test pattern any family Equal "ui-monospace"
No match
FcConfigSubstitute test pattern any family Equal "ui-sans-serif"
No match
FcConfigSubstitute test pattern any family Equal "ui-serif"
No match
FcConfigSubstitute test pattern any family Equal "-apple-system"
Substitute Edit family Assign "sans-serif"

Append list before  "-apple-system"(s) [marker] "sans-serif"(w)
Append list after  "-apple-system"(s) "sans-serif"(s) "sans-serif"(w)
FcConfigSubstitute editPattern has 7 elts (size 16)
	family: "sans-serif"(s) "sans-serif"(w)
	antialias: True(w)
	hintstyle: 1(i)(w)
	rgba: 1(i)(w)
	lang: "en"(w)
	lcdfilter: 1(i)(w)
	prgname: "fc-match"(s)


Rule Set: /home/tosakrin/.config/fontconfig/conf.d/03-ENCN.conf
FcConfigSubstitute test pattern any lang Contains "en"
FcConfigSubstitute test pattern any family Contains "Noto Sans CJK"
No match
FcConfigSubstitute test pattern any lang Contains "en"
FcConfigSubstitute test pattern any family Contains "Noto Serif CJK"
No match
FcConfigSubstitute test pattern any lang Contains "cn"
No match
FcConfigSubstitute test pattern any lang Contains "cn"
No match

Rule Set: /home/tosakrin/.config/fontconfig/conf.d/04-CJK.conf
FcConfigSubstitute test pattern any lang Equal "zh-HK"
No match
FcConfigSubstitute test pattern any lang Equal "zh-HK"
No match
FcConfigSubstitute test pattern any lang Equal "zh-HK"
No match
FcConfigSubstitute test pattern any lang Equal "zh-TW"
No match
FcConfigSubstitute test pattern any lang Equal "zh-TW"
No match
FcConfigSubstitute test pattern any lang Equal "zh-TW"
No match
FcConfigSubstitute test pattern any lang Equal "ja"
No match
FcConfigSubstitute test pattern any lang Equal "ja"
No match
FcConfigSubstitute test pattern any lang Equal "ja"
No match
FcConfigSubstitute test pattern any lang Equal "ko"
No match
FcConfigSubstitute test pattern any lang Equal "ko"
No match
FcConfigSubstitute test pattern any lang Equal "ko"
No match

Rule Set: /home/tosakrin/.config/fontconfig/conf.d/05-QT.conf
FcConfigSubstitute test pattern any family Equal(ignore blanks) "sans-serif"
Substitute Edit family Prepend "Noto Sans Glagolitic" Comma "Noto Sans Javanese" Comma "Noto Serif Tangut" Comma "Noto Sans Egyptian Hieroglyphs" Comma "Noto Sans Cuneiform" Comma "HanaMinB" Comma "Noto Sans Rejang" Comma "Noto Sans Tai Viet" Comma "Noto Sans Cherokee" Comma "Noto Sans Tai Tham" Comma "Noto Sans Anatolian Hieroglyphs" Comma "Noto Sans Bamum" Comma "Symbols Nerd Font" Comma "Noto Sans Batak" Comma "Noto Sans Runic"

Prepend list before  [marker] "sans-serif"(s) "sans-serif"(w)
Prepend list after  "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "sans-serif"(s) "sans-serif"(w)
FcConfigSubstitute editPattern has 7 elts (size 16)
	family: "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "sans-serif"(s) "sans-serif"(w)
	antialias: True(w)
	hintstyle: 1(i)(w)
	rgba: 1(i)(w)
	lang: "en"(w)
	lcdfilter: 1(i)(w)
	prgname: "fc-match"(s)


Rule Set: /home/tosakrin/.config/fontconfig/conf.d/50-Replace.conf
FcConfigSubstitute test pattern any family Equal "Cantarell"
No match
FcConfigSubstitute test pattern any family Equal "Arial"
No match
FcConfigSubstitute test pattern any family Equal "Tahoma"
No match
FcConfigSubstitute test pattern any family Equal "Calibri"
No match
FcConfigSubstitute test pattern any family Equal "Helvetica"
No match
FcConfigSubstitute test pattern any family Equal "Liberation Sans"
No match
FcConfigSubstitute test pattern any family Contains "Microsoft YaHei"
No match
FcConfigSubstitute test pattern any family Equal "微软雅黑"
No match
FcConfigSubstitute test pattern any family Equal "SimHei"
No match
FcConfigSubstitute test pattern any family Equal "黑体"
No match
FcConfigSubstitute test pattern any family Equal "Times New Roman"
No match
FcConfigSubstitute test pattern any family Equal "Liberation Serif"
No match
FcConfigSubstitute test pattern any family Contains "SimSun"
No match
FcConfigSubstitute test pattern any family Equal "宋体"
No match
FcConfigSubstitute test pattern any family Equal "FangSong"
No match
FcConfigSubstitute test pattern any family Equal "仿宋"
No match
FcConfigSubstitute test pattern any family Contains "Source Code"
No match
FcConfigSubstitute test pattern any family Equal "Liberation Mono"
No match
FcConfigSubstitute test pattern any family Contains "宋体"
No match
FcConfigSubstitute test pattern any family Contains "SimSun"
No match
FcConfigSubstitute test pattern any family Contains "Microsoft YaHei"
No match
FcConfigSubstitute test pattern any family Contains "微软雅黑"
No match
FcConfigSubstitute test pattern any family Contains "Verdana"
No match
FcConfigSubstitute test pattern any family Contains "Arial"
No match
FcConfigSubstitute test pattern any family Contains "Helvetica"
No match
FcConfigSubstitute test pattern any family Contains "Tahoma"
No match
FcConfigSubstitute test pattern any family Contains "Menlo"
No match
FcConfigSubstitute test pattern any family Contains "Source Code Pro"
No match
FcConfigSubstitute test pattern any family Contains "PingFang"
No match
FcConfigSubstitute test pattern any family Contains "Liberation Mono"
No match
FcConfigSubstitute test pattern any family Contains "Liberation Sans"
No match
FcConfigSubstitute test pattern any family Contains "Liberation Serif"
No match

Rule Set: /home/tosakrin/.config/fontconfig/conf.d/51-General.conf
FcConfigSubstitute test pattern any family Equal "system-ui"
No match
FcConfigSubstitute test pattern any family Equal "sans-serif"
Substitute Edit family Prepend "Noto Sans" Comma "Noto Sans CJK SC" Comma "Noto Color Emoji" Comma "Symbols Nerd Font" Comma "Twemoji" Comma "Font Awesome 6 Free"

Prepend list before  "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) [marker] "sans-serif"(s) "sans-serif"(w)
Prepend list after  "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "sans-serif"(s) "sans-serif"(w)
FcConfigSubstitute editPattern has 7 elts (size 16)
	family: "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "sans-serif"(s) "sans-serif"(w)
	antialias: True(w)
	hintstyle: 1(i)(w)
	rgba: 1(i)(w)
	lang: "en"(w)
	lcdfilter: 1(i)(w)
	prgname: "fc-match"(s)

FcConfigSubstitute test pattern any family Equal "serif"
No match
FcConfigSubstitute test pattern any family Equal "monospace"
No match

Rule Set: /etc/fonts/conf.d/60-generic.conf
FcConfigSubstitute test pattern any lang Equal "und-zsye"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "emoji"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "math"
No match

Rule Set: /etc/fonts/conf.d/60-latin.conf
FcConfigSubstitute test pattern any family Equal(ignore blanks) "serif"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "sans-serif"
Substitute Edit family Prepend "Noto Sans" Comma "DejaVu Sans" Comma "Verdana" Comma "Arial" Comma "Albany AMT" Comma "Luxi Sans" Comma "Nimbus Sans L" Comma "Nimbus Sans" Comma "Helvetica" Comma "Lucida Sans Unicode" Comma "BPG Glaho International" Comma "Tahoma"

Prepend list before  "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) [marker] "sans-serif"(s) "sans-serif"(w)
Prepend list after  "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "Noto Sans"(w) "DejaVu Sans"(w) "Verdana"(w) "Arial"(w) "Albany AMT"(w) "Luxi Sans"(w) "Nimbus Sans L"(w) "Nimbus Sans"(w) "Helvetica"(w) "Lucida Sans Unicode"(w) "BPG Glaho International"(w) "Tahoma"(w) "sans-serif"(s) "sans-serif"(w)
FcConfigSubstitute editPattern has 7 elts (size 16)
	family: "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "Noto Sans"(w) "DejaVu Sans"(w) "Verdana"(w) "Arial"(w) "Albany AMT"(w) "Luxi Sans"(w) "Nimbus Sans L"(w) "Nimbus Sans"(w) "Helvetica"(w) "Lucida Sans Unicode"(w) "BPG Glaho International"(w) "Tahoma"(w) "sans-serif"(s) "sans-serif"(w)
	antialias: True(w)
	hintstyle: 1(i)(w)
	rgba: 1(i)(w)
	lang: "en"(w)
	lcdfilter: 1(i)(w)
	prgname: "fc-match"(s)

FcConfigSubstitute test pattern any family Equal(ignore blanks) "monospace"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "fantasy"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "cursive"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "system-ui"
No match

Rule Set: /etc/fonts/conf.d/65-fonts-persian.conf
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nesf"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nesf2"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nazanin"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Lotus"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Yaqut"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Yaghut"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Traffic"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Ferdowsi"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Fantezy"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Jadid"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Titr"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Kamran"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Homa"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Fantezi"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Tabassom"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Arshia"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Nasim"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Elham"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Farnaz"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Sina"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Persian_title"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Persian_fantasy"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "Persian_square"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "serif"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "sans-serif"
Substitute Edit family Append "Roya" Comma "Koodak" Comma "Terafik"

Append list before  "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "Noto Sans"(w) "DejaVu Sans"(w) "Verdana"(w) "Arial"(w) "Albany AMT"(w) "Luxi Sans"(w) "Nimbus Sans L"(w) "Nimbus Sans"(w) "Helvetica"(w) "Lucida Sans Unicode"(w) "BPG Glaho International"(w) "Tahoma"(w) "sans-serif"(s) [marker] "sans-serif"(w)
Append list after  "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "Noto Sans"(w) "DejaVu Sans"(w) "Verdana"(w) "Arial"(w) "Albany AMT"(w) "Luxi Sans"(w) "Nimbus Sans L"(w) "Nimbus Sans"(w) "Helvetica"(w) "Lucida Sans Unicode"(w) "BPG Glaho International"(w) "Tahoma"(w) "sans-serif"(s) "Roya"(w) "Koodak"(w) "Terafik"(w) "sans-serif"(w)
FcConfigSubstitute editPattern has 7 elts (size 16)
	family: "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "Noto Sans"(w) "DejaVu Sans"(w) "Verdana"(w) "Arial"(w) "Albany AMT"(w) "Luxi Sans"(w) "Nimbus Sans L"(w) "Nimbus Sans"(w) "Helvetica"(w) "Lucida Sans Unicode"(w) "BPG Glaho International"(w) "Tahoma"(w) "sans-serif"(s) "Roya"(w) "Koodak"(w) "Terafik"(w) "sans-serif"(w)
	antialias: True(w)
	hintstyle: 1(i)(w)
	rgba: 1(i)(w)
	lang: "en"(w)
	lcdfilter: 1(i)(w)
	prgname: "fc-match"(s)

FcConfigSubstitute test pattern any family Equal(ignore blanks) "monospace"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "fantasy"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "cursive"
No match
FcConfigSubstitute test pattern any family Equal "serif"
No match
FcConfigSubstitute test pattern any family Equal "sans-serif"
FcConfigSubstitute test pattern any weight MoreEqual 200
No match
FcConfigSubstitute test pattern any family Equal "Persian_sansserif_default"
No match
FcConfigSubstitute test pattern any family Equal "Persian_sansserif_default"
No match

Rule Set: /etc/fonts/conf.d/65-nonlatin.conf
FcConfigSubstitute test pattern any family Equal(ignore blanks) "serif"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "sans-serif"
Substitute Edit family Prepend "Nachlieli" Comma "Lucida Sans Unicode" Comma "Yudit Unicode" Comma "Kerkis" Comma "ArmNet Helvetica" Comma "Artsounk" Comma "BPG UTF8 M" Comma "Waree" Comma "Loma" Comma "Garuda" Comma "Umpush" Comma "Saysettha Unicode" Comma "JG Lao Old Arial" Comma "GF Zemen Unicode" Comma "Pigiarniq" Comma "B Davat" Comma "B Compset" Comma "Kacst-Qr" Comma "Urdu Nastaliq Unicode" Comma "Raghindi" Comma "Mukti Narrow" Comma "malayalam" Comma "Sampige" Comma "padmaa" Comma "Hapax Berbère" Comma "MS Gothic" Comma "UmePlus P Gothic" Comma "Microsoft YaHei" Comma "Microsoft JhengHei" Comma "WenQuanYi Zen Hei" Comma "WenQuanYi Bitmap Song" Comma "AR PL ShanHeiSun Uni" Comma "AR PL New Sung" Comma "Hiragino Sans" Comma "PingFang SC" Comma "PingFang TC" Comma "PingFang HK" Comma "Hiragino Sans CNS" Comma "Hiragino Sans GB" Comma "MgOpen Modata" Comma "VL Gothic" Comma "IPAMonaGothic" Comma "IPAGothic" Comma "Sazanami Gothic" Comma "Kochi Gothic" Comma "AR PL KaitiM GB" Comma "AR PL KaitiM Big5" Comma "AR PL ShanHeiSun Uni" Comma "AR PL SungtiL GB" Comma "AR PL Mingti2L Big5" Comma "ＭＳ ゴシック" Comma "ZYSong18030" Comma "TSCu_Paranar" Comma "NanumGothic" Comma "UnDotum" Comma "Baekmuk Dotum" Comma "Baekmuk Gulim" Comma "Apple SD Gothic Neo" Comma "KacstQura" Comma "Lohit Bengali" Comma "Lohit Gujarati" Comma "Lohit Hindi" Comma "Lohit Marathi" Comma "Lohit Maithili" Comma "Lohit Kashmiri" Comma "Lohit Konkani" Comma "Lohit Nepali" Comma "Lohit Sindhi" Comma "Lohit Punjabi" Comma "Lohit Tamil" Comma "Meera" Comma "Lohit Malayalam" Comma "Lohit Kannada" Comma "Lohit Telugu" Comma "Lohit Oriya" Comma "LKLUG"

Prepend list before  "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "Noto Sans"(w) "DejaVu Sans"(w) "Verdana"(w) "Arial"(w) "Albany AMT"(w) "Luxi Sans"(w) "Nimbus Sans L"(w) "Nimbus Sans"(w) "Helvetica"(w) "Lucida Sans Unicode"(w) "BPG Glaho International"(w) "Tahoma"(w) [marker] "sans-serif"(s) "Roya"(w) "Koodak"(w) "Terafik"(w) "sans-serif"(w)
Prepend list after  "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "Noto Sans"(w) "DejaVu Sans"(w) "Verdana"(w) "Arial"(w) "Albany AMT"(w) "Luxi Sans"(w) "Nimbus Sans L"(w) "Nimbus Sans"(w) "Helvetica"(w) "Lucida Sans Unicode"(w) "BPG Glaho International"(w) "Tahoma"(w) "Nachlieli"(w) "Lucida Sans Unicode"(w) "Yudit Unicode"(w) "Kerkis"(w) "ArmNet Helvetica"(w) "Artsounk"(w) "BPG UTF8 M"(w) "Waree"(w) "Loma"(w) "Garuda"(w) "Umpush"(w) "Saysettha Unicode"(w) "JG Lao Old Arial"(w) "GF Zemen Unicode"(w) "Pigiarniq"(w) "B Davat"(w) "B Compset"(w) "Kacst-Qr"(w) "Urdu Nastaliq Unicode"(w) "Raghindi"(w) "Mukti Narrow"(w) "malayalam"(w) "Sampige"(w) "padmaa"(w) "Hapax Berbère"(w) "MS Gothic"(w) "UmePlus P Gothic"(w) "Microsoft YaHei"(w) "Microsoft JhengHei"(w) "WenQuanYi Zen Hei"(w) "WenQuanYi Bitmap Song"(w) "AR PL ShanHeiSun Uni"(w) "AR PL New Sung"(w) "Hiragino Sans"(w) "PingFang SC"(w) "PingFang TC"(w) "PingFang HK"(w) "Hiragino Sans CNS"(w) "Hiragino Sans GB"(w) "MgOpen Modata"(w) "VL Gothic"(w) "IPAMonaGothic"(w) "IPAGothic"(w) "Sazanami Gothic"(w) "Kochi Gothic"(w) "AR PL KaitiM GB"(w) "AR PL KaitiM Big5"(w) "AR PL ShanHeiSun Uni"(w) "AR PL SungtiL GB"(w) "AR PL Mingti2L Big5"(w) "ＭＳ ゴシック"(w) "ZYSong18030"(w) "TSCu_Paranar"(w) "NanumGothic"(w) "UnDotum"(w) "Baekmuk Dotum"(w) "Baekmuk Gulim"(w) "Apple SD Gothic Neo"(w) "KacstQura"(w) "Lohit Bengali"(w) "Lohit Gujarati"(w) "Lohit Hindi"(w) "Lohit Marathi"(w) "Lohit Maithili"(w) "Lohit Kashmiri"(w) "Lohit Konkani"(w) "Lohit Nepali"(w) "Lohit Sindhi"(w) "Lohit Punjabi"(w) "Lohit Tamil"(w) "Meera"(w) "Lohit Malayalam"(w) "Lohit Kannada"(w) "Lohit Telugu"(w) "Lohit Oriya"(w) "LKLUG"(w) "sans-serif"(s) "Roya"(w) "Koodak"(w) "Terafik"(w) "sans-serif"(w)
FcConfigSubstitute editPattern has 7 elts (size 16)
	family: "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "Noto Sans"(w) "DejaVu Sans"(w) "Verdana"(w) "Arial"(w) "Albany AMT"(w) "Luxi Sans"(w) "Nimbus Sans L"(w) "Nimbus Sans"(w) "Helvetica"(w) "Lucida Sans Unicode"(w) "BPG Glaho International"(w) "Tahoma"(w) "Nachlieli"(w) "Lucida Sans Unicode"(w) "Yudit Unicode"(w) "Kerkis"(w) "ArmNet Helvetica"(w) "Artsounk"(w) "BPG UTF8 M"(w) "Waree"(w) "Loma"(w) "Garuda"(w) "Umpush"(w) "Saysettha Unicode"(w) "JG Lao Old Arial"(w) "GF Zemen Unicode"(w) "Pigiarniq"(w) "B Davat"(w) "B Compset"(w) "Kacst-Qr"(w) "Urdu Nastaliq Unicode"(w) "Raghindi"(w) "Mukti Narrow"(w) "malayalam"(w) "Sampige"(w) "padmaa"(w) "Hapax Berbère"(w) "MS Gothic"(w) "UmePlus P Gothic"(w) "Microsoft YaHei"(w) "Microsoft JhengHei"(w) "WenQuanYi Zen Hei"(w) "WenQuanYi Bitmap Song"(w) "AR PL ShanHeiSun Uni"(w) "AR PL New Sung"(w) "Hiragino Sans"(w) "PingFang SC"(w) "PingFang TC"(w) "PingFang HK"(w) "Hiragino Sans CNS"(w) "Hiragino Sans GB"(w) "MgOpen Modata"(w) "VL Gothic"(w) "IPAMonaGothic"(w) "IPAGothic"(w) "Sazanami Gothic"(w) "Kochi Gothic"(w) "AR PL KaitiM GB"(w) "AR PL KaitiM Big5"(w) "AR PL ShanHeiSun Uni"(w) "AR PL SungtiL GB"(w) "AR PL Mingti2L Big5"(w) "ＭＳ ゴシック"(w) "ZYSong18030"(w) "TSCu_Paranar"(w) "NanumGothic"(w) "UnDotum"(w) "Baekmuk Dotum"(w) "Baekmuk Gulim"(w) "Apple SD Gothic Neo"(w) "KacstQura"(w) "Lohit Bengali"(w) "Lohit Gujarati"(w) "Lohit Hindi"(w) "Lohit Marathi"(w) "Lohit Maithili"(w) "Lohit Kashmiri"(w) "Lohit Konkani"(w) "Lohit Nepali"(w) "Lohit Sindhi"(w) "Lohit Punjabi"(w) "Lohit Tamil"(w) "Meera"(w) "Lohit Malayalam"(w) "Lohit Kannada"(w) "Lohit Telugu"(w) "Lohit Oriya"(w) "LKLUG"(w) "sans-serif"(s) "Roya"(w) "Koodak"(w) "Terafik"(w) "sans-serif"(w)
	antialias: True(w)
	hintstyle: 1(i)(w)
	rgba: 1(i)(w)
	lang: "en"(w)
	lcdfilter: 1(i)(w)
	prgname: "fc-match"(s)

FcConfigSubstitute test pattern any family Equal(ignore blanks) "monospace"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "system-ui"
No match

Rule Set: /etc/fonts/conf.d/66-noto-mono.conf
FcConfigSubstitute test pattern any family Equal(ignore blanks) "monospace"
No match

Rule Set: /etc/fonts/conf.d/66-noto-sans.conf
FcConfigSubstitute test pattern any family Equal(ignore blanks) "sans-serif"
Substitute Edit family Prepend "Noto Sans"

Prepend list before  "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "Noto Sans"(w) "DejaVu Sans"(w) "Verdana"(w) "Arial"(w) "Albany AMT"(w) "Luxi Sans"(w) "Nimbus Sans L"(w) "Nimbus Sans"(w) "Helvetica"(w) "Lucida Sans Unicode"(w) "BPG Glaho International"(w) "Tahoma"(w) "Nachlieli"(w) "Lucida Sans Unicode"(w) "Yudit Unicode"(w) "Kerkis"(w) "ArmNet Helvetica"(w) "Artsounk"(w) "BPG UTF8 M"(w) "Waree"(w) "Loma"(w) "Garuda"(w) "Umpush"(w) "Saysettha Unicode"(w) "JG Lao Old Arial"(w) "GF Zemen Unicode"(w) "Pigiarniq"(w) "B Davat"(w) "B Compset"(w) "Kacst-Qr"(w) "Urdu Nastaliq Unicode"(w) "Raghindi"(w) "Mukti Narrow"(w) "malayalam"(w) "Sampige"(w) "padmaa"(w) "Hapax Berbère"(w) "MS Gothic"(w) "UmePlus P Gothic"(w) "Microsoft YaHei"(w) "Microsoft JhengHei"(w) "WenQuanYi Zen Hei"(w) "WenQuanYi Bitmap Song"(w) "AR PL ShanHeiSun Uni"(w) "AR PL New Sung"(w) "Hiragino Sans"(w) "PingFang SC"(w) "PingFang TC"(w) "PingFang HK"(w) "Hiragino Sans CNS"(w) "Hiragino Sans GB"(w) "MgOpen Modata"(w) "VL Gothic"(w) "IPAMonaGothic"(w) "IPAGothic"(w) "Sazanami Gothic"(w) "Kochi Gothic"(w) "AR PL KaitiM GB"(w) "AR PL KaitiM Big5"(w) "AR PL ShanHeiSun Uni"(w) "AR PL SungtiL GB"(w) "AR PL Mingti2L Big5"(w) "ＭＳ ゴシック"(w) "ZYSong18030"(w) "TSCu_Paranar"(w) "NanumGothic"(w) "UnDotum"(w) "Baekmuk Dotum"(w) "Baekmuk Gulim"(w) "Apple SD Gothic Neo"(w) "KacstQura"(w) "Lohit Bengali"(w) "Lohit Gujarati"(w) "Lohit Hindi"(w) "Lohit Marathi"(w) "Lohit Maithili"(w) "Lohit Kashmiri"(w) "Lohit Konkani"(w) "Lohit Nepali"(w) "Lohit Sindhi"(w) "Lohit Punjabi"(w) "Lohit Tamil"(w) "Meera"(w) "Lohit Malayalam"(w) "Lohit Kannada"(w) "Lohit Telugu"(w) "Lohit Oriya"(w) "LKLUG"(w) [marker] "sans-serif"(s) "Roya"(w) "Koodak"(w) "Terafik"(w) "sans-serif"(w)
Prepend list after  "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "Noto Sans"(w) "DejaVu Sans"(w) "Verdana"(w) "Arial"(w) "Albany AMT"(w) "Luxi Sans"(w) "Nimbus Sans L"(w) "Nimbus Sans"(w) "Helvetica"(w) "Lucida Sans Unicode"(w) "BPG Glaho International"(w) "Tahoma"(w) "Nachlieli"(w) "Lucida Sans Unicode"(w) "Yudit Unicode"(w) "Kerkis"(w) "ArmNet Helvetica"(w) "Artsounk"(w) "BPG UTF8 M"(w) "Waree"(w) "Loma"(w) "Garuda"(w) "Umpush"(w) "Saysettha Unicode"(w) "JG Lao Old Arial"(w) "GF Zemen Unicode"(w) "Pigiarniq"(w) "B Davat"(w) "B Compset"(w) "Kacst-Qr"(w) "Urdu Nastaliq Unicode"(w) "Raghindi"(w) "Mukti Narrow"(w) "malayalam"(w) "Sampige"(w) "padmaa"(w) "Hapax Berbère"(w) "MS Gothic"(w) "UmePlus P Gothic"(w) "Microsoft YaHei"(w) "Microsoft JhengHei"(w) "WenQuanYi Zen Hei"(w) "WenQuanYi Bitmap Song"(w) "AR PL ShanHeiSun Uni"(w) "AR PL New Sung"(w) "Hiragino Sans"(w) "PingFang SC"(w) "PingFang TC"(w) "PingFang HK"(w) "Hiragino Sans CNS"(w) "Hiragino Sans GB"(w) "MgOpen Modata"(w) "VL Gothic"(w) "IPAMonaGothic"(w) "IPAGothic"(w) "Sazanami Gothic"(w) "Kochi Gothic"(w) "AR PL KaitiM GB"(w) "AR PL KaitiM Big5"(w) "AR PL ShanHeiSun Uni"(w) "AR PL SungtiL GB"(w) "AR PL Mingti2L Big5"(w) "ＭＳ ゴシック"(w) "ZYSong18030"(w) "TSCu_Paranar"(w) "NanumGothic"(w) "UnDotum"(w) "Baekmuk Dotum"(w) "Baekmuk Gulim"(w) "Apple SD Gothic Neo"(w) "KacstQura"(w) "Lohit Bengali"(w) "Lohit Gujarati"(w) "Lohit Hindi"(w) "Lohit Marathi"(w) "Lohit Maithili"(w) "Lohit Kashmiri"(w) "Lohit Konkani"(w) "Lohit Nepali"(w) "Lohit Sindhi"(w) "Lohit Punjabi"(w) "Lohit Tamil"(w) "Meera"(w) "Lohit Malayalam"(w) "Lohit Kannada"(w) "Lohit Telugu"(w) "Lohit Oriya"(w) "LKLUG"(w) "Noto Sans"(w) "sans-serif"(s) "Roya"(w) "Koodak"(w) "Terafik"(w) "sans-serif"(w)
FcConfigSubstitute editPattern has 7 elts (size 16)
	family: "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "Noto Sans"(w) "DejaVu Sans"(w) "Verdana"(w) "Arial"(w) "Albany AMT"(w) "Luxi Sans"(w) "Nimbus Sans L"(w) "Nimbus Sans"(w) "Helvetica"(w) "Lucida Sans Unicode"(w) "BPG Glaho International"(w) "Tahoma"(w) "Nachlieli"(w) "Lucida Sans Unicode"(w) "Yudit Unicode"(w) "Kerkis"(w) "ArmNet Helvetica"(w) "Artsounk"(w) "BPG UTF8 M"(w) "Waree"(w) "Loma"(w) "Garuda"(w) "Umpush"(w) "Saysettha Unicode"(w) "JG Lao Old Arial"(w) "GF Zemen Unicode"(w) "Pigiarniq"(w) "B Davat"(w) "B Compset"(w) "Kacst-Qr"(w) "Urdu Nastaliq Unicode"(w) "Raghindi"(w) "Mukti Narrow"(w) "malayalam"(w) "Sampige"(w) "padmaa"(w) "Hapax Berbère"(w) "MS Gothic"(w) "UmePlus P Gothic"(w) "Microsoft YaHei"(w) "Microsoft JhengHei"(w) "WenQuanYi Zen Hei"(w) "WenQuanYi Bitmap Song"(w) "AR PL ShanHeiSun Uni"(w) "AR PL New Sung"(w) "Hiragino Sans"(w) "PingFang SC"(w) "PingFang TC"(w) "PingFang HK"(w) "Hiragino Sans CNS"(w) "Hiragino Sans GB"(w) "MgOpen Modata"(w) "VL Gothic"(w) "IPAMonaGothic"(w) "IPAGothic"(w) "Sazanami Gothic"(w) "Kochi Gothic"(w) "AR PL KaitiM GB"(w) "AR PL KaitiM Big5"(w) "AR PL ShanHeiSun Uni"(w) "AR PL SungtiL GB"(w) "AR PL Mingti2L Big5"(w) "ＭＳ ゴシック"(w) "ZYSong18030"(w) "TSCu_Paranar"(w) "NanumGothic"(w) "UnDotum"(w) "Baekmuk Dotum"(w) "Baekmuk Gulim"(w) "Apple SD Gothic Neo"(w) "KacstQura"(w) "Lohit Bengali"(w) "Lohit Gujarati"(w) "Lohit Hindi"(w) "Lohit Marathi"(w) "Lohit Maithili"(w) "Lohit Kashmiri"(w) "Lohit Konkani"(w) "Lohit Nepali"(w) "Lohit Sindhi"(w) "Lohit Punjabi"(w) "Lohit Tamil"(w) "Meera"(w) "Lohit Malayalam"(w) "Lohit Kannada"(w) "Lohit Telugu"(w) "Lohit Oriya"(w) "LKLUG"(w) "Noto Sans"(w) "sans-serif"(s) "Roya"(w) "Koodak"(w) "Terafik"(w) "sans-serif"(w)
	antialias: True(w)
	hintstyle: 1(i)(w)
	rgba: 1(i)(w)
	lang: "en"(w)
	lcdfilter: 1(i)(w)
	prgname: "fc-match"(s)


Rule Set: /etc/fonts/conf.d/66-noto-serif.conf
FcConfigSubstitute test pattern any family Equal(ignore blanks) "serif"
No match

Rule Set: /etc/fonts/conf.d/69-unifont.conf
FcConfigSubstitute test pattern any family Equal(ignore blanks) "serif"
No match
FcConfigSubstitute test pattern any family Equal(ignore blanks) "sans-serif"
Substitute Edit family Prepend "FreeSans" Comma "Arial Unicode MS" Comma "Arial Unicode" Comma "Code2000" Comma "Code2001"

Prepend list before  "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "Noto Sans"(w) "DejaVu Sans"(w) "Verdana"(w) "Arial"(w) "Albany AMT"(w) "Luxi Sans"(w) "Nimbus Sans L"(w) "Nimbus Sans"(w) "Helvetica"(w) "Lucida Sans Unicode"(w) "BPG Glaho International"(w) "Tahoma"(w) "Nachlieli"(w) "Lucida Sans Unicode"(w) "Yudit Unicode"(w) "Kerkis"(w) "ArmNet Helvetica"(w) "Artsounk"(w) "BPG UTF8 M"(w) "Waree"(w) "Loma"(w) "Garuda"(w) "Umpush"(w) "Saysettha Unicode"(w) "JG Lao Old Arial"(w) "GF Zemen Unicode"(w) "Pigiarniq"(w) "B Davat"(w) "B Compset"(w) "Kacst-Qr"(w) "Urdu Nastaliq Unicode"(w) "Raghindi"(w) "Mukti Narrow"(w) "malayalam"(w) "Sampige"(w) "padmaa"(w) "Hapax Berbère"(w) "MS Gothic"(w) "UmePlus P Gothic"(w) "Microsoft YaHei"(w) "Microsoft JhengHei"(w) "WenQuanYi Zen Hei"(w) "WenQuanYi Bitmap Song"(w) "AR PL ShanHeiSun Uni"(w) "AR PL New Sung"(w) "Hiragino Sans"(w) "PingFang SC"(w) "PingFang TC"(w) "PingFang HK"(w) "Hiragino Sans CNS"(w) "Hiragino Sans GB"(w) "MgOpen Modata"(w) "VL Gothic"(w) "IPAMonaGothic"(w) "IPAGothic"(w) "Sazanami Gothic"(w) "Kochi Gothic"(w) "AR PL KaitiM GB"(w) "AR PL KaitiM Big5"(w) "AR PL ShanHeiSun Uni"(w) "AR PL SungtiL GB"(w) "AR PL Mingti2L Big5"(w) "ＭＳ ゴシック"(w) "ZYSong18030"(w) "TSCu_Paranar"(w) "NanumGothic"(w) "UnDotum"(w) "Baekmuk Dotum"(w) "Baekmuk Gulim"(w) "Apple SD Gothic Neo"(w) "KacstQura"(w) "Lohit Bengali"(w) "Lohit Gujarati"(w) "Lohit Hindi"(w) "Lohit Marathi"(w) "Lohit Maithili"(w) "Lohit Kashmiri"(w) "Lohit Konkani"(w) "Lohit Nepali"(w) "Lohit Sindhi"(w) "Lohit Punjabi"(w) "Lohit Tamil"(w) "Meera"(w) "Lohit Malayalam"(w) "Lohit Kannada"(w) "Lohit Telugu"(w) "Lohit Oriya"(w) "LKLUG"(w) "Noto Sans"(w) [marker] "sans-serif"(s) "Roya"(w) "Koodak"(w) "Terafik"(w) "sans-serif"(w)
Prepend list after  "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "Noto Sans"(w) "DejaVu Sans"(w) "Verdana"(w) "Arial"(w) "Albany AMT"(w) "Luxi Sans"(w) "Nimbus Sans L"(w) "Nimbus Sans"(w) "Helvetica"(w) "Lucida Sans Unicode"(w) "BPG Glaho International"(w) "Tahoma"(w) "Nachlieli"(w) "Lucida Sans Unicode"(w) "Yudit Unicode"(w) "Kerkis"(w) "ArmNet Helvetica"(w) "Artsounk"(w) "BPG UTF8 M"(w) "Waree"(w) "Loma"(w) "Garuda"(w) "Umpush"(w) "Saysettha Unicode"(w) "JG Lao Old Arial"(w) "GF Zemen Unicode"(w) "Pigiarniq"(w) "B Davat"(w) "B Compset"(w) "Kacst-Qr"(w) "Urdu Nastaliq Unicode"(w) "Raghindi"(w) "Mukti Narrow"(w) "malayalam"(w) "Sampige"(w) "padmaa"(w) "Hapax Berbère"(w) "MS Gothic"(w) "UmePlus P Gothic"(w) "Microsoft YaHei"(w) "Microsoft JhengHei"(w) "WenQuanYi Zen Hei"(w) "WenQuanYi Bitmap Song"(w) "AR PL ShanHeiSun Uni"(w) "AR PL New Sung"(w) "Hiragino Sans"(w) "PingFang SC"(w) "PingFang TC"(w) "PingFang HK"(w) "Hiragino Sans CNS"(w) "Hiragino Sans GB"(w) "MgOpen Modata"(w) "VL Gothic"(w) "IPAMonaGothic"(w) "IPAGothic"(w) "Sazanami Gothic"(w) "Kochi Gothic"(w) "AR PL KaitiM GB"(w) "AR PL KaitiM Big5"(w) "AR PL ShanHeiSun Uni"(w) "AR PL SungtiL GB"(w) "AR PL Mingti2L Big5"(w) "ＭＳ ゴシック"(w) "ZYSong18030"(w) "TSCu_Paranar"(w) "NanumGothic"(w) "UnDotum"(w) "Baekmuk Dotum"(w) "Baekmuk Gulim"(w) "Apple SD Gothic Neo"(w) "KacstQura"(w) "Lohit Bengali"(w) "Lohit Gujarati"(w) "Lohit Hindi"(w) "Lohit Marathi"(w) "Lohit Maithili"(w) "Lohit Kashmiri"(w) "Lohit Konkani"(w) "Lohit Nepali"(w) "Lohit Sindhi"(w) "Lohit Punjabi"(w) "Lohit Tamil"(w) "Meera"(w) "Lohit Malayalam"(w) "Lohit Kannada"(w) "Lohit Telugu"(w) "Lohit Oriya"(w) "LKLUG"(w) "Noto Sans"(w) "FreeSans"(w) "Arial Unicode MS"(w) "Arial Unicode"(w) "Code2000"(w) "Code2001"(w) "sans-serif"(s) "Roya"(w) "Koodak"(w) "Terafik"(w) "sans-serif"(w)
FcConfigSubstitute editPattern has 7 elts (size 16)
	family: "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "Noto Sans"(w) "DejaVu Sans"(w) "Verdana"(w) "Arial"(w) "Albany AMT"(w) "Luxi Sans"(w) "Nimbus Sans L"(w) "Nimbus Sans"(w) "Helvetica"(w) "Lucida Sans Unicode"(w) "BPG Glaho International"(w) "Tahoma"(w) "Nachlieli"(w) "Lucida Sans Unicode"(w) "Yudit Unicode"(w) "Kerkis"(w) "ArmNet Helvetica"(w) "Artsounk"(w) "BPG UTF8 M"(w) "Waree"(w) "Loma"(w) "Garuda"(w) "Umpush"(w) "Saysettha Unicode"(w) "JG Lao Old Arial"(w) "GF Zemen Unicode"(w) "Pigiarniq"(w) "B Davat"(w) "B Compset"(w) "Kacst-Qr"(w) "Urdu Nastaliq Unicode"(w) "Raghindi"(w) "Mukti Narrow"(w) "malayalam"(w) "Sampige"(w) "padmaa"(w) "Hapax Berbère"(w) "MS Gothic"(w) "UmePlus P Gothic"(w) "Microsoft YaHei"(w) "Microsoft JhengHei"(w) "WenQuanYi Zen Hei"(w) "WenQuanYi Bitmap Song"(w) "AR PL ShanHeiSun Uni"(w) "AR PL New Sung"(w) "Hiragino Sans"(w) "PingFang SC"(w) "PingFang TC"(w) "PingFang HK"(w) "Hiragino Sans CNS"(w) "Hiragino Sans GB"(w) "MgOpen Modata"(w) "VL Gothic"(w) "IPAMonaGothic"(w) "IPAGothic"(w) "Sazanami Gothic"(w) "Kochi Gothic"(w) "AR PL KaitiM GB"(w) "AR PL KaitiM Big5"(w) "AR PL ShanHeiSun Uni"(w) "AR PL SungtiL GB"(w) "AR PL Mingti2L Big5"(w) "ＭＳ ゴシック"(w) "ZYSong18030"(w) "TSCu_Paranar"(w) "NanumGothic"(w) "UnDotum"(w) "Baekmuk Dotum"(w) "Baekmuk Gulim"(w) "Apple SD Gothic Neo"(w) "KacstQura"(w) "Lohit Bengali"(w) "Lohit Gujarati"(w) "Lohit Hindi"(w) "Lohit Marathi"(w) "Lohit Maithili"(w) "Lohit Kashmiri"(w) "Lohit Konkani"(w) "Lohit Nepali"(w) "Lohit Sindhi"(w) "Lohit Punjabi"(w) "Lohit Tamil"(w) "Meera"(w) "Lohit Malayalam"(w) "Lohit Kannada"(w) "Lohit Telugu"(w) "Lohit Oriya"(w) "LKLUG"(w) "Noto Sans"(w) "FreeSans"(w) "Arial Unicode MS"(w) "Arial Unicode"(w) "Code2000"(w) "Code2001"(w) "sans-serif"(s) "Roya"(w) "Koodak"(w) "Terafik"(w) "sans-serif"(w)
	antialias: True(w)
	hintstyle: 1(i)(w)
	rgba: 1(i)(w)
	lang: "en"(w)
	lcdfilter: 1(i)(w)
	prgname: "fc-match"(s)

FcConfigSubstitute test pattern any family Equal(ignore blanks) "monospace"
No match
FcConfigSubstitute donePattern has 7 elts (size 16)
	family: "Noto Sans Glagolitic"(w) "Noto Sans Javanese"(w) "Noto Serif Tangut"(w) "Noto Sans Egyptian Hieroglyphs"(w) "Noto Sans Cuneiform"(w) "HanaMinB"(w) "Noto Sans Rejang"(w) "Noto Sans Tai Viet"(w) "Noto Sans Cherokee"(w) "Noto Sans Tai Tham"(w) "Noto Sans Anatolian Hieroglyphs"(w) "Noto Sans Bamum"(w) "Symbols Nerd Font"(w) "Noto Sans Batak"(w) "Noto Sans Runic"(w) "Noto Sans"(s) "Noto Sans CJK SC"(s) "Noto Color Emoji"(s) "Symbols Nerd Font"(s) "Twemoji"(s) "Font Awesome 6 Free"(s) "Noto Sans"(w) "DejaVu Sans"(w) "Verdana"(w) "Arial"(w) "Albany AMT"(w) "Luxi Sans"(w) "Nimbus Sans L"(w) "Nimbus Sans"(w) "Helvetica"(w) "Lucida Sans Unicode"(w) "BPG Glaho International"(w) "Tahoma"(w) "Nachlieli"(w) "Lucida Sans Unicode"(w) "Yudit Unicode"(w) "Kerkis"(w) "ArmNet Helvetica"(w) "Artsounk"(w) "BPG UTF8 M"(w) "Waree"(w) "Loma"(w) "Garuda"(w) "Umpush"(w) "Saysettha Unicode"(w) "JG Lao Old Arial"(w) "GF Zemen Unicode"(w) "Pigiarniq"(w) "B Davat"(w) "B Compset"(w) "Kacst-Qr"(w) "Urdu Nastaliq Unicode"(w) "Raghindi"(w) "Mukti Narrow"(w) "malayalam"(w) "Sampige"(w) "padmaa"(w) "Hapax Berbère"(w) "MS Gothic"(w) "UmePlus P Gothic"(w) "Microsoft YaHei"(w) "Microsoft JhengHei"(w) "WenQuanYi Zen Hei"(w) "WenQuanYi Bitmap Song"(w) "AR PL ShanHeiSun Uni"(w) "AR PL New Sung"(w) "Hiragino Sans"(w) "PingFang SC"(w) "PingFang TC"(w) "PingFang HK"(w) "Hiragino Sans CNS"(w) "Hiragino Sans GB"(w) "MgOpen Modata"(w) "VL Gothic"(w) "IPAMonaGothic"(w) "IPAGothic"(w) "Sazanami Gothic"(w) "Kochi Gothic"(w) "AR PL KaitiM GB"(w) "AR PL KaitiM Big5"(w) "AR PL ShanHeiSun Uni"(w) "AR PL SungtiL GB"(w) "AR PL Mingti2L Big5"(w) "ＭＳ ゴシック"(w) "ZYSong18030"(w) "TSCu_Paranar"(w) "NanumGothic"(w) "UnDotum"(w) "Baekmuk Dotum"(w) "Baekmuk Gulim"(w) "Apple SD Gothic Neo"(w) "KacstQura"(w) "Lohit Bengali"(w) "Lohit Gujarati"(w) "Lohit Hindi"(w) "Lohit Marathi"(w) "Lohit Maithili"(w) "Lohit Kashmiri"(w) "Lohit Konkani"(w) "Lohit Nepali"(w) "Lohit Sindhi"(w) "Lohit Punjabi"(w) "Lohit Tamil"(w) "Meera"(w) "Lohit Malayalam"(w) "Lohit Kannada"(w) "Lohit Telugu"(w) "Lohit Oriya"(w) "LKLUG"(w) "Noto Sans"(w) "FreeSans"(w) "Arial Unicode MS"(w) "Arial Unicode"(w) "Code2000"(w) "Code2001"(w) "sans-serif"(s) "Roya"(w) "Koodak"(w) "Terafik"(w) "sans-serif"(w)
	antialias: True(w)
	hintstyle: 1(i)(w)
	rgba: 1(i)(w)
	lang: "en"(w)
	lcdfilter: 1(i)(w)
	prgname: "fc-match"(s)

FcConfigSubstitute Pattern has 43 elts (size 48)
	family: "Noto Sans"(s)
	familylang: "en"(s)
	style: "Regular"(s)
	stylelang: "en"(s)
	fullname: "Noto Sans Regular"(w)
	fullnamelang: "en"(s)
	slant: 0(i)(s)
	weight: 80(f)(s)
	width: 100(f)(s)
	size: 12(f)(s)
	pixelsize: 12.5(f)(s)
	foundry: "GOOG"(s)
	antialias: True(w)
	hintstyle: 1(i)(w)
	hinting: True(s)
	verticallayout: False(s)
	autohint: False(s)
	globaladvance: True(s)
	file: "/usr/share/fonts/noto/NotoSans-Regular.ttf"(s)
	index: 0(i)(w)
	outline: True(s)
	scalable: True(s)
	dpi: 75(f)(s)
	rgba: 1(i)(w)
	scale: 1(f)(s)
	charset: 
	0000: 00000000 ffffffff ffffffff 7fffffff 00000000 ffffffff ffffffff ffffffff
	0001: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0002: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0003: ffffffff ffffffff ffffffff fcffffff ffffd7f0 fffffffb ffffffff ffff0003
	0004: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0005: ffffffff 0000ffff 00000000 00000000 00000000 00000000 00000000 00000000
	0010: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 08000000
	001a: 00000000 00000000 00000000 00000000 00000000 ffff0000 00007fa1 00000000
	001c: 00000000 00000000 00000000 00000000 000001ff 00000000 00000000 00000000
	001d: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fbffffff
	001e: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	001f: 3f3fffff ffffffff aaff3f3f 3fffffff ffffffff ffdfffff efcfffdf 7fdcffff
	0020: ffffffff ffffffff ffffffff fff3ffdf 1fff7fff ffffffff 00000001 00010000
	0021: ffffffff ffffffff ffffffff 00000000 00000218 00000000 00000000 00000000
	0022: 00040000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	0025: 00000000 00000000 00000000 00000000 00000000 00000000 00001000 00000000
	002c: 00000000 00000000 00000000 ffffffff 00000000 00000000 00000000 00000000
	002d: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 ffffffff
	002e: ffffffff ffffffff 3fffffff 00000000 00000000 00000000 00000000 00000000
	00a6: 00000000 00000000 ffffffff ffffffff ffffffff 00000000 00000000 00000000
	00a7: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff 03eb07ff fffc0000
	00a9: 00000000 00004000 00000000 00000000 00000000 00000000 00000000 00000000
	00ab: 00000000 ffff0000 ffffffff 00000fff 00000000 00000000 00000000 00000000
	00fb: 0000007f 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	00fe: 00000001 0000ffff 00000000 00000000 00000000 00000000 00000000 80000000
	00ff: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 30000000
	0107: 00000000 00000000 00000000 00000000 ffffffbf 07fdffff 00000000 00000000
	01df: 7fffffff 00000000 00000000 00000000 00000000 00000000 00000000 00000000
(s)
	lang: aa|ab|af|ast|av|ay|az-az|ba|bm|be|bg|bi|bin|br|bs|bua|ca|ce|ch|chm|co|cs|cu|cv|cy|da|de|el|en|eo|es|et|eu|fi|fj|fo|fr|ff|fur|fy|ga|gd|gl|gn|gv|ha|haw|ho|hr|hu|ia|ig|id|ie|ik|io|is|it|kaa|ki|kk|kl|ku-am|kum|kv|kw|ky|la|lb|lez|ln|lt|lv|mg|mh|mi|mk|mo|mt|nb|nds|nl|nn|no|nr|nso|ny|oc|om|os|pl|pt|rm|ro|ru|sah|sco|se|sel|sh|shs|sk|sl|sm|sma|smj|smn|sms|so|sq|sr|ss|st|sv|sw|tg|tk|tl|tn|to|tr|ts|tt|tw|tyv|uk|uz|ve|vi|vo|vot|wa|wen|wo|xh|yap|yo|zu|ak|an|ber-dz|crh|csb|ee|fat|fil|hsb|ht|hz|jv|kab|kj|kr|ku-tr|kwm|lg|li|mn-mn|ms|na|ng|nv|pap-an|pap-aw|qu|quz|rn|rw|sc|sg|sn|su|ty|za|agr|ayc|bem|dsb|lij|mfe|mhr|miq|mjw|nhn|niu|rif|sgs|szl|tpi|unm|wae|yuw(s)
	fontversion: 131924(i)(s)
	capability: "otlayout:DFLT otlayout:cyrl otlayout:dev2 otlayout:grek otlayout:latn"(w)
	fontformat: "TrueType"(s)
	embeddedbitmap: True(s)
	decorative: False(s)
	lcdfilter: 1(i)(w)
	namelang: "en"(s)
	prgname: "fc-match"(s)
	postscriptname: "NotoSans-Regular"(s)
	color: False(s)
	symbol: False(s)
	variable: False(s)
	fonthashint: True(s)
	order: 0(i)(s)
	desktop: "Hyprland"(s)
	namedinstance: False(s)


Rule Set: /etc/fonts/conf.d/10-scale-bitmap-fonts.conf
FcConfigSubstitute test font any outline Equal false
No match
FcConfigSubstitute test font any outline Equal false
No match
FcConfigSubstitute test font any scalingnotneeded Equal true
No match
FcConfigSubstitute test font any outline Equal false
No match

Rule Set: /etc/fonts/conf.d/20-unhint-small-vera.conf
FcConfigSubstitute test font any family Equal(ignore blanks) "Bitstream Vera Sans"
No match
FcConfigSubstitute test font any family Equal(ignore blanks) "Bitstream Vera Serif"
No match
FcConfigSubstitute test font any family Equal(ignore blanks) "Bitstream Vera Sans Mono"
No match

Rule Set: /home/tosakrin/.config/fontconfig/conf.d/01-Render.conf
Substitute Edit autohint Assign false

Append list before  [marker]
Append list after  False(w)
FcConfigSubstitute editPattern has 43 elts (size 48)
	family: "Noto Sans"(s)
	familylang: "en"(s)
	style: "Regular"(s)
	stylelang: "en"(s)
	fullname: "Noto Sans Regular"(w)
	fullnamelang: "en"(s)
	slant: 0(i)(s)
	weight: 80(f)(s)
	width: 100(f)(s)
	size: 12(f)(s)
	pixelsize: 12.5(f)(s)
	foundry: "GOOG"(s)
	antialias: True(w)
	hintstyle: 1(i)(w)
	hinting: True(s)
	verticallayout: False(s)
	autohint: False(w)
	globaladvance: True(s)
	file: "/usr/share/fonts/noto/NotoSans-Regular.ttf"(s)
	index: 0(i)(w)
	outline: True(s)
	scalable: True(s)
	dpi: 75(f)(s)
	rgba: 1(i)(w)
	scale: 1(f)(s)
	charset: 
	0000: 00000000 ffffffff ffffffff 7fffffff 00000000 ffffffff ffffffff ffffffff
	0001: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0002: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0003: ffffffff ffffffff ffffffff fcffffff ffffd7f0 fffffffb ffffffff ffff0003
	0004: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0005: ffffffff 0000ffff 00000000 00000000 00000000 00000000 00000000 00000000
	0010: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 08000000
	001a: 00000000 00000000 00000000 00000000 00000000 ffff0000 00007fa1 00000000
	001c: 00000000 00000000 00000000 00000000 000001ff 00000000 00000000 00000000
	001d: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fbffffff
	001e: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	001f: 3f3fffff ffffffff aaff3f3f 3fffffff ffffffff ffdfffff efcfffdf 7fdcffff
	0020: ffffffff ffffffff ffffffff fff3ffdf 1fff7fff ffffffff 00000001 00010000
	0021: ffffffff ffffffff ffffffff 00000000 00000218 00000000 00000000 00000000
	0022: 00040000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	0025: 00000000 00000000 00000000 00000000 00000000 00000000 00001000 00000000
	002c: 00000000 00000000 00000000 ffffffff 00000000 00000000 00000000 00000000
	002d: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 ffffffff
	002e: ffffffff ffffffff 3fffffff 00000000 00000000 00000000 00000000 00000000
	00a6: 00000000 00000000 ffffffff ffffffff ffffffff 00000000 00000000 00000000
	00a7: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff 03eb07ff fffc0000
	00a9: 00000000 00004000 00000000 00000000 00000000 00000000 00000000 00000000
	00ab: 00000000 ffff0000 ffffffff 00000fff 00000000 00000000 00000000 00000000
	00fb: 0000007f 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	00fe: 00000001 0000ffff 00000000 00000000 00000000 00000000 00000000 80000000
	00ff: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 30000000
	0107: 00000000 00000000 00000000 00000000 ffffffbf 07fdffff 00000000 00000000
	01df: 7fffffff 00000000 00000000 00000000 00000000 00000000 00000000 00000000
(s)
	lang: aa|ab|af|ast|av|ay|az-az|ba|bm|be|bg|bi|bin|br|bs|bua|ca|ce|ch|chm|co|cs|cu|cv|cy|da|de|el|en|eo|es|et|eu|fi|fj|fo|fr|ff|fur|fy|ga|gd|gl|gn|gv|ha|haw|ho|hr|hu|ia|ig|id|ie|ik|io|is|it|kaa|ki|kk|kl|ku-am|kum|kv|kw|ky|la|lb|lez|ln|lt|lv|mg|mh|mi|mk|mo|mt|nb|nds|nl|nn|no|nr|nso|ny|oc|om|os|pl|pt|rm|ro|ru|sah|sco|se|sel|sh|shs|sk|sl|sm|sma|smj|smn|sms|so|sq|sr|ss|st|sv|sw|tg|tk|tl|tn|to|tr|ts|tt|tw|tyv|uk|uz|ve|vi|vo|vot|wa|wen|wo|xh|yap|yo|zu|ak|an|ber-dz|crh|csb|ee|fat|fil|hsb|ht|hz|jv|kab|kj|kr|ku-tr|kwm|lg|li|mn-mn|ms|na|ng|nv|pap-an|pap-aw|qu|quz|rn|rw|sc|sg|sn|su|ty|za|agr|ayc|bem|dsb|lij|mfe|mhr|miq|mjw|nhn|niu|rif|sgs|szl|tpi|unm|wae|yuw(s)
	fontversion: 131924(i)(s)
	capability: "otlayout:DFLT otlayout:cyrl otlayout:dev2 otlayout:grek otlayout:latn"(w)
	fontformat: "TrueType"(s)
	embeddedbitmap: True(s)
	decorative: False(s)
	lcdfilter: 1(i)(w)
	namelang: "en"(s)
	prgname: "fc-match"(s)
	postscriptname: "NotoSans-Regular"(s)
	color: False(s)
	symbol: False(s)
	variable: False(s)
	fonthashint: True(s)
	order: 0(i)(s)
	desktop: "Hyprland"(s)
	namedinstance: False(s)

Substitute Edit hinting Assign true

Append list before  [marker]
Append list after  True(w)
FcConfigSubstitute editPattern has 43 elts (size 48)
	family: "Noto Sans"(s)
	familylang: "en"(s)
	style: "Regular"(s)
	stylelang: "en"(s)
	fullname: "Noto Sans Regular"(w)
	fullnamelang: "en"(s)
	slant: 0(i)(s)
	weight: 80(f)(s)
	width: 100(f)(s)
	size: 12(f)(s)
	pixelsize: 12.5(f)(s)
	foundry: "GOOG"(s)
	antialias: True(w)
	hintstyle: 1(i)(w)
	hinting: True(w)
	verticallayout: False(s)
	autohint: False(w)
	globaladvance: True(s)
	file: "/usr/share/fonts/noto/NotoSans-Regular.ttf"(s)
	index: 0(i)(w)
	outline: True(s)
	scalable: True(s)
	dpi: 75(f)(s)
	rgba: 1(i)(w)
	scale: 1(f)(s)
	charset: 
	0000: 00000000 ffffffff ffffffff 7fffffff 00000000 ffffffff ffffffff ffffffff
	0001: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0002: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0003: ffffffff ffffffff ffffffff fcffffff ffffd7f0 fffffffb ffffffff ffff0003
	0004: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0005: ffffffff 0000ffff 00000000 00000000 00000000 00000000 00000000 00000000
	0010: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 08000000
	001a: 00000000 00000000 00000000 00000000 00000000 ffff0000 00007fa1 00000000
	001c: 00000000 00000000 00000000 00000000 000001ff 00000000 00000000 00000000
	001d: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fbffffff
	001e: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	001f: 3f3fffff ffffffff aaff3f3f 3fffffff ffffffff ffdfffff efcfffdf 7fdcffff
	0020: ffffffff ffffffff ffffffff fff3ffdf 1fff7fff ffffffff 00000001 00010000
	0021: ffffffff ffffffff ffffffff 00000000 00000218 00000000 00000000 00000000
	0022: 00040000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	0025: 00000000 00000000 00000000 00000000 00000000 00000000 00001000 00000000
	002c: 00000000 00000000 00000000 ffffffff 00000000 00000000 00000000 00000000
	002d: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 ffffffff
	002e: ffffffff ffffffff 3fffffff 00000000 00000000 00000000 00000000 00000000
	00a6: 00000000 00000000 ffffffff ffffffff ffffffff 00000000 00000000 00000000
	00a7: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff 03eb07ff fffc0000
	00a9: 00000000 00004000 00000000 00000000 00000000 00000000 00000000 00000000
	00ab: 00000000 ffff0000 ffffffff 00000fff 00000000 00000000 00000000 00000000
	00fb: 0000007f 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	00fe: 00000001 0000ffff 00000000 00000000 00000000 00000000 00000000 80000000
	00ff: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 30000000
	0107: 00000000 00000000 00000000 00000000 ffffffbf 07fdffff 00000000 00000000
	01df: 7fffffff 00000000 00000000 00000000 00000000 00000000 00000000 00000000
(s)
	lang: aa|ab|af|ast|av|ay|az-az|ba|bm|be|bg|bi|bin|br|bs|bua|ca|ce|ch|chm|co|cs|cu|cv|cy|da|de|el|en|eo|es|et|eu|fi|fj|fo|fr|ff|fur|fy|ga|gd|gl|gn|gv|ha|haw|ho|hr|hu|ia|ig|id|ie|ik|io|is|it|kaa|ki|kk|kl|ku-am|kum|kv|kw|ky|la|lb|lez|ln|lt|lv|mg|mh|mi|mk|mo|mt|nb|nds|nl|nn|no|nr|nso|ny|oc|om|os|pl|pt|rm|ro|ru|sah|sco|se|sel|sh|shs|sk|sl|sm|sma|smj|smn|sms|so|sq|sr|ss|st|sv|sw|tg|tk|tl|tn|to|tr|ts|tt|tw|tyv|uk|uz|ve|vi|vo|vot|wa|wen|wo|xh|yap|yo|zu|ak|an|ber-dz|crh|csb|ee|fat|fil|hsb|ht|hz|jv|kab|kj|kr|ku-tr|kwm|lg|li|mn-mn|ms|na|ng|nv|pap-an|pap-aw|qu|quz|rn|rw|sc|sg|sn|su|ty|za|agr|ayc|bem|dsb|lij|mfe|mhr|miq|mjw|nhn|niu|rif|sgs|szl|tpi|unm|wae|yuw(s)
	fontversion: 131924(i)(s)
	capability: "otlayout:DFLT otlayout:cyrl otlayout:dev2 otlayout:grek otlayout:latn"(w)
	fontformat: "TrueType"(s)
	embeddedbitmap: True(s)
	decorative: False(s)
	lcdfilter: 1(i)(w)
	namelang: "en"(s)
	prgname: "fc-match"(s)
	postscriptname: "NotoSans-Regular"(s)
	color: False(s)
	symbol: False(s)
	variable: False(s)
	fonthashint: True(s)
	order: 0(i)(s)
	desktop: "Hyprland"(s)
	namedinstance: False(s)

Substitute Edit hintstyle Assign hintslight

Append list before  [marker]
Append list after  1(i)(w)
FcConfigSubstitute editPattern has 43 elts (size 48)
	family: "Noto Sans"(s)
	familylang: "en"(s)
	style: "Regular"(s)
	stylelang: "en"(s)
	fullname: "Noto Sans Regular"(w)
	fullnamelang: "en"(s)
	slant: 0(i)(s)
	weight: 80(f)(s)
	width: 100(f)(s)
	size: 12(f)(s)
	pixelsize: 12.5(f)(s)
	foundry: "GOOG"(s)
	antialias: True(w)
	hintstyle: 1(i)(w)
	hinting: True(w)
	verticallayout: False(s)
	autohint: False(w)
	globaladvance: True(s)
	file: "/usr/share/fonts/noto/NotoSans-Regular.ttf"(s)
	index: 0(i)(w)
	outline: True(s)
	scalable: True(s)
	dpi: 75(f)(s)
	rgba: 1(i)(w)
	scale: 1(f)(s)
	charset: 
	0000: 00000000 ffffffff ffffffff 7fffffff 00000000 ffffffff ffffffff ffffffff
	0001: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0002: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0003: ffffffff ffffffff ffffffff fcffffff ffffd7f0 fffffffb ffffffff ffff0003
	0004: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0005: ffffffff 0000ffff 00000000 00000000 00000000 00000000 00000000 00000000
	0010: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 08000000
	001a: 00000000 00000000 00000000 00000000 00000000 ffff0000 00007fa1 00000000
	001c: 00000000 00000000 00000000 00000000 000001ff 00000000 00000000 00000000
	001d: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fbffffff
	001e: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	001f: 3f3fffff ffffffff aaff3f3f 3fffffff ffffffff ffdfffff efcfffdf 7fdcffff
	0020: ffffffff ffffffff ffffffff fff3ffdf 1fff7fff ffffffff 00000001 00010000
	0021: ffffffff ffffffff ffffffff 00000000 00000218 00000000 00000000 00000000
	0022: 00040000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	0025: 00000000 00000000 00000000 00000000 00000000 00000000 00001000 00000000
	002c: 00000000 00000000 00000000 ffffffff 00000000 00000000 00000000 00000000
	002d: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 ffffffff
	002e: ffffffff ffffffff 3fffffff 00000000 00000000 00000000 00000000 00000000
	00a6: 00000000 00000000 ffffffff ffffffff ffffffff 00000000 00000000 00000000
	00a7: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff 03eb07ff fffc0000
	00a9: 00000000 00004000 00000000 00000000 00000000 00000000 00000000 00000000
	00ab: 00000000 ffff0000 ffffffff 00000fff 00000000 00000000 00000000 00000000
	00fb: 0000007f 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	00fe: 00000001 0000ffff 00000000 00000000 00000000 00000000 00000000 80000000
	00ff: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 30000000
	0107: 00000000 00000000 00000000 00000000 ffffffbf 07fdffff 00000000 00000000
	01df: 7fffffff 00000000 00000000 00000000 00000000 00000000 00000000 00000000
(s)
	lang: aa|ab|af|ast|av|ay|az-az|ba|bm|be|bg|bi|bin|br|bs|bua|ca|ce|ch|chm|co|cs|cu|cv|cy|da|de|el|en|eo|es|et|eu|fi|fj|fo|fr|ff|fur|fy|ga|gd|gl|gn|gv|ha|haw|ho|hr|hu|ia|ig|id|ie|ik|io|is|it|kaa|ki|kk|kl|ku-am|kum|kv|kw|ky|la|lb|lez|ln|lt|lv|mg|mh|mi|mk|mo|mt|nb|nds|nl|nn|no|nr|nso|ny|oc|om|os|pl|pt|rm|ro|ru|sah|sco|se|sel|sh|shs|sk|sl|sm|sma|smj|smn|sms|so|sq|sr|ss|st|sv|sw|tg|tk|tl|tn|to|tr|ts|tt|tw|tyv|uk|uz|ve|vi|vo|vot|wa|wen|wo|xh|yap|yo|zu|ak|an|ber-dz|crh|csb|ee|fat|fil|hsb|ht|hz|jv|kab|kj|kr|ku-tr|kwm|lg|li|mn-mn|ms|na|ng|nv|pap-an|pap-aw|qu|quz|rn|rw|sc|sg|sn|su|ty|za|agr|ayc|bem|dsb|lij|mfe|mhr|miq|mjw|nhn|niu|rif|sgs|szl|tpi|unm|wae|yuw(s)
	fontversion: 131924(i)(s)
	capability: "otlayout:DFLT otlayout:cyrl otlayout:dev2 otlayout:grek otlayout:latn"(w)
	fontformat: "TrueType"(s)
	embeddedbitmap: True(s)
	decorative: False(s)
	lcdfilter: 1(i)(w)
	namelang: "en"(s)
	prgname: "fc-match"(s)
	postscriptname: "NotoSans-Regular"(s)
	color: False(s)
	symbol: False(s)
	variable: False(s)
	fonthashint: True(s)
	order: 0(i)(s)
	desktop: "Hyprland"(s)
	namedinstance: False(s)

Substitute Edit antialias Assign true

Append list before  [marker]
Append list after  True(w)
FcConfigSubstitute editPattern has 43 elts (size 48)
	family: "Noto Sans"(s)
	familylang: "en"(s)
	style: "Regular"(s)
	stylelang: "en"(s)
	fullname: "Noto Sans Regular"(w)
	fullnamelang: "en"(s)
	slant: 0(i)(s)
	weight: 80(f)(s)
	width: 100(f)(s)
	size: 12(f)(s)
	pixelsize: 12.5(f)(s)
	foundry: "GOOG"(s)
	antialias: True(w)
	hintstyle: 1(i)(w)
	hinting: True(w)
	verticallayout: False(s)
	autohint: False(w)
	globaladvance: True(s)
	file: "/usr/share/fonts/noto/NotoSans-Regular.ttf"(s)
	index: 0(i)(w)
	outline: True(s)
	scalable: True(s)
	dpi: 75(f)(s)
	rgba: 1(i)(w)
	scale: 1(f)(s)
	charset: 
	0000: 00000000 ffffffff ffffffff 7fffffff 00000000 ffffffff ffffffff ffffffff
	0001: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0002: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0003: ffffffff ffffffff ffffffff fcffffff ffffd7f0 fffffffb ffffffff ffff0003
	0004: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0005: ffffffff 0000ffff 00000000 00000000 00000000 00000000 00000000 00000000
	0010: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 08000000
	001a: 00000000 00000000 00000000 00000000 00000000 ffff0000 00007fa1 00000000
	001c: 00000000 00000000 00000000 00000000 000001ff 00000000 00000000 00000000
	001d: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fbffffff
	001e: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	001f: 3f3fffff ffffffff aaff3f3f 3fffffff ffffffff ffdfffff efcfffdf 7fdcffff
	0020: ffffffff ffffffff ffffffff fff3ffdf 1fff7fff ffffffff 00000001 00010000
	0021: ffffffff ffffffff ffffffff 00000000 00000218 00000000 00000000 00000000
	0022: 00040000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	0025: 00000000 00000000 00000000 00000000 00000000 00000000 00001000 00000000
	002c: 00000000 00000000 00000000 ffffffff 00000000 00000000 00000000 00000000
	002d: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 ffffffff
	002e: ffffffff ffffffff 3fffffff 00000000 00000000 00000000 00000000 00000000
	00a6: 00000000 00000000 ffffffff ffffffff ffffffff 00000000 00000000 00000000
	00a7: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff 03eb07ff fffc0000
	00a9: 00000000 00004000 00000000 00000000 00000000 00000000 00000000 00000000
	00ab: 00000000 ffff0000 ffffffff 00000fff 00000000 00000000 00000000 00000000
	00fb: 0000007f 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	00fe: 00000001 0000ffff 00000000 00000000 00000000 00000000 00000000 80000000
	00ff: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 30000000
	0107: 00000000 00000000 00000000 00000000 ffffffbf 07fdffff 00000000 00000000
	01df: 7fffffff 00000000 00000000 00000000 00000000 00000000 00000000 00000000
(s)
	lang: aa|ab|af|ast|av|ay|az-az|ba|bm|be|bg|bi|bin|br|bs|bua|ca|ce|ch|chm|co|cs|cu|cv|cy|da|de|el|en|eo|es|et|eu|fi|fj|fo|fr|ff|fur|fy|ga|gd|gl|gn|gv|ha|haw|ho|hr|hu|ia|ig|id|ie|ik|io|is|it|kaa|ki|kk|kl|ku-am|kum|kv|kw|ky|la|lb|lez|ln|lt|lv|mg|mh|mi|mk|mo|mt|nb|nds|nl|nn|no|nr|nso|ny|oc|om|os|pl|pt|rm|ro|ru|sah|sco|se|sel|sh|shs|sk|sl|sm|sma|smj|smn|sms|so|sq|sr|ss|st|sv|sw|tg|tk|tl|tn|to|tr|ts|tt|tw|tyv|uk|uz|ve|vi|vo|vot|wa|wen|wo|xh|yap|yo|zu|ak|an|ber-dz|crh|csb|ee|fat|fil|hsb|ht|hz|jv|kab|kj|kr|ku-tr|kwm|lg|li|mn-mn|ms|na|ng|nv|pap-an|pap-aw|qu|quz|rn|rw|sc|sg|sn|su|ty|za|agr|ayc|bem|dsb|lij|mfe|mhr|miq|mjw|nhn|niu|rif|sgs|szl|tpi|unm|wae|yuw(s)
	fontversion: 131924(i)(s)
	capability: "otlayout:DFLT otlayout:cyrl otlayout:dev2 otlayout:grek otlayout:latn"(w)
	fontformat: "TrueType"(s)
	embeddedbitmap: True(s)
	decorative: False(s)
	lcdfilter: 1(i)(w)
	namelang: "en"(s)
	prgname: "fc-match"(s)
	postscriptname: "NotoSans-Regular"(s)
	color: False(s)
	symbol: False(s)
	variable: False(s)
	fonthashint: True(s)
	order: 0(i)(s)
	desktop: "Hyprland"(s)
	namedinstance: False(s)

Substitute Edit lcdfilter Assign lcddefault

Append list before  [marker]
Append list after  1(i)(w)
FcConfigSubstitute editPattern has 43 elts (size 48)
	family: "Noto Sans"(s)
	familylang: "en"(s)
	style: "Regular"(s)
	stylelang: "en"(s)
	fullname: "Noto Sans Regular"(w)
	fullnamelang: "en"(s)
	slant: 0(i)(s)
	weight: 80(f)(s)
	width: 100(f)(s)
	size: 12(f)(s)
	pixelsize: 12.5(f)(s)
	foundry: "GOOG"(s)
	antialias: True(w)
	hintstyle: 1(i)(w)
	hinting: True(w)
	verticallayout: False(s)
	autohint: False(w)
	globaladvance: True(s)
	file: "/usr/share/fonts/noto/NotoSans-Regular.ttf"(s)
	index: 0(i)(w)
	outline: True(s)
	scalable: True(s)
	dpi: 75(f)(s)
	rgba: 1(i)(w)
	scale: 1(f)(s)
	charset: 
	0000: 00000000 ffffffff ffffffff 7fffffff 00000000 ffffffff ffffffff ffffffff
	0001: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0002: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0003: ffffffff ffffffff ffffffff fcffffff ffffd7f0 fffffffb ffffffff ffff0003
	0004: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0005: ffffffff 0000ffff 00000000 00000000 00000000 00000000 00000000 00000000
	0010: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 08000000
	001a: 00000000 00000000 00000000 00000000 00000000 ffff0000 00007fa1 00000000
	001c: 00000000 00000000 00000000 00000000 000001ff 00000000 00000000 00000000
	001d: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fbffffff
	001e: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	001f: 3f3fffff ffffffff aaff3f3f 3fffffff ffffffff ffdfffff efcfffdf 7fdcffff
	0020: ffffffff ffffffff ffffffff fff3ffdf 1fff7fff ffffffff 00000001 00010000
	0021: ffffffff ffffffff ffffffff 00000000 00000218 00000000 00000000 00000000
	0022: 00040000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	0025: 00000000 00000000 00000000 00000000 00000000 00000000 00001000 00000000
	002c: 00000000 00000000 00000000 ffffffff 00000000 00000000 00000000 00000000
	002d: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 ffffffff
	002e: ffffffff ffffffff 3fffffff 00000000 00000000 00000000 00000000 00000000
	00a6: 00000000 00000000 ffffffff ffffffff ffffffff 00000000 00000000 00000000
	00a7: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff 03eb07ff fffc0000
	00a9: 00000000 00004000 00000000 00000000 00000000 00000000 00000000 00000000
	00ab: 00000000 ffff0000 ffffffff 00000fff 00000000 00000000 00000000 00000000
	00fb: 0000007f 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	00fe: 00000001 0000ffff 00000000 00000000 00000000 00000000 00000000 80000000
	00ff: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 30000000
	0107: 00000000 00000000 00000000 00000000 ffffffbf 07fdffff 00000000 00000000
	01df: 7fffffff 00000000 00000000 00000000 00000000 00000000 00000000 00000000
(s)
	lang: aa|ab|af|ast|av|ay|az-az|ba|bm|be|bg|bi|bin|br|bs|bua|ca|ce|ch|chm|co|cs|cu|cv|cy|da|de|el|en|eo|es|et|eu|fi|fj|fo|fr|ff|fur|fy|ga|gd|gl|gn|gv|ha|haw|ho|hr|hu|ia|ig|id|ie|ik|io|is|it|kaa|ki|kk|kl|ku-am|kum|kv|kw|ky|la|lb|lez|ln|lt|lv|mg|mh|mi|mk|mo|mt|nb|nds|nl|nn|no|nr|nso|ny|oc|om|os|pl|pt|rm|ro|ru|sah|sco|se|sel|sh|shs|sk|sl|sm|sma|smj|smn|sms|so|sq|sr|ss|st|sv|sw|tg|tk|tl|tn|to|tr|ts|tt|tw|tyv|uk|uz|ve|vi|vo|vot|wa|wen|wo|xh|yap|yo|zu|ak|an|ber-dz|crh|csb|ee|fat|fil|hsb|ht|hz|jv|kab|kj|kr|ku-tr|kwm|lg|li|mn-mn|ms|na|ng|nv|pap-an|pap-aw|qu|quz|rn|rw|sc|sg|sn|su|ty|za|agr|ayc|bem|dsb|lij|mfe|mhr|miq|mjw|nhn|niu|rif|sgs|szl|tpi|unm|wae|yuw(s)
	fontversion: 131924(i)(s)
	capability: "otlayout:DFLT otlayout:cyrl otlayout:dev2 otlayout:grek otlayout:latn"(w)
	fontformat: "TrueType"(s)
	embeddedbitmap: True(s)
	decorative: False(s)
	lcdfilter: 1(i)(w)
	namelang: "en"(s)
	prgname: "fc-match"(s)
	postscriptname: "NotoSans-Regular"(s)
	color: False(s)
	symbol: False(s)
	variable: False(s)
	fonthashint: True(s)
	order: 0(i)(s)
	desktop: "Hyprland"(s)
	namedinstance: False(s)

Substitute Edit rgba Assign rgb

Append list before  [marker]
Append list after  1(i)(w)
FcConfigSubstitute editPattern has 43 elts (size 48)
	family: "Noto Sans"(s)
	familylang: "en"(s)
	style: "Regular"(s)
	stylelang: "en"(s)
	fullname: "Noto Sans Regular"(w)
	fullnamelang: "en"(s)
	slant: 0(i)(s)
	weight: 80(f)(s)
	width: 100(f)(s)
	size: 12(f)(s)
	pixelsize: 12.5(f)(s)
	foundry: "GOOG"(s)
	antialias: True(w)
	hintstyle: 1(i)(w)
	hinting: True(w)
	verticallayout: False(s)
	autohint: False(w)
	globaladvance: True(s)
	file: "/usr/share/fonts/noto/NotoSans-Regular.ttf"(s)
	index: 0(i)(w)
	outline: True(s)
	scalable: True(s)
	dpi: 75(f)(s)
	rgba: 1(i)(w)
	scale: 1(f)(s)
	charset: 
	0000: 00000000 ffffffff ffffffff 7fffffff 00000000 ffffffff ffffffff ffffffff
	0001: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0002: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0003: ffffffff ffffffff ffffffff fcffffff ffffd7f0 fffffffb ffffffff ffff0003
	0004: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0005: ffffffff 0000ffff 00000000 00000000 00000000 00000000 00000000 00000000
	0010: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 08000000
	001a: 00000000 00000000 00000000 00000000 00000000 ffff0000 00007fa1 00000000
	001c: 00000000 00000000 00000000 00000000 000001ff 00000000 00000000 00000000
	001d: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fbffffff
	001e: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	001f: 3f3fffff ffffffff aaff3f3f 3fffffff ffffffff ffdfffff efcfffdf 7fdcffff
	0020: ffffffff ffffffff ffffffff fff3ffdf 1fff7fff ffffffff 00000001 00010000
	0021: ffffffff ffffffff ffffffff 00000000 00000218 00000000 00000000 00000000
	0022: 00040000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	0025: 00000000 00000000 00000000 00000000 00000000 00000000 00001000 00000000
	002c: 00000000 00000000 00000000 ffffffff 00000000 00000000 00000000 00000000
	002d: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 ffffffff
	002e: ffffffff ffffffff 3fffffff 00000000 00000000 00000000 00000000 00000000
	00a6: 00000000 00000000 ffffffff ffffffff ffffffff 00000000 00000000 00000000
	00a7: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff 03eb07ff fffc0000
	00a9: 00000000 00004000 00000000 00000000 00000000 00000000 00000000 00000000
	00ab: 00000000 ffff0000 ffffffff 00000fff 00000000 00000000 00000000 00000000
	00fb: 0000007f 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	00fe: 00000001 0000ffff 00000000 00000000 00000000 00000000 00000000 80000000
	00ff: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 30000000
	0107: 00000000 00000000 00000000 00000000 ffffffbf 07fdffff 00000000 00000000
	01df: 7fffffff 00000000 00000000 00000000 00000000 00000000 00000000 00000000
(s)
	lang: aa|ab|af|ast|av|ay|az-az|ba|bm|be|bg|bi|bin|br|bs|bua|ca|ce|ch|chm|co|cs|cu|cv|cy|da|de|el|en|eo|es|et|eu|fi|fj|fo|fr|ff|fur|fy|ga|gd|gl|gn|gv|ha|haw|ho|hr|hu|ia|ig|id|ie|ik|io|is|it|kaa|ki|kk|kl|ku-am|kum|kv|kw|ky|la|lb|lez|ln|lt|lv|mg|mh|mi|mk|mo|mt|nb|nds|nl|nn|no|nr|nso|ny|oc|om|os|pl|pt|rm|ro|ru|sah|sco|se|sel|sh|shs|sk|sl|sm|sma|smj|smn|sms|so|sq|sr|ss|st|sv|sw|tg|tk|tl|tn|to|tr|ts|tt|tw|tyv|uk|uz|ve|vi|vo|vot|wa|wen|wo|xh|yap|yo|zu|ak|an|ber-dz|crh|csb|ee|fat|fil|hsb|ht|hz|jv|kab|kj|kr|ku-tr|kwm|lg|li|mn-mn|ms|na|ng|nv|pap-an|pap-aw|qu|quz|rn|rw|sc|sg|sn|su|ty|za|agr|ayc|bem|dsb|lij|mfe|mhr|miq|mjw|nhn|niu|rif|sgs|szl|tpi|unm|wae|yuw(s)
	fontversion: 131924(i)(s)
	capability: "otlayout:DFLT otlayout:cyrl otlayout:dev2 otlayout:grek otlayout:latn"(w)
	fontformat: "TrueType"(s)
	embeddedbitmap: True(s)
	decorative: False(s)
	lcdfilter: 1(i)(w)
	namelang: "en"(s)
	prgname: "fc-match"(s)
	postscriptname: "NotoSans-Regular"(s)
	color: False(s)
	symbol: False(s)
	variable: False(s)
	fonthashint: True(s)
	order: 0(i)(s)
	desktop: "Hyprland"(s)
	namedinstance: False(s)


Rule Set: /etc/fonts/conf.d/65-fonts-persian.conf
FcConfigSubstitute test font any foundry Equal "TURNED-OFF"
No match
FcConfigSubstitute test font any foundry Equal "farsiweb"
No match

Rule Set: /etc/fonts/conf.d/90-synthetic.conf
FcConfigSubstitute test font any slant Equal roman
FcConfigSubstitute test pattern any slant NotEqual roman
No match
FcConfigSubstitute test font any weight LessEqual medium
FcConfigSubstitute test pattern any weight MoreEqual bold
No match
FcConfigSubstitute donePattern has 43 elts (size 48)
	family: "Noto Sans"(s)
	familylang: "en"(s)
	style: "Regular"(s)
	stylelang: "en"(s)
	fullname: "Noto Sans Regular"(w)
	fullnamelang: "en"(s)
	slant: 0(i)(s)
	weight: 80(f)(s)
	width: 100(f)(s)
	size: 12(f)(s)
	pixelsize: 12.5(f)(s)
	foundry: "GOOG"(s)
	antialias: True(w)
	hintstyle: 1(i)(w)
	hinting: True(w)
	verticallayout: False(s)
	autohint: False(w)
	globaladvance: True(s)
	file: "/usr/share/fonts/noto/NotoSans-Regular.ttf"(s)
	index: 0(i)(w)
	outline: True(s)
	scalable: True(s)
	dpi: 75(f)(s)
	rgba: 1(i)(w)
	scale: 1(f)(s)
	charset: 
	0000: 00000000 ffffffff ffffffff 7fffffff 00000000 ffffffff ffffffff ffffffff
	0001: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0002: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0003: ffffffff ffffffff ffffffff fcffffff ffffd7f0 fffffffb ffffffff ffff0003
	0004: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	0005: ffffffff 0000ffff 00000000 00000000 00000000 00000000 00000000 00000000
	0010: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 08000000
	001a: 00000000 00000000 00000000 00000000 00000000 ffff0000 00007fa1 00000000
	001c: 00000000 00000000 00000000 00000000 000001ff 00000000 00000000 00000000
	001d: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fbffffff
	001e: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
	001f: 3f3fffff ffffffff aaff3f3f 3fffffff ffffffff ffdfffff efcfffdf 7fdcffff
	0020: ffffffff ffffffff ffffffff fff3ffdf 1fff7fff ffffffff 00000001 00010000
	0021: ffffffff ffffffff ffffffff 00000000 00000218 00000000 00000000 00000000
	0022: 00040000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	0025: 00000000 00000000 00000000 00000000 00000000 00000000 00001000 00000000
	002c: 00000000 00000000 00000000 ffffffff 00000000 00000000 00000000 00000000
	002d: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 ffffffff
	002e: ffffffff ffffffff 3fffffff 00000000 00000000 00000000 00000000 00000000
	00a6: 00000000 00000000 ffffffff ffffffff ffffffff 00000000 00000000 00000000
	00a7: ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff 03eb07ff fffc0000
	00a9: 00000000 00004000 00000000 00000000 00000000 00000000 00000000 00000000
	00ab: 00000000 ffff0000 ffffffff 00000fff 00000000 00000000 00000000 00000000
	00fb: 0000007f 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	00fe: 00000001 0000ffff 00000000 00000000 00000000 00000000 00000000 80000000
	00ff: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 30000000
	0107: 00000000 00000000 00000000 00000000 ffffffbf 07fdffff 00000000 00000000
	01df: 7fffffff 00000000 00000000 00000000 00000000 00000000 00000000 00000000
(s)
	lang: aa|ab|af|ast|av|ay|az-az|ba|bm|be|bg|bi|bin|br|bs|bua|ca|ce|ch|chm|co|cs|cu|cv|cy|da|de|el|en|eo|es|et|eu|fi|fj|fo|fr|ff|fur|fy|ga|gd|gl|gn|gv|ha|haw|ho|hr|hu|ia|ig|id|ie|ik|io|is|it|kaa|ki|kk|kl|ku-am|kum|kv|kw|ky|la|lb|lez|ln|lt|lv|mg|mh|mi|mk|mo|mt|nb|nds|nl|nn|no|nr|nso|ny|oc|om|os|pl|pt|rm|ro|ru|sah|sco|se|sel|sh|shs|sk|sl|sm|sma|smj|smn|sms|so|sq|sr|ss|st|sv|sw|tg|tk|tl|tn|to|tr|ts|tt|tw|tyv|uk|uz|ve|vi|vo|vot|wa|wen|wo|xh|yap|yo|zu|ak|an|ber-dz|crh|csb|ee|fat|fil|hsb|ht|hz|jv|kab|kj|kr|ku-tr|kwm|lg|li|mn-mn|ms|na|ng|nv|pap-an|pap-aw|qu|quz|rn|rw|sc|sg|sn|su|ty|za|agr|ayc|bem|dsb|lij|mfe|mhr|miq|mjw|nhn|niu|rif|sgs|szl|tpi|unm|wae|yuw(s)
	fontversion: 131924(i)(s)
	capability: "otlayout:DFLT otlayout:cyrl otlayout:dev2 otlayout:grek otlayout:latn"(w)
	fontformat: "TrueType"(s)
	embeddedbitmap: True(s)
	decorative: False(s)
	lcdfilter: 1(i)(w)
	namelang: "en"(s)
	prgname: "fc-match"(s)
	postscriptname: "NotoSans-Regular"(s)
	color: False(s)
	symbol: False(s)
	variable: False(s)
	fonthashint: True(s)
	order: 0(i)(s)
	desktop: "Hyprland"(s)
	namedinstance: False(s)

NotoSans-Regular.ttf: "Noto Sans" "Regular"
